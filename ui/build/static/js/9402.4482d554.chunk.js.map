{"version":3,"file":"static/js/9402.4482d554.chunk.js","mappings":"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","sources":["pages/Admin/Questions/components/Action/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dropdown } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport { Icon, Modal } from '@/components';\nimport {\n  changeQuestionStatus,\n  questionOperation,\n  reopenQuestion,\n} from '@/services';\nimport { useReportModal, useToast } from '@/hooks';\n\nconst AnswerActions = ({ itemData, refreshList, curFilter, show, pin }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'delete' });\n  const closeModal = useReportModal(refreshList);\n  const toast = useToast();\n\n  const handleAction = (type) => {\n    if (type === 'delete') {\n      Modal.confirm({\n        title: t('title', { keyPrefix: 'delete' }),\n        content:\n          itemData.answer_count > 0\n            ? t('question', { keyPrefix: 'delete' })\n            : t('other', { keyPrefix: 'delete' }),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('delete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeQuestionStatus(itemData.id, 'deleted').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'undelete') {\n      Modal.confirm({\n        title: t('undelete_title'),\n        content: t('undelete_desc'),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('undelete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeQuestionStatus(itemData.id, 'available').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'close') {\n      closeModal.onShow({\n        type: 'question',\n        id: itemData.id,\n        action: 'close',\n      });\n    }\n\n    if (type === 'reopen') {\n      Modal.confirm({\n        title: t('title', { keyPrefix: 'question_detail.reopen' }),\n        content: t('content', { keyPrefix: 'question_detail.reopen' }),\n        cancelBtnVariant: 'link',\n        confirmText: t('confirm_btn', { keyPrefix: 'question_detail.reopen' }),\n        onConfirm: () => {\n          reopenQuestion({\n            question_id: itemData.id,\n          }).then(() => {\n            toast.onShow({\n              msg: t('post_reopen', { keyPrefix: 'messages' }),\n              variant: 'success',\n            });\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'list' || type === 'unlist') {\n      const keyPrefix =\n        type === 'list' ? 'question_detail.list' : 'question_detail.unlist';\n      Modal.confirm({\n        title: t('title', { keyPrefix }),\n        content: t('content', { keyPrefix }),\n        cancelBtnVariant: 'link',\n        confirmText: t('confirm_btn', { keyPrefix }),\n        onConfirm: () => {\n          questionOperation({\n            id: itemData.id,\n            operation: type === 'list' ? 'show' : 'hide',\n          }).then(() => {\n            toast.onShow({\n              msg: t(`post_${type}`, { keyPrefix: 'messages' }),\n              variant: 'success',\n            });\n            refreshList();\n          });\n        },\n      });\n    }\n  };\n\n  if (curFilter === 'pending') {\n    return (\n      <Link\n        to={`/review?type=queued_post&objectId=${itemData.id}`}\n        className=\"btn btn-link p-0\"\n        title={t('review', { keyPrefix: 'header.nav' })}>\n        <Icon name=\"three-dots-vertical\" />\n      </Link>\n    );\n  }\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"link\" className=\"no-toggle p-0\">\n        <Icon\n          name=\"three-dots-vertical\"\n          title={t('action', { keyPrefix: 'admin.answers' })}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        {curFilter === 'normal' && (\n          <Dropdown.Item onClick={() => handleAction('close')}>\n            {t('close', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {curFilter === 'closed' && (\n          <Dropdown.Item onClick={() => handleAction('reopen')}>\n            {t('reopen', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {curFilter !== 'deleted' ? (\n          <Dropdown.Item onClick={() => handleAction('delete')}>\n            {t('delete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        ) : (\n          <Dropdown.Item onClick={() => handleAction('undelete')}>\n            {t('undelete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {show === 2 ? (\n          <Dropdown.Item onClick={() => handleAction('list')}>\n            {t('list', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        ) : (\n          pin !== 2 && (\n            <Dropdown.Item onClick={() => handleAction('unlist')}>\n              {t('unlist', { keyPrefix: 'btns' })}\n            </Dropdown.Item>\n          )\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AnswerActions;\n"],"names":["AnswerActions","itemData","refreshList","curFilter","show","pin","t","useTranslation","keyPrefix","closeModal","useReportModal","toast","useToast","handleAction","type","Modal","confirm","title","content","answer_count","cancelBtnVariant","confirmBtnVariant","confirmText","onConfirm","changeQuestionStatus","id","then","onShow","action","reopenQuestion","question_id","msg","variant","questionOperation","operation","_jsx","Link","to","className","children","Icon","name","_jsxs","Dropdown","Toggle","Menu","Item","onClick"],"sourceRoot":""}