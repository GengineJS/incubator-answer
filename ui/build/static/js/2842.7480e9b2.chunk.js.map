{"version":3,"file":"static/js/2842.7480e9b2.chunk.js","mappings":"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","sources":["pages/Review/components/ApproveDropdown/index.tsx","pages/Review/components/EditPostModal/index.tsx","pages/Review/components/FlagContent/index.tsx","pages/Review/utils/generateData.ts","webpack://answer-static/./src/pages/Review/components/EditPostModal/index.scss?1b05"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useState } from 'react';\nimport { Dropdown, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Modal } from '@/components';\nimport { putFlagReviewAction } from '@/services';\nimport { useReportModal, useToast } from '@/hooks';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport type * as Type from '@/common/interface';\nimport EditPostModal from '../EditPostModal';\n\ninterface IProps {\n  itemData: Type.FlagReviewItem | null;\n  curFilter: string;\n  objectType: Type.FlagReviewItem['object_type'] | '';\n  approveCallback: () => void;\n}\n\nconst Index: FC<IProps> = ({\n  itemData,\n  objectType,\n  curFilter,\n  approveCallback,\n}) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'page_review' });\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [showEditPostModal, setShowEditPostModal] = useState(false);\n  const closeModal = useReportModal(approveCallback);\n  const toast = useToast();\n  const dCaptcha = useCaptchaPlugin('delete');\n\n  const handleEditPostModalState = () => {\n    setShowEditPostModal(!showEditPostModal);\n  };\n\n  const submitReviewAction = () => {\n    const req: Type.PutFlagReviewParams = {\n      operation_type: 'delete_post',\n      flag_id: String(itemData?.flag_id),\n      captcha_code: undefined,\n      captcha_id: undefined,\n    };\n    dCaptcha?.resolveCaptchaReq(req);\n\n    delete req.captcha_code;\n    delete req.captcha_id;\n\n    putFlagReviewAction(req)\n      .then(async () => {\n        await dCaptcha?.close();\n        let msg = '';\n        if (objectType === 'question') {\n          msg = t('post_deleted', { keyPrefix: 'messages' });\n        }\n        if (objectType === 'answer') {\n          msg = t('tip_answer_deleted');\n        }\n        if (objectType === 'answer' || objectType === 'question') {\n          toast.onShow({\n            msg,\n            variant: 'success',\n          });\n        }\n        approveCallback();\n      })\n      .catch((ex) => {\n        if (ex.isError) {\n          dCaptcha?.handleCaptchaError(ex.list);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleDelete = () => {\n    let content = '';\n\n    setIsLoading(true);\n\n    if (objectType === 'question') {\n      content =\n        Number(itemData?.answer_count) > 0\n          ? t('question', { keyPrefix: 'delete' })\n          : t('other', { keyPrefix: 'delete' });\n    }\n    if (objectType === 'answer') {\n      content = itemData?.answer_accepted\n        ? t('answer_accepted', { keyPrefix: 'delete' })\n        : t('other', { keyPrefix: 'delete' });\n    }\n    if (objectType === 'comment') {\n      content = t('other', { keyPrefix: 'delete' });\n    }\n    Modal.confirm({\n      title: t('title', { keyPrefix: 'delete' }),\n      content,\n      cancelBtnVariant: 'link',\n      confirmBtnVariant: 'danger',\n      confirmText: t('delete', { keyPrefix: 'btns' }),\n      onConfirm: () => {\n        if (!dCaptcha) {\n          submitReviewAction();\n          return;\n        }\n        dCaptcha.check(() => submitReviewAction());\n      },\n      onCancel: () => {\n        setIsLoading(false);\n      },\n    });\n  };\n\n  const handleAction = (type) => {\n    if (type === 'delete') {\n      handleDelete();\n    }\n\n    if (type === 'close') {\n      closeModal.onShow({\n        type: 'question',\n        id: itemData?.flag_id || '',\n        action: 'close',\n        source: 'review',\n        content: itemData?.reason_content,\n        reportType: itemData?.reason.reason_type || -1,\n      });\n    }\n\n    if (type === 'unlist') {\n      const keyPrefix = 'question_detail.unlist';\n      Modal.confirm({\n        title: t('title', { keyPrefix }),\n        content: t('content', { keyPrefix }),\n        cancelBtnVariant: 'link',\n        confirmText: t('confirm_btn', { keyPrefix }),\n        onConfirm: () => {\n          putFlagReviewAction({\n            operation_type: 'unlist_post',\n            flag_id: itemData?.flag_id || '',\n          }).then(() => {\n            toast.onShow({\n              msg: t(`post_${type}`, { keyPrefix: 'messages' }),\n              variant: 'success',\n            });\n            approveCallback();\n          });\n        },\n      });\n    }\n  };\n\n  const handleActionEdit = () => {\n    handleEditPostModalState();\n  };\n\n  return (\n    <div>\n      <Dropdown>\n        <Dropdown.Toggle\n          as={Button}\n          disabled={isLoading}\n          variant=\"outline-primary\"\n          id=\"dropdown-basic\">\n          {t('approve', { keyPrefix: 'btns' })}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => handleActionEdit()}>\n            {t('edit_post')}\n          </Dropdown.Item>\n          {curFilter === 'normal' && objectType === 'question' && (\n            <Dropdown.Item onClick={() => handleAction('close')}>\n              {t('close', { keyPrefix: 'btns' })}\n            </Dropdown.Item>\n          )}\n          {curFilter !== 'deleted' && (\n            <Dropdown.Item onClick={() => handleAction('delete')}>\n              {t('delete', { keyPrefix: 'btns' })}\n            </Dropdown.Item>\n          )}\n          {objectType === 'question' && (\n            <>\n              <Dropdown.Divider />\n              {itemData?.object_show_status !== 2 && (\n                <Dropdown.Item onClick={() => handleAction('unlist')}>\n                  {t('unlist_post')}\n                </Dropdown.Item>\n              )}\n            </>\n          )}\n        </Dropdown.Menu>\n      </Dropdown>\n      <EditPostModal\n        visible={showEditPostModal}\n        handleClose={handleEditPostModalState}\n        objectType={objectType}\n        originalData={{\n          flag_id: itemData?.flag_id || '',\n          id: itemData?.object_id || '',\n          title: itemData?.title || '',\n          content: itemData?.original_text || '',\n          tags: itemData?.tags || [],\n          question_id: itemData?.question_id || '',\n          answer_id: itemData?.answer_id || '',\n        }}\n        callback={approveCallback}\n      />\n    </div>\n  );\n};\n\nexport default Index;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useState, useEffect } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'classnames';\n\nimport { putFlagReviewAction } from '@/services';\nimport { usePageUsers } from '@/hooks';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport { Editor, TagSelector, Mentions, TextArea } from '@/components';\nimport {\n  // matchedUsers,\n  parseUserInfo,\n  handleFormError,\n  parseEditMentionUser,\n  scrollToElementTop,\n} from '@/utils';\nimport type * as Type from '@/common/interface';\n\nimport './index.scss';\n\ninterface Props {\n  originalData: {\n    id: string;\n    flag_id: string;\n    question_id?: string;\n    answer_id?: string;\n    title: string;\n    content: string;\n    tags: Type.Tag[];\n  };\n  objectType: Type.FlagReviewItem['object_type'] | '';\n  visible: boolean;\n  handleClose: () => void;\n  callback?: () => void;\n}\n\ninterface FormDataItem {\n  title: Type.FormValue<string>;\n  tags: Type.FormValue<Type.Tag[]>;\n  content: Type.FormValue<string>;\n}\n\nconst initFormData = {\n  title: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n  tags: {\n    value: [],\n    isInvalid: false,\n    errorMsg: '',\n  },\n  content: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n};\n\nconst Index: FC<Props> = ({\n  originalData,\n  visible = false,\n  objectType,\n  handleClose,\n  callback,\n}) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'ask' });\n  const [formData, setFormData] = useState<FormDataItem>(initFormData);\n  const [focusEditor, setFocusEditor] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const pageUsers = usePageUsers();\n\n  const editCaptcha = useCaptchaPlugin('edit');\n\n  const onClose = (bol) => {\n    if (bol) {\n      callback?.();\n    }\n    setFormData(initFormData);\n    handleClose();\n    setLoaded(false);\n  };\n\n  const handleInput = (data: Partial<FormDataItem>) => {\n    if (!loaded) {\n      return;\n    }\n    setFormData({\n      ...formData,\n      ...data,\n    });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { title, tags, content } = formData;\n    if (objectType === 'question') {\n      if (!title.value) {\n        bol = false;\n        formData.title = {\n          value: title.value,\n          isInvalid: true,\n          errorMsg: t('form.fields.title.msg.empty', {\n            keyPrefix: 'ask',\n          }),\n        };\n      }\n\n      if (!tags.value.length) {\n        bol = false;\n        formData.tags = {\n          value: tags.value,\n          isInvalid: true,\n          errorMsg: t('form.fields.tags.msg.empty', {\n            keyPrefix: 'ask',\n          }),\n        };\n      }\n    }\n\n    if (!content.value || Array.from(content.value.trim()).length < 6) {\n      bol = false;\n      formData.content = {\n        value: content.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.answer.feedback.characters', {\n          keyPrefix: 'edit_answer',\n        }),\n      };\n    } else {\n      formData.content = {\n        value: content.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    setFormData({\n      ...formData,\n    });\n\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n\n  const submitFlagReviewAction = () => {\n    const params: Type.PutFlagReviewParams = {\n      title: formData.title.value,\n      content: formData.content.value,\n      tags: formData.tags.value,\n      operation_type: 'edit_post',\n      flag_id: originalData.flag_id,\n    };\n    if (objectType === 'answer') {\n      delete params.title;\n      delete params.tags;\n    }\n    if (objectType === 'comment') {\n      const { value } = formData.content;\n      // const users = matchedUsers(value);\n      // const userNames = unionBy(users.map((user) => user.userName));\n      const commentMarkDown = parseUserInfo(value);\n\n      // params.mention_username_list = userNames;\n      params.content = commentMarkDown;\n\n      delete params.title;\n      delete params.tags;\n    }\n    if (objectType === 'question') {\n      const imgCode = editCaptcha?.getCaptcha();\n      if (imgCode?.verify) {\n        params.captcha_code = imgCode.captcha_code;\n        params.captcha_id = imgCode.captcha_id;\n      }\n    }\n    putFlagReviewAction(params)\n      .then(async () => {\n        await editCaptcha?.close();\n        onClose(true);\n      })\n      .catch((err) => {\n        if (err.isError) {\n          editCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!checkValidated()) {\n      return;\n    }\n\n    if (!editCaptcha) {\n      submitFlagReviewAction();\n      return;\n    }\n\n    editCaptcha.check(() => submitFlagReviewAction());\n  };\n\n  const handleSelected = (val) => {\n    if (!loaded) {\n      return;\n    }\n    setFormData({\n      ...formData,\n      content: {\n        value: val,\n        errorMsg: '',\n        isInvalid: false,\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    formData.title.value = originalData.title;\n    formData.content.value = originalData.content;\n    formData.tags.value = originalData.tags.map((item) => {\n      return {\n        ...item,\n        parsed_text: '',\n        original_text: '',\n      };\n    });\n    setFormData({ ...formData });\n    setLoaded(true);\n  }, [visible]);\n\n  return (\n    <Modal\n      show={visible}\n      onHide={() => onClose(false)}\n      className=\"w-100\"\n      dialogClassName=\"edit-post-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          {t('edit_post', { keyPrefix: 'page_review' })}\n        </Modal.Title>\n      </Modal.Header>\n      <Form noValidate onSubmit={handleSubmit}>\n        <Modal.Body>\n          {objectType === 'question' && (\n            <Form.Group controlId=\"title\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.title.label')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.title.value}\n                isInvalid={formData.title.isInvalid}\n                onChange={(e) => {\n                  handleInput({\n                    title: {\n                      value: e.target.value,\n                      isInvalid: false,\n                      errorMsg: '',\n                    },\n                  });\n                }}\n                placeholder={t('form.fields.title.placeholder')}\n                autoFocus\n                contentEditable\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.title.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n          )}\n\n          {objectType !== 'comment' && (\n            <Form.Group controlId=\"body\">\n              <Form.Label>\n                {objectType === 'question'\n                  ? t('form.fields.body.label')\n                  : t('form.fields.answer.label')}\n              </Form.Label>\n              <Form.Control\n                defaultValue={formData.content.value}\n                isInvalid={formData.content.isInvalid}\n                hidden\n              />\n              <Editor\n                value={formData.content.value}\n                onChange={(value) => {\n                  handleInput({\n                    content: { value, errorMsg: '', isInvalid: false },\n                  });\n                }}\n                className={classNames(\n                  'form-control p-0',\n                  focusEditor ? 'focus' : '',\n                )}\n                onFocus={() => {\n                  setFocusEditor(true);\n                }}\n                onBlur={() => {\n                  setFocusEditor(false);\n                }}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.content.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n          )}\n\n          {objectType === 'question' && (\n            <Form.Group controlId=\"tags\" className=\"my-3\">\n              <Form.Label>{t('form.fields.tags.label')}</Form.Label>\n              <Form.Control\n                defaultValue={JSON.stringify(formData.tags.value)}\n                isInvalid={formData.tags.isInvalid}\n                hidden\n              />\n              <TagSelector\n                value={formData.tags.value}\n                onChange={(value) => {\n                  handleInput({\n                    tags: { value, errorMsg: '', isInvalid: false },\n                  });\n                }}\n                showRequiredTag\n                maxTagLength={5}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.tags.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n          )}\n\n          {objectType === 'comment' && (\n            <div className=\"w-100\">\n              <div\n                className={classNames('custom-form-control', {\n                  'is-invalid': formData.content.isInvalid,\n                })}>\n                <Form.Label>Comment</Form.Label>\n                <Mentions\n                  pageUsers={pageUsers.getUsers()}\n                  onSelected={handleSelected}>\n                  <TextArea\n                    size=\"sm\"\n                    rows={4}\n                    value={parseEditMentionUser(formData.content.value)}\n                    onChange={(e) => {\n                      handleInput({\n                        content: {\n                          value: e.target.value,\n                          errorMsg: '',\n                          isInvalid: false,\n                        },\n                      });\n                    }}\n                  />\n                </Mentions>\n              </div>\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.content.errorMsg}\n              </Form.Control.Feedback>\n            </div>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => onClose(false)}>\n            {t('close', { keyPrefix: 'btns' })}\n          </Button>\n          <Button variant=\"primary\" type=\"submit\">\n            {t('submit', { keyPrefix: 'btns' })}\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default Index;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useEffect, useState, useRef } from 'react';\nimport { Card, Alert, Stack, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport classNames from 'classnames';\n\nimport { getFlagReviewPostList, putFlagReviewAction } from '@/services';\nimport {\n  BaseUserCard,\n  Tag,\n  FormatTime,\n  ImgViewer,\n  htmlRender,\n} from '@/components';\nimport { scrollToDocTop } from '@/utils';\nimport type * as Type from '@/common/interface';\nimport { ADMIN_LIST_STATUS } from '@/common/constants';\nimport ApproveDropdown from '../ApproveDropdown';\nimport generateData from '../../utils/generateData';\n\ninterface IProps {\n  refreshCount: () => void;\n}\n\nconst Index: FC<IProps> = ({ refreshCount }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'page_review' });\n  const ref = useRef<HTMLDivElement>(null);\n  const [noTasks, setNoTasks] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(1);\n  const [reviewResp, setReviewResp] = useState<Type.FlagReviewResp>();\n  const flagItemData = reviewResp?.list[0] as Type.FlagReviewItem;\n\n  // console.log('reviewResp', reviewResp);\n\n  const resolveNextOne = (resp, pageNumber) => {\n    const { count, list = [] } = resp;\n    // auto rollback\n    if (!list.length && count && page !== 1) {\n      pageNumber = 1;\n      setPage(pageNumber);\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      queryNextOne(pageNumber);\n      return;\n    }\n    if (pageNumber !== page) {\n      setPage(pageNumber);\n    }\n    setReviewResp(resp);\n    if (!list.length) {\n      setNoTasks(true);\n    }\n    setTimeout(() => {\n      scrollToDocTop();\n    }, 150);\n  };\n\n  const queryNextOne = (pageNumber) => {\n    getFlagReviewPostList(pageNumber)\n      .then((resp) => {\n        resolveNextOne(resp, pageNumber);\n      })\n      .catch((ex) => {\n        console.error('review next error: ', ex);\n      });\n  };\n\n  useEffect(() => {\n    queryNextOne(page);\n  }, []);\n\n  const handlingApprove = () => {\n    if (!flagItemData) {\n      return;\n    }\n    refreshCount();\n    queryNextOne(page);\n  };\n\n  const handleIgnore = () => {\n    setIsLoading(true);\n    putFlagReviewAction({\n      operation_type: 'ignore_report',\n      flag_id: String(flagItemData?.flag_id),\n    })\n      .then(() => {\n        refreshCount();\n        queryNextOne(page);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlingSkip = () => {\n    queryNextOne(page + 1);\n  };\n\n  useEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    setTimeout(() => {\n      htmlRender(ref.current);\n    }, 70);\n  }, [ref.current]);\n\n  const {\n    object_type,\n    submitter_user,\n    author_user_info,\n    object_status,\n    reason,\n  } = flagItemData || {\n    object_type: '',\n    submitter_user: null,\n    author_user_info: null,\n    reason: null,\n    object_status: 0,\n  };\n\n  const { itemLink, itemId, itemTimePrefix } = generateData(flagItemData);\n\n  if (noTasks) return null;\n  return (\n    <Card>\n      <Card.Header>\n        {object_type !== 'user' ? t('flag_post') : t('flag_user')}\n      </Card.Header>\n      <Card.Body className=\"p-0\">\n        <Alert variant=\"info\" className=\"border-0 rounded-0 mb-0\">\n          <Stack\n            direction=\"horizontal\"\n            gap={1}\n            className=\"align-items-center mb-2\">\n            <BaseUserCard\n              data={submitter_user}\n              avatarSize=\"24px\"\n              avatarClass=\"me-2\"\n            />\n            {flagItemData?.submit_at && (\n              <FormatTime\n                time={flagItemData.submit_at}\n                className=\"small text-secondary\"\n                preFix={t('proposed')}\n              />\n            )}\n          </Stack>\n          <Stack className=\"align-items-start\">\n            <p className=\"mb-0\">\n              {object_type !== 'user'\n                ? t('flag_post_type', { type: reason?.name })\n                : t('flag_user_type', { type: reason?.name })}\n\n              {flagItemData?.reason_content &&\n                reason?.content_type &&\n                (reason?.reason_type !== 60 ? (\n                  <span> {flagItemData?.reason_content}</span>\n                ) : flagItemData.reason_content?.startsWith('http') ? (\n                  <a\n                    href={flagItemData.reason_content}\n                    target=\"_blank\"\n                    className=\"alert-exist\"\n                    rel=\"noreferrer\">\n                    <strong>\n                      {' '}\n                      {t('show_exist', { keyPrefix: 'question_detail' })}\n                    </strong>\n                  </a>\n                ) : (\n                  <strong> {flagItemData?.reason_content}</strong>\n                ))}\n            </p>\n          </Stack>\n        </Alert>\n        <div className=\"p-3\">\n          <small className=\"d-block text-secondary mb-4\">\n            <span>{t(object_type, { keyPrefix: 'btns' })} </span>\n            <Link to={itemLink} target=\"_blank\" className=\"link-secondary\">\n              #{itemId}\n            </Link>\n          </small>\n          {object_type === 'question' && (\n            <>\n              <h5 className=\"mb-3\">{flagItemData?.title}</h5>\n              <div className=\"mb-4\">\n                {flagItemData?.tags?.map((item) => {\n                  return (\n                    <Tag key={item.slug_name} className=\"me-1\" data={item} />\n                  );\n                })}\n              </div>\n            </>\n          )}\n          <div className=\"small font-monospace\">\n            <ImgViewer>\n              <article\n                ref={ref}\n                className=\"fmt text-break text-wrap\"\n                dangerouslySetInnerHTML={{ __html: flagItemData?.parsed_text }}\n              />\n            </ImgViewer>\n          </div>\n          <div className=\"d-flex flex-wrap align-items-center justify-content-between mt-4\">\n            <div>\n              <span\n                className={classNames(\n                  'badge',\n                  ADMIN_LIST_STATUS[object_status]?.variant,\n                )}>\n                {t(ADMIN_LIST_STATUS[object_status]?.name, {\n                  keyPrefix: 'btns',\n                })}\n              </span>\n              {flagItemData?.object_show_status === 2 && (\n                <span\n                  className={classNames(\n                    'ms-1 badge',\n                    ADMIN_LIST_STATUS.unlisted.variant,\n                  )}>\n                  {t(ADMIN_LIST_STATUS.unlisted.name, { keyPrefix: 'btns' })}\n                </span>\n              )}\n            </div>\n            <div className=\"d-flex align-items-center small\">\n              <BaseUserCard\n                data={author_user_info}\n                avatarSize=\"24px\"\n                avatarClass=\"me-2\"\n              />\n              <FormatTime\n                time={Number(flagItemData?.created_at)}\n                className=\"text-secondary ms-1 flex-shrink-0\"\n                preFix={t(itemTimePrefix, { keyPrefix: 'question_detail' })}\n              />\n            </div>\n          </div>\n        </div>\n      </Card.Body>\n\n      <Card.Footer className=\"p-3\">\n        <p>{t('approve_flag_tip')}</p>\n        <Stack direction=\"horizontal\" gap={2}>\n          <ApproveDropdown\n            objectType={object_type}\n            itemData={flagItemData}\n            curFilter={ADMIN_LIST_STATUS[object_status]?.name}\n            approveCallback={handlingApprove}\n          />\n          <Button\n            variant=\"outline-primary\"\n            disabled={isLoading}\n            onClick={handleIgnore}>\n            {t('ignore', { keyPrefix: 'btns' })}\n          </Button>\n\n          <Button\n            variant=\"outline-primary\"\n            disabled={isLoading}\n            onClick={handlingSkip}>\n            {t('skip', { keyPrefix: 'btns' })}\n          </Button>\n        </Stack>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default Index;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { pathFactory } from '@/router/pathFactory';\n\nexport default (data: any) => {\n  if (!data?.object_id) {\n    return {\n      itemLink: '',\n      itemId: '',\n      itemTimePrefix: '',\n    };\n  }\n\n  const {\n    object_type = '',\n    object_id = '',\n    question_id = '',\n    answer_id = '',\n    comment_id = '',\n    url_title = '',\n  } = data;\n  let itemLink = '';\n  let itemId = '';\n  let itemTimePrefix = '';\n\n  if (object_type === 'question') {\n    itemLink = pathFactory.questionLanding(String(object_id), url_title);\n    itemId = String(question_id);\n    itemTimePrefix = 'asked';\n  } else if (object_type === 'answer') {\n    itemLink = pathFactory.answerLanding({\n      // @ts-ignore\n      questionId: question_id,\n      slugTitle: url_title,\n      answerId: String(object_id),\n    });\n    itemId = String(object_id);\n    itemTimePrefix = 'answered';\n  } else if (object_type === 'comment') {\n    if (question_id && answer_id) {\n      itemLink = `${pathFactory.answerLanding({\n        questionId: question_id,\n        slugTitle: url_title,\n        answerId: answer_id,\n      })}?commentId=${comment_id}`;\n    } else {\n      itemLink = `${pathFactory.questionLanding(\n        String(question_id),\n        url_title,\n      )}?commentId=${comment_id}`;\n    }\n    itemId = String(comment_id);\n    itemTimePrefix = 'commented';\n  }\n\n  return {\n    itemLink,\n    itemId,\n    itemTimePrefix,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Index","itemData","objectType","curFilter","approveCallback","t","useTranslation","keyPrefix","isLoading","setIsLoading","useState","showEditPostModal","setShowEditPostModal","closeModal","useReportModal","toast","useToast","dCaptcha","useCaptchaPlugin","handleEditPostModalState","submitReviewAction","req","operation_type","flag_id","String","captcha_code","undefined","captcha_id","resolveCaptchaReq","putFlagReviewAction","then","async","close","msg","onShow","variant","catch","ex","isError","handleCaptchaError","list","finally","handleAction","type","handleDelete","content","Number","answer_count","answer_accepted","Modal","confirm","title","cancelBtnVariant","confirmBtnVariant","confirmText","onConfirm","check","onCancel","id","action","source","reason_content","reportType","reason","reason_type","_jsxs","children","Dropdown","_jsx","Toggle","as","Button","disabled","Menu","Item","onClick","_Fragment","Divider","object_show_status","EditPostModal","visible","handleClose","originalData","object_id","original_text","tags","question_id","answer_id","callback","initFormData","value","isInvalid","errorMsg","formData","setFormData","focusEditor","setFocusEditor","loaded","setLoaded","pageUsers","usePageUsers","editCaptcha","onClose","bol","handleInput","data","submitFlagReviewAction","params","commentMarkDown","parseUserInfo","imgCode","getCaptcha","verify","err","handleFormError","ele","document","getElementById","error_field","scrollToElementTop","useEffect","map","item","parsed_text","show","onHide","className","dialogClassName","Header","closeButton","Title","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","length","Array","from","trim","errObj","Object","keys","filter","key","Body","Group","controlId","Label","Control","onChange","e","target","placeholder","autoFocus","contentEditable","Feedback","defaultValue","hidden","Editor","classNames","onFocus","onBlur","JSON","stringify","TagSelector","showRequiredTag","maxTagLength","Mentions","getUsers","onSelected","val","TextArea","size","rows","parseEditMentionUser","Footer","refreshCount","_flagItemData$reason_","_flagItemData$tags","_ADMIN_LIST_STATUS$ob","_ADMIN_LIST_STATUS$ob2","_ADMIN_LIST_STATUS$ob3","ref","useRef","noTasks","setNoTasks","page","setPage","reviewResp","setReviewResp","flagItemData","queryNextOne","pageNumber","getFlagReviewPostList","resp","resolveNextOne","count","setTimeout","scrollToDocTop","console","error","current","htmlRender","object_type","submitter_user","author_user_info","object_status","itemLink","itemId","itemTimePrefix","generateData","Card","Alert","Stack","direction","gap","BaseUserCard","avatarSize","avatarClass","submit_at","FormatTime","time","preFix","name","content_type","startsWith","href","rel","Link","to","Tag","slug_name","ImgViewer","dangerouslySetInnerHTML","__html","ADMIN_LIST_STATUS","unlisted","created_at","ApproveDropdown","handlingApprove","handleIgnore","handlingSkip","comment_id","url_title","pathFactory","questionLanding","answerLanding","questionId","slugTitle","answerId"],"sourceRoot":""}