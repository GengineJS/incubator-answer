{"version":3,"file":"static/js/5952.a1c4104c.chunk.js","mappings":"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","sources":["pages/Install/components/Progress/index.tsx","pages/Install/components/SecondStep/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\ninterface IProps {\n  step: number;\n}\n\nconst Index: FC<IProps> = ({ step }) => {\n  return (\n    <div className=\"d-flex align-items-center small text-secondary\">\n      <ProgressBar\n        now={(step / 5) * 100}\n        variant=\"success\"\n        style={{ width: '200px' }}\n        className=\"me-2\"\n      />\n      <span>{step}/5</span>\n    </div>\n  );\n};\n\nexport default memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, FormEvent } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport Progress from '../Progress';\nimport type { FormDataType } from '@/common/interface';\n\ninterface Props {\n  data: FormDataType;\n  changeCallback: (value: FormDataType) => void;\n  nextCallback: () => void;\n  visible: boolean;\n}\n\nconst sqlData = [\n  {\n    value: 'mysql',\n    label: 'MariaDB/MySQL',\n  },\n  {\n    value: 'sqlite3',\n    label: 'SQLite',\n  },\n  {\n    value: 'postgres',\n    label: 'PostgreSQL',\n  },\n];\n\nconst Index: FC<Props> = ({ visible, data, changeCallback, nextCallback }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'install' });\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { db_type, db_username, db_password, db_host, db_name, db_file } =\n      data;\n\n    if (db_type.value !== 'sqlite3') {\n      if (!db_username.value) {\n        bol = false;\n        data.db_username = {\n          value: '',\n          isInvalid: true,\n          errorMsg: t('db_username.msg'),\n        };\n      }\n\n      if (!db_password.value) {\n        bol = false;\n        data.db_password = {\n          value: '',\n          isInvalid: true,\n          errorMsg: t('db_password.msg'),\n        };\n      }\n\n      if (!db_host.value) {\n        bol = false;\n        data.db_host = {\n          value: '',\n          isInvalid: true,\n          errorMsg: t('db_host.msg'),\n        };\n      }\n\n      if (!db_name.value) {\n        bol = false;\n        data.db_name = {\n          value: '',\n          isInvalid: true,\n          errorMsg: t('db_name.msg'),\n        };\n      }\n    } else if (!db_file.value) {\n      bol = false;\n      data.db_file = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('db_file.msg'),\n      };\n    }\n    changeCallback({\n      ...data,\n    });\n    return bol;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n    nextCallback();\n  };\n\n  if (!visible) return null;\n  return (\n    <Form noValidate onSubmit={handleSubmit}>\n      <Form.Group controlId=\"database_engine\" className=\"mb-3\">\n        <Form.Label>{t('db_type.label')}</Form.Label>\n        <Form.Select\n          value={data.db_type.value}\n          isInvalid={data.db_type.isInvalid}\n          onChange={(e) => {\n            changeCallback({\n              db_type: {\n                value: e.target.value,\n                isInvalid: false,\n                errorMsg: '',\n              },\n            });\n          }}>\n          {sqlData.map((item) => {\n            return (\n              <option key={item.value} value={item.value}>\n                {item.label}\n              </option>\n            );\n          })}\n        </Form.Select>\n      </Form.Group>\n      {data.db_type.value !== 'sqlite3' ? (\n        <>\n          <Form.Group controlId=\"username\" className=\"mb-3\">\n            <Form.Label>{t('db_username.label')}</Form.Label>\n            <Form.Control\n              required\n              placeholder={t('db_username.placeholder')}\n              value={data.db_username.value}\n              isInvalid={data.db_username.isInvalid}\n              onChange={(e) => {\n                changeCallback({\n                  db_username: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {data.db_username.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"db_password\" className=\"mb-3\">\n            <Form.Label>{t('db_password.label')}</Form.Label>\n            <Form.Control\n              required\n              value={data.db_password.value}\n              isInvalid={data.db_password.isInvalid}\n              onChange={(e) => {\n                changeCallback({\n                  db_password: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                });\n              }}\n            />\n\n            <Form.Control.Feedback type=\"invalid\">\n              {data.db_password.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"db_host\" className=\"mb-3\">\n            <Form.Label>{t('db_host.label')}</Form.Label>\n            <Form.Control\n              required\n              placeholder={t('db_host.placeholder')}\n              value={data.db_host.value}\n              isInvalid={data.db_host.isInvalid}\n              onChange={(e) => {\n                changeCallback({\n                  db_host: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {data.db_host.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"name\" className=\"mb-3\">\n            <Form.Label>{t('db_name.label')}</Form.Label>\n            <Form.Control\n              required\n              placeholder={t('db_name.placeholder')}\n              value={data.db_name.value}\n              isInvalid={data.db_name.isInvalid}\n              onChange={(e) => {\n                changeCallback({\n                  db_name: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                });\n              }}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {data.db_name.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n        </>\n      ) : (\n        <Form.Group controlId=\"file\" className=\"mb-3\">\n          <Form.Label>{t('db_file.label')}</Form.Label>\n          <Form.Control\n            required\n            placeholder={t('db_file.placeholder')}\n            value={data.db_file.value}\n            isInvalid={data.db_file.isInvalid}\n            onChange={(e) => {\n              changeCallback({\n                db_file: {\n                  value: e.target.value,\n                  isInvalid: false,\n                  errorMsg: '',\n                },\n              });\n            }}\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            {data.db_file.errorMsg}\n          </Form.Control.Feedback>\n        </Form.Group>\n      )}\n\n      <div className=\"d-flex align-items-center justify-content-between\">\n        <Progress step={2} />\n        <Button type=\"submit\">{t('next')}</Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default Index;\n"],"names":["Index","step","_jsxs","className","children","_jsx","ProgressBar","now","variant","style","width","memo","sqlData","value","label","visible","data","changeCallback","nextCallback","t","useTranslation","keyPrefix","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","db_type","db_username","db_password","db_host","db_name","db_file","isInvalid","errorMsg","Group","controlId","Label","Select","onChange","e","target","map","item","_Fragment","Control","required","placeholder","Feedback","type","Progress","Button"],"sourceRoot":""}