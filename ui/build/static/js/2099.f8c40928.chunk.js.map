{"version":3,"file":"static/js/2099.f8c40928.chunk.js","mappings":"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","sources":["pages/Users/Login/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FormEvent, useEffect, useState } from 'react';\nimport { Button, Col, Container, Form } from 'react-bootstrap';\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { usePageTags } from '@/hooks';\nimport type { FormDataType, LoginReqParams } from '@/common/interface';\nimport { PluginRender, Unactivate, WelcomeTitle } from '@/components';\nimport {\n  loggedUserInfoStore,\n  loginSettingStore,\n  userCenterStore,\n} from '@/stores';\nimport {\n  floppyNavigation,\n  guard,\n  handleFormError,\n  scrollToElementTop,\n  userCenter,\n} from '@/utils';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport { login, UcAgent } from '@/services';\nimport { setupAppTheme } from '@/utils/localize';\nimport {\n  getTargetAssetBunHost,\n  iframeManager,\n  isAssetBunPageType,\n} from '@/common/functions';\nimport { assetBunSearch, IframeMsgType } from '@/common/constants';\n\nconst Index: React.FC = () => {\n  iframeManager.initIframe();\n  const { t } = useTranslation('translation', { keyPrefix: 'login' });\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const { user: storeUser, update: updateUser } = loggedUserInfoStore((_) => _);\n  const loginSetting = loginSettingStore((state) => state.login);\n  const ucAgent = userCenterStore().agent;\n  let ucAgentInfo: UcAgent['agent_info'] | undefined;\n  if (ucAgent?.enabled && ucAgent?.agent_info) {\n    ucAgentInfo = ucAgent.agent_info;\n  }\n  const canOriginalLogin =\n    (!ucAgentInfo || ucAgentInfo.enabled_original_user_system) &&\n    loginSetting.allow_password_login;\n\n  const [formData, setFormData] = useState<FormDataType>({\n    e_mail: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const [step, setStep] = useState(1);\n\n  const handleChange = (params: FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const passwordCaptcha = useCaptchaPlugin('password');\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { e_mail, pass } = formData;\n\n    if (!e_mail.value) {\n      bol = false;\n      formData.e_mail = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('email.msg.empty'),\n      };\n    }\n\n    if (!pass.value) {\n      bol = false;\n      formData.pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('password.msg.empty'),\n      };\n    }\n\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n  const isAssetBun = isAssetBunPageType();\n  const toLinkSysUrl = isAssetBun\n    ? window.location.pathname\n    : `${window.location.pathname}?${assetBunSearch}`;\n  const i18nSysKey = isAssetBun ? 'login.info_answer' : 'login.info_assetbun';\n  const handleLogin = (event?: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const params: LoginReqParams = {\n      e_mail: formData.e_mail.value,\n      pass: formData.pass.value,\n    };\n\n    const captcha = passwordCaptcha?.getCaptcha();\n    if (captcha?.verify) {\n      params.captcha_code = captcha.captcha_code;\n      params.captcha_id = captcha.captcha_id;\n    }\n    iframeManager.postMsg(\n      {\n        email: params.e_mail,\n        password: params.pass,\n        type: IframeMsgType.LOGIN,\n      },\n      (code: number) => {\n        login(params)\n          .then(async (res) => {\n            await passwordCaptcha?.close?.();\n            updateUser(res);\n            setupAppTheme();\n            // if (res.status === 'normal') {\n            //\n            // }\n            const userStat = guard.deriveLoginState();\n            if (userStat.isNotActivated) {\n              // inactive\n              setStep(2);\n            } else {\n              guard.handleLoginRedirect(navigate);\n            }\n            if (isAssetBun && code === 0) {\n              const abUrl = getTargetAssetBunHost();\n              window.open(abUrl, '_blank');\n            }\n          })\n          .catch((err) => {\n            if (err.isError) {\n              const data = handleFormError(err, formData);\n              setFormData({ ...data });\n              passwordCaptcha?.handleCaptchaError?.(err.list);\n              const ele = document.getElementById(err.list[0].error_field);\n              scrollToElementTop(ele);\n            }\n          });\n      },\n    );\n  };\n\n  const handleSubmit = async (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!checkValidated()) {\n      return;\n    }\n\n    if (!passwordCaptcha) {\n      handleLogin();\n      return;\n    }\n\n    passwordCaptcha?.check?.(() => {\n      handleLogin();\n    });\n  };\n\n  useEffect(() => {\n    const isInactive = searchParams.get('status');\n\n    if (storeUser.id && (storeUser.mail_status === 2 || isInactive)) {\n      setStep(2);\n    }\n  }, []);\n\n  usePageTags({\n    title: t('login', { keyPrefix: 'page_title' }),\n  });\n  return (\n    <Container style={{ paddingTop: '4rem', paddingBottom: '5rem' }}>\n      <WelcomeTitle />\n      {step === 1 ? (\n        <Col className=\"mx-auto\" md={6} lg={4} xl={3}>\n          <PluginRender\n            type=\"captcha\"\n            slug_name=\"captcha_basic\"\n            className=\"mb-5\"\n          />\n\n          <PluginRender\n            type=\"captcha\"\n            slug_name=\"captcha_google_v2\"\n            className=\"mb-5\"\n          />\n          {ucAgentInfo ? (\n            <PluginRender\n              type=\"connector\"\n              slug_name=\"hosting_connector\"\n              className=\"mb-5\"\n            />\n          ) : (\n            <PluginRender\n              type=\"connector\"\n              slug_name=\"third_party_connector\"\n              className=\"mb-5\"\n            />\n          )}\n          {canOriginalLogin ? (\n            <>\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group controlId=\"email\" className=\"mb-3\">\n                  <Form.Label>{t('email.label')}</Form.Label>\n                  <Form.Control\n                    required\n                    tabIndex={1}\n                    type=\"email\"\n                    value={formData.e_mail.value}\n                    isInvalid={formData.e_mail.isInvalid}\n                    onChange={(e) =>\n                      handleChange({\n                        e_mail: {\n                          value: e.target.value,\n                          isInvalid: false,\n                          errorMsg: '',\n                        },\n                      })\n                    }\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {formData.e_mail.errorMsg}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"pass\" className=\"mb-3\">\n                  <div className=\"d-flex justify-content-between\">\n                    <Form.Label>{t('password.label')}</Form.Label>\n                    <Link to=\"/users/account-recovery\" tabIndex={2}>\n                      <small>{t('forgot_pass')}</small>\n                    </Link>\n                  </div>\n\n                  <Form.Control\n                    required\n                    tabIndex={1}\n                    type=\"password\"\n                    // value={formData.pass.value}\n                    isInvalid={formData.pass.isInvalid}\n                    onChange={(e) =>\n                      handleChange({\n                        pass: {\n                          value: e.target.value,\n                          isInvalid: false,\n                          errorMsg: '',\n                        },\n                      })\n                    }\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {formData.pass.errorMsg}\n                  </Form.Control.Feedback>\n                </Form.Group>\n\n                <div className=\"d-grid\">\n                  <Button variant=\"primary\" type=\"submit\" tabIndex={1}>\n                    {t('login', { keyPrefix: 'btns' })}\n                  </Button>\n                </div>\n              </Form>\n              {loginSetting.allow_new_registrations && (\n                <>\n                  <div className=\"text-center mt-5\">\n                    <Trans i18nKey=\"login.info_sign\" ns=\"translation\">\n                      Don't have an account?\n                      <Link\n                        to={userCenter.getSignUpUrl()}\n                        tabIndex={2}\n                        onClick={floppyNavigation.handleRouteLinkClick}>\n                        Sign up\n                      </Link>\n                    </Trans>\n                  </div>\n                  <div className=\"text-center small mt-1\">\n                    <Trans i18nKey={i18nSysKey} ns=\"translation\">\n                      Need AI help?\n                      <Link\n                        to={toLinkSysUrl}\n                        onClick={() => {\n                          const parsedUrl = new URL(window.location.pathname);\n                          const fullDomain = `${parsedUrl.protocol}//${parsedUrl.hostname}`;\n                          window.location.href = fullDomain + toLinkSysUrl;\n                        }}>\n                        Learn earn\n                      </Link>\n                    </Trans>\n                  </div>\n                </>\n              )}\n            </>\n          ) : null}\n        </Col>\n      ) : null}\n\n      {step === 2 && <Unactivate visible={step === 2} />}\n    </Container>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","iframeManager","initIframe","t","useTranslation","keyPrefix","navigate","useNavigate","searchParams","useSearchParams","user","storeUser","update","updateUser","loggedUserInfoStore","_","loginSetting","loginSettingStore","state","login","ucAgent","userCenterStore","agent","ucAgentInfo","enabled","agent_info","canOriginalLogin","enabled_original_user_system","allow_password_login","formData","setFormData","useState","e_mail","value","isInvalid","errorMsg","pass","step","setStep","handleChange","params","passwordCaptcha","useCaptchaPlugin","isAssetBun","isAssetBunPageType","toLinkSysUrl","window","location","pathname","assetBunSearch","i18nSysKey","handleLogin","event","preventDefault","captcha","getCaptcha","verify","captcha_code","captcha_id","postMsg","email","password","type","IframeMsgType","LOGIN","code","then","async","_passwordCaptcha$clos","close","call","res","setupAppTheme","guard","isNotActivated","abUrl","getTargetAssetBunHost","open","catch","err","isError","_passwordCaptcha$hand","data","handleFormError","handleCaptchaError","list","ele","document","getElementById","error_field","scrollToElementTop","useEffect","isInactive","get","id","mail_status","usePageTags","title","_jsxs","Container","style","paddingTop","paddingBottom","children","_jsx","WelcomeTitle","Col","className","md","lg","xl","PluginRender","slug_name","_Fragment","Form","noValidate","onSubmit","_passwordCaptcha$chec","stopPropagation","checkValidated","bol","errObj","Object","keys","filter","key","check","Group","controlId","Label","Control","required","tabIndex","onChange","e","target","Feedback","Link","to","Button","variant","allow_new_registrations","Trans","i18nKey","ns","userCenter","onClick","floppyNavigation","handleRouteLinkClick","parsedUrl","URL","fullDomain","protocol","hostname","href","Unactivate","visible","React"],"sourceRoot":""}