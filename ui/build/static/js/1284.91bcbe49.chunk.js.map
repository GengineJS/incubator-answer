{"version":3,"file":"static/js/1284.91bcbe49.chunk.js","mappings":"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","sources":["pages/Users/AccountForgot/components/sendEmail.tsx","pages/Users/AccountForgot/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport type { PasswordResetReq, FormDataType } from '@/common/interface';\nimport { resetPassword } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\n\ninterface IProps {\n  // eslint-disable-next-line react/no-unused-prop-types\n  visible?: boolean;\n  callback: (param: number, email: string) => void;\n}\n\nconst Index: FC<IProps> = ({ callback }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'account_forgot' });\n  const [formData, setFormData] = useState<FormDataType>({\n    e_mail: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const emailCaptcha = useCaptchaPlugin('email');\n\n  const handleChange = (params: FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n\n    if (!formData.e_mail.value) {\n      bol = false;\n      formData.e_mail = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('email.msg.empty'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const ele = document.getElementById('email');\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n\n  const sendEmail = (e?: any) => {\n    if (e) {\n      e.preventDefault();\n    }\n    const params: PasswordResetReq = {\n      e_mail: formData.e_mail.value,\n    };\n\n    const captcha = emailCaptcha?.getCaptcha();\n    if (captcha?.verify) {\n      params.captcha_code = captcha.captcha_code;\n      params.captcha_id = captcha.captcha_id;\n    }\n\n    resetPassword(params)\n      .then(async () => {\n        await emailCaptcha?.close();\n        callback?.(2, formData.e_mail.value);\n      })\n      .catch((err) => {\n        if (err.isError) {\n          emailCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleSubmit = async (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!checkValidated()) {\n      return;\n    }\n\n    if (!emailCaptcha) {\n      sendEmail();\n      return;\n    }\n\n    emailCaptcha.check(() => {\n      sendEmail();\n    });\n  };\n\n  return (\n    <Form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n      <Form.Group controlId=\"email\" className=\"mb-3\">\n        <Form.Label>{t('email.label')}</Form.Label>\n        <Form.Control\n          required\n          type=\"email\"\n          value={formData.e_mail.value}\n          isInvalid={formData.e_mail.isInvalid}\n          onChange={(e) => {\n            handleChange({\n              e_mail: {\n                value: e.target.value,\n                isInvalid: false,\n                errorMsg: '',\n              },\n            });\n          }}\n        />\n        <Form.Control.Feedback type=\"invalid\">\n          {formData.e_mail.errorMsg}\n        </Form.Control.Feedback>\n      </Form.Group>\n\n      <div className=\"d-grid mb-3\">\n        <Button variant=\"primary\" type=\"submit\">\n          {t('btn_name')}\n        </Button>\n      </div>\n    </Form>\n  );\n};\n\nexport default memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { Container, Col } from 'react-bootstrap';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport { usePageTags } from '@/hooks';\n\nimport SendEmail from './components/sendEmail';\n\nconst Index: React.FC = () => {\n  const { t } = useTranslation('translation', { keyPrefix: 'account_forgot' });\n  const [step, setStep] = useState(1);\n  const [email, setEmail] = useState('');\n\n  const callback = (param: number, mail: string) => {\n    setStep(param);\n    setEmail(mail);\n  };\n  usePageTags({\n    title: t('account_recovery', { keyPrefix: 'page_title' }),\n  });\n  return (\n    <Container style={{ paddingTop: '4rem', paddingBottom: '6rem' }}>\n      <h3 className=\"text-center mb-5\">{t('page_title')}</h3>\n      {step === 1 && (\n        <Col className=\"mx-auto\" md={6} lg={4} xl={3}>\n          <SendEmail visible={step === 1} callback={callback} />\n        </Col>\n      )}\n      {step === 2 && (\n        <Col className=\"mx-auto px-4\" md={6}>\n          <div className=\"text-center\">\n            <p>\n              <Trans\n                i18nKey=\"account_forgot.send_success\"\n                values={{ mail: email }}\n                components={{ bold: <strong /> }}\n              />\n            </p>\n          </div>\n        </Col>\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","callback","t","useTranslation","keyPrefix","formData","setFormData","useState","e_mail","value","isInvalid","errorMsg","emailCaptcha","useCaptchaPlugin","sendEmail","e","preventDefault","params","captcha","getCaptcha","verify","captcha_code","captcha_id","resetPassword","then","async","close","catch","err","isError","handleCaptchaError","list","data","handleFormError","ele","document","getElementById","error_field","scrollToElementTop","_jsxs","Form","noValidate","onSubmit","event","stopPropagation","checkValidated","bol","check","autoComplete","children","Group","controlId","className","_jsx","Label","Control","required","type","onChange","target","Feedback","Button","variant","memo","step","setStep","email","setEmail","usePageTags","title","Container","style","paddingTop","paddingBottom","Col","md","lg","xl","SendEmail","visible","param","mail","Trans","i18nKey","values","components","bold","React"],"sourceRoot":""}