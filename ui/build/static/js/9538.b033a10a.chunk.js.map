{"version":3,"file":"static/js/9538.b033a10a.chunk.js","mappings":"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","sources":["pages/Admin/Questions/components/Action/index.tsx","pages/Admin/Questions/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dropdown } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport { Icon, Modal } from '@/components';\nimport {\n  changeQuestionStatus,\n  questionOperation,\n  reopenQuestion,\n} from '@/services';\nimport { useReportModal, useToast } from '@/hooks';\n\nconst AnswerActions = ({ itemData, refreshList, curFilter, show, pin }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'delete' });\n  const closeModal = useReportModal(refreshList);\n  const toast = useToast();\n\n  const handleAction = (type) => {\n    if (type === 'delete') {\n      Modal.confirm({\n        title: t('title', { keyPrefix: 'delete' }),\n        content:\n          itemData.answer_count > 0\n            ? t('question', { keyPrefix: 'delete' })\n            : t('other', { keyPrefix: 'delete' }),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('delete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeQuestionStatus(itemData.id, 'deleted').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'undelete') {\n      Modal.confirm({\n        title: t('undelete_title'),\n        content: t('undelete_desc'),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('undelete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeQuestionStatus(itemData.id, 'available').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'close') {\n      closeModal.onShow({\n        type: 'question',\n        id: itemData.id,\n        action: 'close',\n      });\n    }\n\n    if (type === 'reopen') {\n      Modal.confirm({\n        title: t('title', { keyPrefix: 'question_detail.reopen' }),\n        content: t('content', { keyPrefix: 'question_detail.reopen' }),\n        cancelBtnVariant: 'link',\n        confirmText: t('confirm_btn', { keyPrefix: 'question_detail.reopen' }),\n        onConfirm: () => {\n          reopenQuestion({\n            question_id: itemData.id,\n          }).then(() => {\n            toast.onShow({\n              msg: t('post_reopen', { keyPrefix: 'messages' }),\n              variant: 'success',\n            });\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'list' || type === 'unlist') {\n      const keyPrefix =\n        type === 'list' ? 'question_detail.list' : 'question_detail.unlist';\n      Modal.confirm({\n        title: t('title', { keyPrefix }),\n        content: t('content', { keyPrefix }),\n        cancelBtnVariant: 'link',\n        confirmText: t('confirm_btn', { keyPrefix }),\n        onConfirm: () => {\n          questionOperation({\n            id: itemData.id,\n            operation: type === 'list' ? 'show' : 'hide',\n          }).then(() => {\n            toast.onShow({\n              msg: t(`post_${type}`, { keyPrefix: 'messages' }),\n              variant: 'success',\n            });\n            refreshList();\n          });\n        },\n      });\n    }\n  };\n\n  if (curFilter === 'pending') {\n    return (\n      <Link\n        to={`/review?type=queued_post&objectId=${itemData.id}`}\n        className=\"btn btn-link p-0\"\n        title={t('review', { keyPrefix: 'header.nav' })}>\n        <Icon name=\"three-dots-vertical\" />\n      </Link>\n    );\n  }\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"link\" className=\"no-toggle p-0\">\n        <Icon\n          name=\"three-dots-vertical\"\n          title={t('action', { keyPrefix: 'admin.answers' })}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        {curFilter === 'normal' && (\n          <Dropdown.Item onClick={() => handleAction('close')}>\n            {t('close', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {curFilter === 'closed' && (\n          <Dropdown.Item onClick={() => handleAction('reopen')}>\n            {t('reopen', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {curFilter !== 'deleted' ? (\n          <Dropdown.Item onClick={() => handleAction('delete')}>\n            {t('delete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        ) : (\n          <Dropdown.Item onClick={() => handleAction('undelete')}>\n            {t('undelete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n        {show === 2 ? (\n          <Dropdown.Item onClick={() => handleAction('list')}>\n            {t('list', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        ) : (\n          pin !== 2 && (\n            <Dropdown.Item onClick={() => handleAction('unlist')}>\n              {t('unlist', { keyPrefix: 'btns' })}\n            </Dropdown.Item>\n          )\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AnswerActions;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC } from 'react';\nimport { Form, Table, Stack } from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'classnames';\n\nimport {\n  FormatTime,\n  Icon,\n  Pagination,\n  BaseUserCard,\n  Empty,\n  QueryGroup,\n} from '@/components';\nimport { ADMIN_LIST_STATUS } from '@/common/constants';\nimport * as Type from '@/common/interface';\nimport { useQuestionSearch } from '@/services';\nimport { pathFactory } from '@/router/pathFactory';\n\nimport Action from './components/Action';\n\nconst questionFilterItems: Type.AdminContentsFilterBy[] = [\n  'normal',\n  'pending',\n  'closed',\n  'deleted',\n];\n\nconst PAGE_SIZE = 20;\nconst Questions: FC = () => {\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n  const curFilter = urlSearchParams.get('status') || questionFilterItems[0];\n  const curPage = Number(urlSearchParams.get('page')) || 1;\n  const curQuery = urlSearchParams.get('query') || '';\n  const { t } = useTranslation('translation', { keyPrefix: 'admin.questions' });\n\n  const {\n    data: listData,\n    isLoading,\n    mutate: refreshList,\n  } = useQuestionSearch({\n    page_size: PAGE_SIZE,\n    page: curPage,\n    status: curFilter as Type.AdminContentsFilterBy,\n    query: curQuery,\n  });\n  const count = listData?.count || 0;\n\n  const handleFilter = (e) => {\n    urlSearchParams.set('query', e.target.value);\n    urlSearchParams.delete('page');\n    setUrlSearchParams(urlSearchParams);\n  };\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <div className=\"d-flex flex-wrap justify-content-between align-items-center mb-3\">\n        <QueryGroup\n          data={questionFilterItems}\n          currentSort={curFilter}\n          sortKey=\"status\"\n          i18nKeyPrefix=\"btns\"\n        />\n\n        <Form.Control\n          value={curQuery}\n          size=\"sm\"\n          type=\"search\"\n          placeholder={t('filter.placeholder')}\n          onChange={handleFilter}\n          style={{ width: '12.25rem' }}\n          className=\"mt-3 mt-sm-0\"\n        />\n      </div>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th className=\"min-w-15\">{t('post')}</th>\n            <th style={{ width: '8%' }}>{t('votes')}</th>\n            <th style={{ width: '8%' }}>{t('answers')}</th>\n            <th style={{ width: '15%' }}>{t('created')}</th>\n            <th style={{ width: '14%' }}>{t('status')}</th>\n            <th style={{ width: '10%' }} className=\"text-end\">\n              {t('action')}\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"align-middle\">\n          {listData?.list?.map((li) => {\n            return (\n              <tr key={li.id}>\n                <td>\n                  <a\n                    href={pathFactory.questionLanding(\n                      li.id,\n                      li.url_title,\n                      li.content_type,\n                    )}\n                    target=\"_blank\"\n                    className=\"text-break text-wrap\"\n                    rel=\"noreferrer\">\n                    {li.title}\n                  </a>\n                  {li.accepted_answer_id > 0 && (\n                    <Icon\n                      name=\"check-circle-fill\"\n                      className=\"ms-2 text-success\"\n                    />\n                  )}\n                </td>\n                <td>{li.vote_count}</td>\n                <td>\n                  <Link\n                    to={`/admin/answers?questionId=${li.id}`}\n                    rel=\"noreferrer\">\n                    {li.answer_count}\n                  </Link>\n                </td>\n                <td>\n                  <Stack>\n                    <BaseUserCard data={li.user_info} nameMaxWidth=\"130px\" />\n                    <FormatTime\n                      className=\"small text-secondary\"\n                      time={li.create_time}\n                    />\n                  </Stack>\n                </td>\n                <td>\n                  <span\n                    className={classNames(\n                      'badge',\n                      'me-1',\n                      'mb-1',\n                      ADMIN_LIST_STATUS[curFilter]?.variant,\n                    )}>\n                    {t(ADMIN_LIST_STATUS[curFilter]?.name, {\n                      keyPrefix: 'btns',\n                    })}\n                  </span>\n                  {li.show === 2 && (\n                    <span\n                      className={classNames(\n                        'badge',\n                        ADMIN_LIST_STATUS.unlisted.variant,\n                      )}>\n                      {t(ADMIN_LIST_STATUS.unlisted.name, {\n                        keyPrefix: 'btns',\n                      })}\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"text-end\">\n                  <Action\n                    itemData={{ id: li.id, answer_count: li.answer_count }}\n                    refreshList={refreshList}\n                    curFilter={curFilter}\n                    show={li.show}\n                    pin={li.pin}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {Number(count) <= 0 && !isLoading && <Empty />}\n      <div className=\"mt-4 mb-2 d-flex justify-content-center\">\n        <Pagination\n          currentPage={curPage}\n          totalSize={count}\n          pageSize={PAGE_SIZE}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Questions;\n"],"names":["AnswerActions","itemData","refreshList","curFilter","show","pin","t","useTranslation","keyPrefix","closeModal","useReportModal","toast","useToast","handleAction","type","Modal","confirm","title","content","answer_count","cancelBtnVariant","confirmBtnVariant","confirmText","onConfirm","changeQuestionStatus","id","then","onShow","action","reopenQuestion","question_id","msg","variant","questionOperation","operation","_jsx","Link","to","className","children","Icon","name","_jsxs","Dropdown","Toggle","Menu","Item","onClick","questionFilterItems","Questions","_listData$list","urlSearchParams","setUrlSearchParams","useSearchParams","get","curPage","Number","curQuery","data","listData","isLoading","mutate","useQuestionSearch","page_size","page","status","query","count","_Fragment","QueryGroup","currentSort","sortKey","i18nKeyPrefix","Form","Control","value","size","placeholder","onChange","e","set","target","delete","style","width","Table","responsive","list","map","li","_ADMIN_LIST_STATUS$cu","_ADMIN_LIST_STATUS$cu2","href","pathFactory","questionLanding","url_title","content_type","rel","accepted_answer_id","vote_count","Stack","BaseUserCard","user_info","nameMaxWidth","FormatTime","time","create_time","classNames","ADMIN_LIST_STATUS","unlisted","Action","Empty","Pagination","currentPage","totalSize","pageSize"],"sourceRoot":""}