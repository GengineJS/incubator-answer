{"version":3,"file":"static/js/9770.8114fca1.chunk.js","mappings":"oPA6BA,MAAMA,EAAa,WACbC,EAAYA,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAC1CC,UAAW,oBAELC,SAAUC,EAAY,OAAEC,IAAWC,EAAAA,EAAAA,MACrCC,GAAQC,EAAAA,EAAAA,OAEPC,EAAUC,IAAeC,EAAAA,EAAAA,UAAuB,CACrDC,KAAM,CACJC,MAAOT,EAAaQ,KACpBE,WAAW,EACXC,SAAU,IAEZC,YAAa,CACXH,MAAO,GACPC,WAAW,EACXC,SAAU,IAEZE,YAAa,CACXJ,MAAO,GACPC,WAAW,EACXC,SAAU,IAEZG,QAAS,CACPL,MAAO,GACPC,WAAW,EACXC,SAAU,MAIRI,EAAqB,CACzBC,MAAOpB,EAAE,cACTqB,WAAY,CACVT,KAAM,CACJU,KAAM,SACNF,MAAO,GAAGpB,EAAE,iBAAiBA,EAAE,WAAY,CAAEE,UAAW,WACxDqB,YAAavB,EAAE,cAEjBgB,YAAa,CACXM,KAAM,SACNF,MAAO,GAAGpB,EAAE,wBAAwBA,EAAE,WAAY,CAChDE,UAAW,WAEbqB,YAAavB,EAAE,qBAEjBiB,YAAa,CACXK,KAAM,SACNF,MAAO,GAAGpB,EAAE,wBAAwBA,EAAE,WAAY,CAChDE,UAAW,WAEbqB,YAAavB,EAAE,qBAEjBkB,QAAS,CACPI,KAAM,SACNF,MAAO,GAAGpB,EAAE,oBAAoBA,EAAE,WAAY,CAC5CE,UAAW,WAEbqB,YAAavB,EAAE,mBAKfwB,EAAqB,CACzBZ,KAAM,CACJ,YAAa,SACb,aAAc,CACZa,UAAW3B,EACX4B,UAAW,uBAGfV,YAAa,CACX,YAAa,SACb,aAAc,CACZS,UAAW3B,EACX4B,UAAW,uBAGfT,YAAa,CACX,YAAa,SACb,aAAc,CACZQ,UAAW3B,EACX4B,UAAW,uBAGfR,QAAS,CACP,YAAa,SACb,aAAc,CACZS,WAAY,yCACZF,UAAW3B,EACX4B,UAAW,wBAiDjB,OAJAE,EAAAA,EAAAA,YAAU,KAXWC,WACnB,MAAMC,QAAYC,EAAAA,EAAAA,KACdD,IACFrB,EAASG,KAAKC,MAAQiB,EAAIlB,KAC1BH,EAASO,YAAYH,MAAQiB,EAAId,YACjCP,EAASQ,YAAYJ,MAAQiB,EAAIb,YACjCR,EAASS,QAAQL,MAAQiB,EAAIZ,QAC7BR,EAAY,IAAKD,IACnB,EAIAuB,EAAc,GACb,KAGDC,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAAC,SAAA,EACRC,EAAAA,EAAAA,KAAA,MAAIV,UAAU,OAAMS,SAAEnC,EAAE,iBACxBoC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CACTlB,OAAQA,EACRK,SAAUA,EACVf,SAAUA,EACV6B,SA/CWA,KACf,MAAMC,EAAS,CACb3B,KAAMH,EAASG,KAAKC,MACpBG,YAAaP,EAASO,YAAYH,MAClCI,YAAaR,EAASQ,YAAYJ,MAClCK,QAAST,EAASS,QAAQL,QAE5B2B,EAAAA,EAAAA,IAAaD,GACVE,MAAK,KACJpC,EAAOkC,GACPhC,EAAMmC,OAAO,CACXC,IAAK3C,EAAE,SAAU,CAAEE,UAAW,UAC9B0C,QAAS,WACT,IAEHC,OAAOC,IACN,GAAIA,EAAIC,QAAS,CACf,MAAMC,GAAOC,EAAAA,EAAAA,IAAgBH,EAAKrC,GAClCC,EAAY,IAAKsC,IACjB,MAAME,EAAMC,SAASC,eAAeN,EAAIO,KAAK,GAAGC,cAChDC,EAAAA,EAAAA,IAAmBL,EACrB,IACA,EA0BAM,SApDkBR,IACtBtC,EAAYsC,EAAK,MAqDL,EAIhB,GAAeS,EAAAA,EAAAA,MAAK1D,E","sources":["pages/Admin/Branding/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { JSONSchema, SchemaForm, UISchema, ImgViewer } from '@/components';\nimport { FormDataType } from '@/common/interface';\nimport { brandSetting, getBrandSetting } from '@/services';\nimport { brandingStore } from '@/stores';\nimport { useToast } from '@/hooks';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst uploadType = 'branding';\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.branding',\n  });\n  const { branding: brandingInfo, update } = brandingStore();\n  const Toast = useToast();\n\n  const [formData, setFormData] = useState<FormDataType>({\n    logo: {\n      value: brandingInfo.logo,\n      isInvalid: false,\n      errorMsg: '',\n    },\n    mobile_logo: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    square_icon: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    favicon: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const schema: JSONSchema = {\n    title: t('page_title'),\n    properties: {\n      logo: {\n        type: 'string',\n        title: `${t('logo.label')} ${t('optional', { keyPrefix: 'form' })}`,\n        description: t('logo.text'),\n      },\n      mobile_logo: {\n        type: 'string',\n        title: `${t('mobile_logo.label')} ${t('optional', {\n          keyPrefix: 'form',\n        })}`,\n        description: t('mobile_logo.text'),\n      },\n      square_icon: {\n        type: 'string',\n        title: `${t('square_icon.label')} ${t('optional', {\n          keyPrefix: 'form',\n        })}`,\n        description: t('square_icon.text'),\n      },\n      favicon: {\n        type: 'string',\n        title: `${t('favicon.label')} ${t('optional', {\n          keyPrefix: 'form',\n        })}`,\n        description: t('favicon.text'),\n      },\n    },\n  };\n\n  const uiSchema: UISchema = {\n    logo: {\n      'ui:widget': 'upload',\n      'ui:options': {\n        imageType: uploadType,\n        className: 'object-fit-contain',\n      },\n    },\n    mobile_logo: {\n      'ui:widget': 'upload',\n      'ui:options': {\n        imageType: uploadType,\n        className: 'object-fit-contain',\n      },\n    },\n    square_icon: {\n      'ui:widget': 'upload',\n      'ui:options': {\n        imageType: uploadType,\n        className: 'object-fit-contain',\n      },\n    },\n    favicon: {\n      'ui:widget': 'upload',\n      'ui:options': {\n        acceptType: ',image/x-icon,image/vnd.microsoft.icon',\n        imageType: uploadType,\n        className: 'object-fit-contain',\n      },\n    },\n  };\n\n  const handleOnChange = (data) => {\n    setFormData(data);\n  };\n\n  const onSubmit = () => {\n    const params = {\n      logo: formData.logo.value,\n      mobile_logo: formData.mobile_logo.value,\n      square_icon: formData.square_icon.value,\n      favicon: formData.favicon.value,\n    };\n    brandSetting(params)\n      .then(() => {\n        update(params);\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const getBrandData = async () => {\n    const res = await getBrandSetting();\n    if (res) {\n      formData.logo.value = res.logo;\n      formData.mobile_logo.value = res.mobile_logo;\n      formData.square_icon.value = res.square_icon;\n      formData.favicon.value = res.favicon;\n      setFormData({ ...formData });\n    }\n  };\n\n  useEffect(() => {\n    getBrandData();\n  }, []);\n\n  return (\n    <ImgViewer>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <SchemaForm\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        onSubmit={onSubmit}\n        onChange={handleOnChange}\n      />\n    </ImgViewer>\n  );\n};\n\nexport default memo(Index);\n"],"names":["uploadType","Index","t","useTranslation","keyPrefix","branding","brandingInfo","update","brandingStore","Toast","useToast","formData","setFormData","useState","logo","value","isInvalid","errorMsg","mobile_logo","square_icon","favicon","schema","title","properties","type","description","uiSchema","imageType","className","acceptType","useEffect","async","res","getBrandSetting","getBrandData","_jsxs","ImgViewer","children","_jsx","SchemaForm","onSubmit","params","brandSetting","then","onShow","msg","variant","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange","memo"],"sourceRoot":""}