{"version":3,"file":"static/js/5419.b5fc3988.chunk.js","mappings":"yOA+BA,MAAMA,EAAmBA,EAAGC,UAASC,UAC9BD,GAAgB,OAAJC,QAAI,IAAJA,GAAAA,EAAMC,QAIrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,YAAWC,SAC7BL,EAAKM,KAAKC,IAEPC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CACZL,UAAU,8DAA6DC,SAAA,EAEvEG,EAAAA,EAAAA,MAAA,OACEJ,UAAW,kBACTG,EAAKG,WAAa,EAAI,eAAiB,eAEzCC,MAAO,CAAEC,MAAO,OAAQC,SAAU,QAASR,SAAA,CAC1CE,EAAKG,WAAa,EAAI,IAAM,GAC5BH,EAAKG,eAERF,EAAAA,EAAAA,MAAA,OAAAH,SAAA,EACEH,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CACHV,UAAU,aACVW,GACuB,aAArBR,EAAKS,YACDC,EAAAA,EAAYC,gBACVX,EAAKY,YACLZ,EAAKa,WAEPH,EAAAA,EAAYI,cAAc,CACxBC,WAAYf,EAAKY,YACjBI,UAAWhB,EAAKa,UAChBI,SAAUjB,EAAKkB,YAEtBpB,SACAE,EAAKmB,SAERlB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iDAAgDC,SAAA,EAC7DH,EAAAA,EAAAA,KAAA,QAAAG,SAAOE,EAAKoB,aACZzB,EAAAA,EAAAA,KAAA,QAAME,UAAU,eAChBF,EAAAA,EAAAA,KAAC0B,EAAAA,GAAU,CAACC,KAAMtB,EAAKuB,WAAY1B,UAAU,iBA7B5CG,EAAKwB,eARX,KA+CX,GAAeC,EAAAA,EAAAA,MAAKlC,E","sources":["pages/Users/Personal/components/Reputation/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport { FormatTime } from '@/components';\nimport { pathFactory } from '@/router/pathFactory';\n\ninterface Props {\n  visible: boolean;\n  data;\n}\n\nconst Index: FC<Props> = ({ visible, data }) => {\n  if (!visible || !data?.length) {\n    return null;\n  }\n  return (\n    <ListGroup className=\"rounded-0\">\n      {data.map((item) => {\n        return (\n          <ListGroupItem\n            className=\"d-flex py-3 px-0 bg-transparent border-start-0 border-end-0\"\n            key={item.object_id}>\n            <div\n              className={`me-3 text-end ${\n                item.reputation > 0 ? 'text-success' : 'text-danger'\n              }`}\n              style={{ width: '40px', minWidth: '40px' }}>\n              {item.reputation > 0 ? '+' : ''}\n              {item.reputation}\n            </div>\n            <div>\n              <Link\n                className=\"text-break\"\n                to={\n                  item.object_type === 'question'\n                    ? pathFactory.questionLanding(\n                        item.question_id,\n                        item.url_title,\n                      )\n                    : pathFactory.answerLanding({\n                        questionId: item.question_id,\n                        slugTitle: item.url_title,\n                        answerId: item.answer_id,\n                      })\n                }>\n                {item.title}\n              </Link>\n              <div className=\"d-flex align-items-center small text-secondary\">\n                <span>{item.rank_type}</span>\n                <span className=\"split-dot\" />\n                <FormatTime time={item.created_at} className=\"me-4\" />\n              </div>\n            </div>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default memo(Index);\n"],"names":["Index","visible","data","length","_jsx","ListGroup","className","children","map","item","_jsxs","ListGroupItem","reputation","style","width","minWidth","Link","to","object_type","pathFactory","questionLanding","question_id","url_title","answerLanding","questionId","slugTitle","answerId","answer_id","title","rank_type","FormatTime","time","created_at","object_id","memo"],"sourceRoot":""}