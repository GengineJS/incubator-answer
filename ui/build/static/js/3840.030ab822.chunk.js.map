{"version":3,"file":"static/js/3840.030ab822.chunk.js","mappings":"gSAkCA,MAqNA,EArN0BA,EAAGC,mBAC3B,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAAEC,UAAW,iBAClDC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAMC,IAAWJ,EAAAA,EAAAA,UAAS,IAC1BK,EAAYC,IAAiBN,EAAAA,EAAAA,YAC9BO,EAAe,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYG,KAAK,IACtB,KAAEC,EAAI,KAAEC,EAAI,gBAAEC,GAAoBJ,GAAM,CAC5CE,KAAM,KACNC,KAAM,GACNC,gBAAiB,MAuBbC,EAAgBC,KACpBC,EAAAA,EAAAA,IAAqBD,GAAYE,MAAMC,IAtBlBC,EAACD,EAAMH,KAC5B,MAAM,MAAEK,EAAK,KAAEV,EAAO,IAAOQ,EAE7B,IAAKR,EAAKW,QAAUD,GAAkB,IAATf,EAK3B,OAHAC,EADAS,EAAa,QAGbD,EAAaC,GAGXA,IAAeV,GACjBC,EAAQS,GAEVP,EAAcU,GACTR,EAAKW,QACRjB,GAAW,GAEbkB,YAAW,MACTC,EAAAA,EAAAA,KAAgB,GACf,IAAI,EAILJ,CAAeD,EAAMH,EAAW,GAChC,EAEES,EAA4B,OAAfX,QAAe,IAAfA,OAAe,EAAfA,EAAiBY,QAuCpC,IAAIC,EAAW,GACXC,EAAS,GACTC,EAA6B,OAAff,QAAe,IAAfA,OAAe,EAAfA,EAAiBgB,OACnC,MAAMC,EAAwB,OAAfjB,QAAe,IAAfA,OAAe,EAAfA,EAAiBkB,UAC1BC,EAA0B,OAAfnB,QAAe,IAAfA,OAAe,EAAfA,EAAiBoB,UAClC,GAAa,aAATrB,EACFc,EAAWQ,EAAAA,EAAYC,gBAAoB,OAAJxB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,UAAe,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,WAC9DV,EAAa,OAAJhB,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,UACfR,IAAgB/B,EAAE,sBACb,GAAa,WAATe,EACTc,EAAWQ,EAAAA,EAAYI,cAAc,CAEnCC,WAAY1B,EAAgBY,QAAQe,YACpCC,UAAe,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAM0B,UACjBK,SAAU7B,EAAgBuB,YAE5BT,EAASd,EAAgBuB,UACzBR,IAAgB/B,EAAE,oBACb,GAAa,QAATe,EAAgB,CACzB,MAAM+B,EAAU9B,EAAgBY,QAChCC,EAAWQ,EAAAA,EAAYU,WAAWD,EAAQE,WAC1ClB,GAAgB,OAAPgB,QAAO,IAAPA,OAAO,EAAPA,EAASG,SAAUH,EAAQE,UACpCjB,IAAgB/B,EAAE,WACpB,CAKA,IAJAkD,EAAAA,EAAAA,YAAU,KACRjC,EAAaT,EAAK,GACjB,IAECF,EAAS,OAAO,KAEpB,IAAI6C,EAA+B,CAAC,EAChCC,EAA+B,CAAC,EAChCC,EAGC,CACHC,WAAW,EACXC,gBAAgB,GAiClB,MA/Ba,aAATxC,GAAuBD,GAAQa,GAAc,YAAaA,IAC5DwB,EAAU,CACRK,MAAO7B,EAAW6B,MAClBC,cAAe9B,EAAWC,QAC1B8B,KAAM/B,EAAW+B,MAEnBN,EAAU,CACRI,MAAO1C,EAAK0C,MACZC,cAAe3C,EAAKc,QACpB8B,KAAM5C,EAAK4C,OAGF,WAAT3C,GAAqBD,GAAQa,GAAc,YAAaA,IAC1DwB,EAAU,CACRM,cAAe9B,EAAWC,SAE5BwB,EAAU,CACRK,cAAe3C,EAAKc,UAIX,QAATb,GAAkBD,GAAQa,IAC5BwB,EAAU,CACRM,cAAe9B,EAAW8B,eAE5BL,EAAU,CACRK,cAAe3C,EAAKc,SAEtByB,EAAW,CAAEC,WAAW,EAAOC,gBAAgB,KAI/CI,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACF,EAAAA,EAAKG,OAAM,CAAAF,SAAE7D,EAAE,oBAChB2D,EAAAA,EAAAA,MAACC,EAAAA,EAAKI,KAAI,CAACC,UAAU,MAAKJ,SAAA,EACxBF,EAAAA,EAAAA,MAACO,EAAAA,EAAK,CAACC,QAAQ,OAAOF,UAAU,0BAAyBJ,SAAA,EACvDF,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CACJC,UAAU,aACVC,IAAK,EACLL,UAAU,0BAAyBJ,SAAA,EACnCC,EAAAA,EAAAA,KAACS,EAAAA,GAAY,CAACC,KAAMvC,EAAQwC,WAAW,KAAKC,YAAY,SACvDvC,IACC2B,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CACTC,KAAMzC,EACN8B,UAAU,uBACVY,OAAQ7E,EAAE,kBAIhB8D,EAAAA,EAAAA,KAACM,EAAAA,EAAK,CAACH,UAAU,oBAAmBJ,UAClCC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,OAAMJ,SAAE9B,UAGzB4B,EAAAA,EAAAA,MAAA,OAAKM,UAAU,MAAKJ,SAAA,EAClBF,EAAAA,EAAAA,MAAA,SAAOM,UAAU,8BAA6BJ,SAAA,EAC5CF,EAAAA,EAAAA,MAAA,QAAAE,SAAA,CAAO7D,EAAEe,EAAM,CAAEb,UAAW,SAAU,QACtCyD,EAAAA,EAAAA,MAACmB,EAAAA,GAAI,CAACC,GAAIlD,EAAUmD,OAAO,SAASf,UAAU,iBAAgBJ,SAAA,CAAC,IAC3D/B,SAINgC,EAAAA,EAAAA,KAACmB,EAAAA,GAAW,CACVhB,UAAU,OACViB,WAAYnE,EACZoC,QAASA,EACTC,QAASA,EACT+B,KAAM9B,WAIZM,EAAAA,EAAAA,MAACC,EAAAA,EAAKwB,OAAM,CAACnB,UAAU,MAAKJ,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAI7D,EAAE,2BACN2D,EAAAA,EAAAA,MAACS,EAAAA,EAAK,CAACC,UAAU,aAAaC,IAAK,EAAET,SAAA,EACnCC,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLlB,QAAQ,kBACRmB,SAAUnF,EACVoF,QAxJcC,KACjBxE,IAGLZ,GAAa,IACbqF,EAAAA,EAAAA,IAAczE,EAAgB0E,GAAI,WAC/BtE,MAAK,KACJrB,IACAkB,EAAaT,EAAK,IAEnBmF,SAAQ,KACPvF,GAAa,EAAM,IACnB,EA4I6ByD,SACxB7D,EAAE,UAAW,CAAEE,UAAW,YAE7B4D,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLlB,QAAQ,kBACRmB,SAAUnF,EACVoF,QA/IaK,KAChB5E,IAGLZ,GAAa,IACbqF,EAAAA,EAAAA,IAAczE,EAAgB0E,GAAI,UAC/BtE,MAAK,KACJrB,IACAkB,EAAaT,EAAK,IAEnBqF,OAAOC,IACNC,QAAQC,MAAM,+BAAgCF,EAAG,IAElDH,SAAQ,KACPvF,GAAa,EAAM,IACnB,EAgI4ByD,SACvB7D,EAAE,SAAU,CAAEE,UAAW,YAE5B4D,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLlB,QAAQ,kBACRmB,SAAUnF,EACVoF,QAnIWU,KACnBhF,EAAaT,EAAO,EAAE,EAkIQqD,SACrB7D,EAAE,OAAQ,CAAEE,UAAW,mBAIzB,C","sources":["pages/Review/components/SuggestContent/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useEffect, useState } from 'react';\nimport { Alert, Stack, Button, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { BaseUserCard, FormatTime, DiffContent } from '@/components';\nimport { getSuggestReviewList, revisionAudit } from '@/services';\nimport { pathFactory } from '@/router/pathFactory';\nimport { scrollToDocTop } from '@/utils';\nimport type * as Type from '@/common/interface';\n\ninterface IProps {\n  refreshCount: () => void;\n}\n\nconst Index: FC<IProps> = ({ refreshCount }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'page_review' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [noTasks, setNoTasks] = useState(false);\n  const [page, setPage] = useState(1);\n  const [reviewResp, setReviewResp] = useState<Type.SuggestReviewResp>();\n  const ro = reviewResp?.list[0];\n  const { info, type, unreviewed_info } = ro || {\n    info: null,\n    type: '',\n    unreviewed_info: null,\n  };\n  const resolveNextOne = (resp, pageNumber) => {\n    const { count, list = [] } = resp;\n    // auto rollback\n    if (!list.length && count && page !== 1) {\n      pageNumber = 1;\n      setPage(pageNumber);\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      queryNextOne(pageNumber);\n      return;\n    }\n    if (pageNumber !== page) {\n      setPage(pageNumber);\n    }\n    setReviewResp(resp);\n    if (!list.length) {\n      setNoTasks(true);\n    }\n    setTimeout(() => {\n      scrollToDocTop();\n    }, 150);\n  };\n  const queryNextOne = (pageNumber) => {\n    getSuggestReviewList(pageNumber).then((resp) => {\n      resolveNextOne(resp, pageNumber);\n    });\n  };\n  const reviewInfo = unreviewed_info?.content;\n\n  const handlingApprove = () => {\n    if (!unreviewed_info) {\n      return;\n    }\n    setIsLoading(true);\n    revisionAudit(unreviewed_info.id, 'approve')\n      .then(() => {\n        refreshCount();\n        queryNextOne(page);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlingReject = () => {\n    if (!unreviewed_info) {\n      return;\n    }\n    setIsLoading(true);\n    revisionAudit(unreviewed_info.id, 'reject')\n      .then(() => {\n        refreshCount();\n        queryNextOne(page);\n      })\n      .catch((ex) => {\n        console.error('revisionAudit reject error: ', ex);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handlingSkip = () => {\n    queryNextOne(page + 1);\n  };\n\n  let itemLink = '';\n  let itemId = '';\n  let editSummary = unreviewed_info?.reason;\n  const editor = unreviewed_info?.user_info;\n  const editTime = unreviewed_info?.create_at;\n  if (type === 'question') {\n    itemLink = pathFactory.questionLanding(info?.object_id, info?.url_title);\n    itemId = info?.object_id;\n    editSummary ||= t('edit_question');\n  } else if (type === 'answer') {\n    itemLink = pathFactory.answerLanding({\n      // @ts-ignore\n      questionId: unreviewed_info.content.question_id,\n      slugTitle: info?.url_title,\n      answerId: unreviewed_info.object_id,\n    });\n    itemId = unreviewed_info.object_id;\n    editSummary ||= t('edit_answer');\n  } else if (type === 'tag') {\n    const tagInfo = unreviewed_info.content as Type.Tag;\n    itemLink = pathFactory.tagLanding(tagInfo.slug_name);\n    itemId = tagInfo?.tag_id || tagInfo.slug_name;\n    editSummary ||= t('edit_tag');\n  }\n  useEffect(() => {\n    queryNextOne(page);\n  }, []);\n\n  if (noTasks) return null;\n\n  let newData: Record<string, any> = {};\n  let oldData: Record<string, any> = {};\n  let diffOpts: Partial<{\n    showTitle: boolean;\n    showTagUrlSlug: boolean;\n  }> = {\n    showTitle: true,\n    showTagUrlSlug: true,\n  };\n  if (type === 'question' && info && reviewInfo && 'content' in reviewInfo) {\n    newData = {\n      title: reviewInfo.title,\n      original_text: reviewInfo.content,\n      tags: reviewInfo.tags,\n    };\n    oldData = {\n      title: info.title,\n      original_text: info.content,\n      tags: info.tags,\n    };\n  }\n  if (type === 'answer' && info && reviewInfo && 'content' in reviewInfo) {\n    newData = {\n      original_text: reviewInfo.content,\n    };\n    oldData = {\n      original_text: info.content,\n    };\n  }\n\n  if (type === 'tag' && info && reviewInfo) {\n    newData = {\n      original_text: reviewInfo.original_text,\n    };\n    oldData = {\n      original_text: info.content,\n    };\n    diffOpts = { showTitle: false, showTagUrlSlug: false };\n  }\n\n  return (\n    <Card>\n      <Card.Header>{t('suggest_edits')}</Card.Header>\n      <Card.Body className=\"p-0\">\n        <Alert variant=\"info\" className=\"border-0 rounded-0 mb-0\">\n          <Stack\n            direction=\"horizontal\"\n            gap={1}\n            className=\"align-items-center mb-2\">\n            <BaseUserCard data={editor} avatarSize=\"24\" avatarClass=\"me-2\" />\n            {editTime && (\n              <FormatTime\n                time={editTime}\n                className=\"small text-secondary\"\n                preFix={t('proposed')}\n              />\n            )}\n          </Stack>\n          <Stack className=\"align-items-start\">\n            <p className=\"mb-0\">{editSummary}</p>\n          </Stack>\n        </Alert>\n        <div className=\"p-3\">\n          <small className=\"d-block text-secondary mb-4\">\n            <span>{t(type, { keyPrefix: 'btns' })} </span>\n            <Link to={itemLink} target=\"_blank\" className=\"link-secondary\">\n              #{itemId}\n            </Link>\n          </small>\n\n          <DiffContent\n            className=\"mt-2\"\n            objectType={type}\n            newData={newData}\n            oldData={oldData}\n            opts={diffOpts}\n          />\n        </div>\n      </Card.Body>\n      <Card.Footer className=\"p-3\">\n        <p>{t('approve_revision_tip')}</p>\n        <Stack direction=\"horizontal\" gap={2}>\n          <Button\n            variant=\"outline-primary\"\n            disabled={isLoading}\n            onClick={handlingApprove}>\n            {t('approve', { keyPrefix: 'btns' })}\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            disabled={isLoading}\n            onClick={handlingReject}>\n            {t('reject', { keyPrefix: 'btns' })}\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            disabled={isLoading}\n            onClick={handlingSkip}>\n            {t('skip', { keyPrefix: 'btns' })}\n          </Button>\n        </Stack>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nexport default Index;\n"],"names":["Index","refreshCount","t","useTranslation","keyPrefix","isLoading","setIsLoading","useState","noTasks","setNoTasks","page","setPage","reviewResp","setReviewResp","ro","list","info","type","unreviewed_info","queryNextOne","pageNumber","getSuggestReviewList","then","resp","resolveNextOne","count","length","setTimeout","scrollToDocTop","reviewInfo","content","itemLink","itemId","editSummary","reason","editor","user_info","editTime","create_at","pathFactory","questionLanding","object_id","url_title","answerLanding","questionId","question_id","slugTitle","answerId","tagInfo","tagLanding","slug_name","tag_id","useEffect","newData","oldData","diffOpts","showTitle","showTagUrlSlug","title","original_text","tags","_jsxs","Card","children","_jsx","Header","Body","className","Alert","variant","Stack","direction","gap","BaseUserCard","data","avatarSize","avatarClass","FormatTime","time","preFix","Link","to","target","DiffContent","objectType","opts","Footer","Button","disabled","onClick","handlingApprove","revisionAudit","id","finally","handlingReject","catch","ex","console","error","handlingSkip"],"sourceRoot":""}