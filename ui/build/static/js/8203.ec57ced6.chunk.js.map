{"version":3,"file":"static/js/8203.ec57ced6.chunk.js","mappings":"+NA2BA,MAAMA,EAAQA,KACZ,MAAMC,GAAQC,EAAAA,EAAAA,OACR,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAC1CC,UAAW,2BAELC,KAAMC,IAAeC,EAAAA,EAAAA,MAEvBC,EAAqB,CACzBC,MAAOP,EAAE,WACTQ,WAAY,CACVC,MAAO,CACLC,KAAM,UACNH,MAAOP,EAAE,eACTW,YAAaX,EAAE,qBACfY,QAAmB,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAYK,MAAMI,QAE7BC,iBAAkB,CAChBJ,KAAM,UACNH,MAAOP,EAAE,0BACTW,YAAaX,EAAE,gCACfY,QAAmB,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAYU,iBAAiBD,QAExCE,oCAAqC,CACnCL,KAAM,UACNH,MAAOP,EAAE,6CACTW,YAAaX,EAAE,mDACfY,QAAmB,OAAVR,QAAU,IAAVA,OAAU,EAAVA,EAAYW,oCAAoCF,UAIzDG,EAAqB,CACzBP,MAAO,CACL,YAAa,SACb,aAAc,CACZQ,MAAOjB,EAAE,aAGbc,iBAAkB,CAChB,YAAa,SACb,aAAc,CACZG,MAAOjB,EAAE,aAGbe,oCAAqC,CACnC,YAAa,SACb,aAAc,CACZE,MAAOjB,EAAE,WACTkB,KAAMlB,EAAE,uDAIPmB,EAAUC,IAAeC,EAAAA,EAAAA,WAAuBC,EAAAA,EAAAA,IAAahB,KAEpEiB,EAAAA,EAAAA,YAAU,KACRH,GAAYE,EAAAA,EAAAA,IAAahB,GAAQ,GAChC,CAACF,IA+BJ,OACEoB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAE1B,EAAE,cACxB2B,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACTvB,OAAQA,EACRU,SAAUA,EACVG,SAAUA,EACVW,SAVgBC,IACpBX,EAAYW,EAAG,EAUXC,SArCgBC,IACpBA,EAAMC,iBACND,EAAME,kBACN,MAAMC,EAAS,CACb3B,MAAO,CACLI,OAAQM,EAASV,MAAM4B,MACvBC,IAAe,OAAVlC,QAAU,IAAVA,OAAU,EAAVA,EAAYK,MAAM6B,KAEzBxB,iBAAkB,CAChBD,OAAQM,EAASL,iBAAiBuB,MAClCC,IAAe,OAAVlC,QAAU,IAAVA,OAAU,EAAVA,EAAYU,iBAAiBwB,KAEpCvB,oCAAqC,CACnCF,OAAQM,EAASJ,oCAAoCsB,MACrDC,IAAe,OAAVlC,QAAU,IAAVA,OAAU,EAAVA,EAAYW,oCAAoCuB,OAIzDC,EAAAA,EAAAA,IAAsBH,GAAQI,MAAK,KACjC1C,EAAM2C,OAAO,CACXC,IAAK1C,EAAE,SAAU,CAAEE,UAAW,UAC9ByC,QAAS,WACT,GACF,MAgBC,EAIP,EAAeC,EAAAA,KAAW/C,E","sources":["pages/Users/Settings/Notification/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, FormEvent, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { FormDataType, NotificationConfig } from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport { useGetNotificationConfig, putNotificationConfig } from '@/services';\nimport { SchemaForm, JSONSchema, UISchema, initFormData } from '@/components';\n\nconst Index = () => {\n  const toast = useToast();\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.notification',\n  });\n  const { data: configData } = useGetNotificationConfig();\n\n  const schema: JSONSchema = {\n    title: t('heading'),\n    properties: {\n      inbox: {\n        type: 'boolean',\n        title: t('inbox.label'),\n        description: t('inbox.description'),\n        default: configData?.inbox.enable,\n      },\n      all_new_question: {\n        type: 'boolean',\n        title: t('all_new_question.label'),\n        description: t('all_new_question.description'),\n        default: configData?.all_new_question.enable,\n      },\n      all_new_question_for_following_tags: {\n        type: 'boolean',\n        title: t('all_new_question_for_following_tags.label'),\n        description: t('all_new_question_for_following_tags.description'),\n        default: configData?.all_new_question_for_following_tags.enable,\n      },\n    },\n  };\n  const uiSchema: UISchema = {\n    inbox: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('turn_on'),\n      },\n    },\n    all_new_question: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('turn_on'),\n      },\n    },\n    all_new_question_for_following_tags: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('turn_on'),\n        text: t('all_new_question_for_following_tags.description'),\n      },\n    },\n  };\n  const [formData, setFormData] = useState<FormDataType>(initFormData(schema));\n\n  useEffect(() => {\n    setFormData(initFormData(schema));\n  }, [configData]);\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const params = {\n      inbox: {\n        enable: formData.inbox.value,\n        key: configData?.inbox.key,\n      },\n      all_new_question: {\n        enable: formData.all_new_question.value,\n        key: configData?.all_new_question.key,\n      },\n      all_new_question_for_following_tags: {\n        enable: formData.all_new_question_for_following_tags.value,\n        key: configData?.all_new_question_for_following_tags.key,\n      },\n    } as NotificationConfig;\n\n    putNotificationConfig(params).then(() => {\n      toast.onShow({\n        msg: t('update', { keyPrefix: 'toast' }),\n        variant: 'success',\n      });\n    });\n  };\n\n  const handleChange = (ud) => {\n    setFormData(ud);\n  };\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('heading')}</h3>\n      <SchemaForm\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","toast","useToast","t","useTranslation","keyPrefix","data","configData","useGetNotificationConfig","schema","title","properties","inbox","type","description","default","enable","all_new_question","all_new_question_for_following_tags","uiSchema","label","text","formData","setFormData","useState","initFormData","useEffect","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onChange","ud","onSubmit","event","preventDefault","stopPropagation","params","value","key","putNotificationConfig","then","onShow","msg","variant","React"],"sourceRoot":""}