{"version":3,"file":"static/js/155.29a2ec97.chunk.js","mappings":"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","sources":["pages/Tags/Edit/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\n\nimport { usePageTags, usePromptWithUnload } from '@/hooks';\nimport { Editor, EditorRef } from '@/components';\nimport { loggedUserInfoStore } from '@/stores';\nimport type * as Type from '@/common/interface';\nimport { TAG_SLUG_NAME_MAX_LENGTH } from '@/common/constants';\nimport { useTagInfo, modifyTag, useQueryRevisions } from '@/services';\n\ninterface FormDataItem {\n  displayName: Type.FormValue<string>;\n  slugName: Type.FormValue<string>;\n  description: Type.FormValue<string>;\n  editSummary: Type.FormValue<string>;\n}\nconst initFormData = {\n  displayName: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n  slugName: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n  description: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n  editSummary: {\n    value: '',\n    isInvalid: false,\n    errorMsg: '',\n  },\n};\n\nconst Index = () => {\n  const { role_id = 1 } = loggedUserInfoStore((state) => state.user);\n\n  const { tagId } = useParams();\n  const navigate = useNavigate();\n  const { t } = useTranslation('translation', { keyPrefix: 'edit_tag' });\n  const [focusType, setForceType] = useState('');\n\n  const { data } = useTagInfo({ id: tagId });\n  const { data: revisions = [] } = useQueryRevisions(data?.tag_id);\n  const [formData, setFormData] = useState<FormDataItem>(initFormData);\n  const [immData, setImmData] = useState(initFormData);\n  const [contentChanged, setContentChanged] = useState(false);\n\n  const editorRef = useRef<EditorRef>({\n    getHtml: () => '',\n  });\n\n  usePromptWithUnload({\n    when: contentChanged,\n  });\n\n  useEffect(() => {\n    initFormData.displayName.value = data?.display_name || '';\n    initFormData.slugName.value = data?.slug_name || '';\n    initFormData.description.value = data?.original_text || '';\n    setFormData(initFormData);\n    setImmData(initFormData);\n  }, [data]);\n\n  useEffect(() => {\n    const { displayName, slugName, description, editSummary } = formData;\n    const {\n      displayName: display_name,\n      slugName: slug_name,\n      description: original_text,\n    } = immData;\n\n    if (\n      display_name.value !== displayName.value ||\n      slug_name.value !== slugName.value ||\n      original_text.value !== description.value ||\n      editSummary.value\n    ) {\n      setContentChanged(true);\n    } else {\n      setContentChanged(false);\n    }\n  }, [\n    formData.displayName.value,\n    formData.slugName.value,\n    formData.description.value,\n    formData.editSummary.value,\n  ]);\n\n  const handleDescriptionChange = (value: string) =>\n    setFormData({\n      ...formData,\n      description: { ...formData.description, value },\n    });\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { displayName, slugName } = formData;\n\n    if (!displayName.value) {\n      bol = false;\n      formData.displayName = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('form.fields.display_name.msg.empty', {\n          keyPrefix: 'tag_modal',\n        }),\n      };\n    } else if (displayName.value.length > TAG_SLUG_NAME_MAX_LENGTH) {\n      bol = false;\n      formData.displayName = {\n        value: displayName.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.display_name.msg.range', {\n          keyPrefix: 'tag_modal',\n        }),\n      };\n    } else {\n      formData.displayName = {\n        value: displayName.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    if (!slugName.value) {\n      bol = false;\n      formData.slugName = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('form.fields.slug_name.msg.empty', {\n          keyPrefix: 'tag_modal',\n        }),\n      };\n    } else if (slugName.value.length > TAG_SLUG_NAME_MAX_LENGTH) {\n      bol = false;\n      formData.slugName = {\n        value: slugName.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.slug_name.msg.range', {\n          keyPrefix: 'tag_modal',\n        }),\n      };\n    } else {\n      formData.slugName = {\n        value: slugName.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    setFormData({\n      ...formData,\n    });\n    return bol;\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    setContentChanged(false);\n\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n\n    const params = {\n      display_name: formData.displayName.value,\n      slug_name: formData.slugName.value,\n      original_text: formData.description.value,\n      parsed_text: editorRef.current.getHtml(),\n      tag_id: data?.tag_id,\n      edit_summary: formData.editSummary.value,\n    };\n    modifyTag(params).then((res) => {\n      navigate(`/tags/${encodeURIComponent(formData.slugName.value)}/info`, {\n        replace: true,\n        state: { isReview: res.wait_for_review },\n      });\n    });\n  };\n\n  const handleSelectedRevision = (e) => {\n    const index = e.target.value;\n    const revision = revisions[index];\n    formData.description.value = revision.content.original_text;\n    formData.displayName.value = revision.content.display_name;\n    formData.slugName.value = revision.content.slug_name;\n    setImmData({ ...formData });\n    setFormData({ ...formData });\n  };\n\n  const handleDisplayNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      displayName: { ...formData.displayName, value: e.currentTarget.value },\n    });\n  };\n\n  const handleEditSummaryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      editSummary: { ...formData.editSummary, value: e.currentTarget.value },\n    });\n  };\n\n  const handleSlugNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      slugName: { ...formData.slugName, value: e.currentTarget.value },\n    });\n  };\n\n  const backPage = () => {\n    navigate(-1);\n  };\n  usePageTags({\n    title: t('edit_tag', { keyPrefix: 'page_title' }),\n  });\n  return (\n    <div className=\"pt-4 mb-5\">\n      <h3 className=\"mb-4\">{t('title')}</h3>\n      <Row>\n        <Col className=\"page-main flex-auto\">\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group controlId=\"revision\" className=\"mb-3\">\n              <Form.Label>\n                {t('form.fields.revision.label', { keyPrefix: 'tag_modal' })}\n              </Form.Label>\n              <Form.Select onChange={handleSelectedRevision}>\n                {revisions.map(({ create_at, reason, user_info }, index) => {\n                  const date = dayjs(create_at * 1000)\n                    .tz()\n                    .format(t('long_date_with_time', { keyPrefix: 'dates' }));\n                  return (\n                    <option key={`${create_at}`} value={index}>\n                      {`${date} - ${user_info.display_name} - ${\n                        reason ||\n                        (index === revisions.length - 1\n                          ? t('default_first_reason')\n                          : t('default_reason'))\n                      }`}\n                    </option>\n                  );\n                })}\n              </Form.Select>\n            </Form.Group>\n            <Form.Group controlId=\"display_name\" className=\"mb-3\">\n              <Form.Label>\n                {t('form.fields.display_name.label', {\n                  keyPrefix: 'tag_modal',\n                })}\n              </Form.Label>\n              <Form.Control\n                value={formData.displayName.value}\n                isInvalid={formData.displayName.isInvalid}\n                disabled={role_id !== 2 && role_id !== 3}\n                onChange={handleDisplayNameChange}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.displayName.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"slug_name\" className=\"mb-3\">\n              <Form.Label>\n                {t('form.fields.slug_name.label', { keyPrefix: 'tag_modal' })}\n              </Form.Label>\n              <Form.Control\n                value={formData.slugName.value}\n                isInvalid={formData.slugName.isInvalid}\n                disabled={role_id !== 2 && role_id !== 3}\n                onChange={handleSlugNameChange}\n              />\n              <Form.Text as=\"div\">\n                {t('form.fields.slug_name.desc', { keyPrefix: 'tag_modal' })}\n              </Form.Text>\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.slugName.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\" className=\"mt-4\">\n              <Form.Label>\n                {t('form.fields.desc.label', { keyPrefix: 'tag_modal' })}\n              </Form.Label>\n              <Editor\n                value={formData.description.value}\n                onChange={handleDescriptionChange}\n                className={classNames(\n                  'form-control p-0',\n                  focusType === 'description' && 'focus',\n                )}\n                onFocus={() => {\n                  setForceType('description');\n                }}\n                onBlur={() => {\n                  setForceType('');\n                }}\n                ref={editorRef}\n              />\n              <Form.Control\n                value={formData.description.value}\n                type=\"text\"\n                isInvalid={formData.description.isInvalid}\n                readOnly\n                hidden\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.description.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"edit_summary\" className=\"my-3\">\n              <Form.Label>\n                {t('form.fields.edit_summary.label', {\n                  keyPrefix: 'tag_modal',\n                })}\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                defaultValue={formData.editSummary.value}\n                isInvalid={formData.editSummary.isInvalid}\n                onChange={handleEditSummaryChange}\n                placeholder={t('form.fields.edit_summary.placeholder', {\n                  keyPrefix: 'tag_modal',\n                })}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.editSummary.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <div className=\"mt-3\">\n              <Button type=\"submit\">{t('btn_save_edits')}</Button>\n              <Button variant=\"link\" className=\"ms-2\" onClick={backPage}>\n                {t('btn_cancel')}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n        <Col className=\"page-right-side mt-4 mt-xl-0\">\n          <Card>\n            <Card.Header>\n              {t('title', { keyPrefix: 'how_to_format' })}\n            </Card.Header>\n            <Card.Body\n              className=\"fmt small\"\n              dangerouslySetInnerHTML={{\n                __html: t('desc', { keyPrefix: 'how_to_format' }),\n              }}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":["initFormData","displayName","value","isInvalid","errorMsg","slugName","description","editSummary","Index","role_id","loggedUserInfoStore","state","user","tagId","useParams","navigate","useNavigate","t","useTranslation","keyPrefix","focusType","setForceType","useState","data","useTagInfo","id","revisions","useQueryRevisions","tag_id","formData","setFormData","immData","setImmData","contentChanged","setContentChanged","editorRef","useRef","getHtml","usePromptWithUnload","when","useEffect","display_name","slug_name","original_text","usePageTags","title","_jsxs","className","children","_jsx","Row","Col","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","length","TAG_SLUG_NAME_MAX_LENGTH","params","parsed_text","current","edit_summary","modifyTag","then","res","encodeURIComponent","replace","isReview","wait_for_review","Group","controlId","Label","Select","onChange","e","index","target","revision","content","map","create_at","reason","user_info","date","dayjs","tz","format","Control","disabled","currentTarget","Feedback","type","Text","as","Editor","classNames","onFocus","onBlur","ref","readOnly","hidden","defaultValue","placeholder","Button","variant","onClick","backPage","Card","Header","Body","dangerouslySetInnerHTML","__html"],"sourceRoot":""}