{"version":3,"file":"static/js/4941.6a64b04f.chunk.js","mappings":"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","sources":["pages/Admin/General/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SchemaForm, JSONSchema, initFormData, UISchema } from '@/components';\nimport type * as Type from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport { siteInfoStore } from '@/stores';\nimport { useGeneralSetting, updateGeneralSetting } from '@/services';\nimport Pattern from '@/common/pattern';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst General: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.general',\n  });\n  const Toast = useToast();\n  const updateSiteInfo = siteInfoStore((state) => state.update);\n\n  const { data: setting } = useGeneralSetting();\n  const schema: JSONSchema = {\n    title: t('page_title'),\n    required: ['name', 'site_url', 'contact_email'],\n    properties: {\n      name: {\n        type: 'string',\n        title: t('name.label'),\n        description: t('name.text'),\n      },\n      site_url: {\n        type: 'string',\n        title: t('site_url.label'),\n        description: t('site_url.text'),\n      },\n      short_description: {\n        type: 'string',\n        title: `${t('short_desc.label')} ${t('optional', {\n          keyPrefix: 'form',\n        })}`,\n        description: t('short_desc.text'),\n      },\n      description: {\n        type: 'string',\n        title: `${t('desc.label')} ${t('optional', {\n          keyPrefix: 'form',\n        })}`,\n        description: t('desc.text'),\n      },\n      contact_email: {\n        type: 'string',\n        title: t('contact_email.label'),\n        description: t('contact_email.text'),\n      },\n      check_update: {\n        type: 'boolean',\n        title: t('check_update.label'),\n        default: true,\n      },\n    },\n  };\n  const uiSchema: UISchema = {\n    site_url: {\n      'ui:options': {\n        inputType: 'url',\n        validator: (value) => {\n          let url: URL | undefined;\n          try {\n            url = new URL(value);\n          } catch (ex) {\n            return t('site_url.validate');\n          }\n          if (\n            !url ||\n            !/^https?:$/.test(url.protocol) ||\n            url.pathname !== '/' ||\n            url.search !== '' ||\n            url.hash !== ''\n          ) {\n            return t('site_url.validate');\n          }\n\n          return true;\n        },\n      },\n    },\n    contact_email: {\n      'ui:options': {\n        inputType: 'email',\n        validator: (value) => {\n          if (!Pattern.email.test(value)) {\n            return t('contact_email.validate');\n          }\n          return true;\n        },\n      },\n    },\n    check_update: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('check_update.text'),\n      },\n    },\n  };\n  const [formData, setFormData] = useState<Type.FormDataType>(\n    initFormData(schema),\n  );\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const reqParams: Type.AdminSettingsGeneral = {\n      name: formData.name.value,\n      description: formData.description.value,\n      short_description: formData.short_description.value,\n      site_url: formData.site_url.value,\n      contact_email: formData.contact_email.value,\n      check_update: formData.check_update.value,\n    };\n\n    updateGeneralSetting(reqParams)\n      .then((res) => {\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        if (res.name) {\n          formData.name.value = res.name;\n          formData.description.value = res.description;\n          formData.short_description.value = res.short_description;\n          formData.site_url.value = res.site_url;\n          formData.contact_email.value = res.contact_email;\n          formData.check_update.value = res.check_update;\n        }\n\n        setFormData({ ...formData });\n        updateSiteInfo(res);\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  useEffect(() => {\n    if (!setting) {\n      return;\n    }\n    const formMeta: Type.FormDataType = {};\n    Object.keys(formData).forEach((k) => {\n      formMeta[k] = { ...formData[k], value: setting[k] };\n    });\n    setFormData({ ...formData, ...formMeta });\n  }, [setting]);\n\n  const handleOnChange = (data) => {\n    setFormData(data);\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <SchemaForm\n        schema={schema}\n        formData={formData}\n        onSubmit={onSubmit}\n        uiSchema={uiSchema}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default General;\n"],"names":["General","t","useTranslation","keyPrefix","Toast","useToast","updateSiteInfo","siteInfoStore","state","update","data","setting","useGeneralSetting","schema","title","required","properties","name","type","description","site_url","short_description","contact_email","check_update","default","uiSchema","inputType","validator","value","url","URL","ex","test","protocol","pathname","search","hash","Pattern","email","label","formData","setFormData","useState","initFormData","useEffect","formMeta","Object","keys","forEach","k","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","preventDefault","stopPropagation","reqParams","updateGeneralSetting","then","res","onShow","msg","variant","catch","err","isError","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange"],"sourceRoot":""}