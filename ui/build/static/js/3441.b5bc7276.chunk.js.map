{"version":3,"file":"static/js/3441.b5bc7276.chunk.js","mappings":"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","sources":["pages/Admin/Privileges/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, FormEvent, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useToast } from '@/hooks';\nimport { FormDataType } from '@/common/interface';\nimport { JSONSchema, SchemaForm, UISchema, initFormData } from '@/components';\nimport {\n  getPrivilegeSetting,\n  putPrivilegeSetting,\n  AdminSettingsPrivilege,\n  AdminSettingsPrivilegeReq,\n} from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { ADMIN_PRIVILEGE_CUSTOM_LEVEL } from '@/common/constants';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.privilege',\n  });\n  const Toast = useToast();\n  const [privilege, setPrivilege] = useState<AdminSettingsPrivilege>();\n  const [schema, setSchema] = useState<JSONSchema>({\n    title: t('title'),\n    properties: {},\n  });\n  const [uiSchema, setUiSchema] = useState<UISchema>({\n    level: {\n      'ui:widget': 'select',\n    },\n  });\n  const [formData, setFormData] = useState<FormDataType>(initFormData(schema));\n\n  const setFormConfig = (state: FormDataType) => {\n    const selectedLevel = Number(state.level.value);\n    const levelOptions = privilege?.options;\n    const curLevel = levelOptions?.find((li) => {\n      return li.level === selectedLevel;\n    });\n    if (!levelOptions || !curLevel) {\n      return;\n    }\n    const uiState = {\n      level: uiSchema.level,\n    };\n    const props: JSONSchema['properties'] = {\n      level: {\n        type: 'number',\n        title: t('level.label'),\n        description: t('level.text'),\n        enum: levelOptions.map((_) => _.level),\n        enumNames: levelOptions.map((_) => _.level_desc),\n        default: selectedLevel,\n      },\n    };\n    curLevel.privileges.forEach((li) => {\n      props[li.key] = {\n        type: 'number',\n        title: li.label,\n        default: li.value,\n      };\n      uiState[li.key] = {\n        'ui:options': {\n          readOnly: curLevel.level !== ADMIN_PRIVILEGE_CUSTOM_LEVEL,\n          validator: (value: string) => {\n            const val = Number(value);\n            if (Number.isNaN(val)) {\n              return t('msg.should_be_number');\n            }\n            if (val < 1) {\n              return t('msg.number_larger_1');\n            }\n            return true;\n          },\n        },\n      };\n    });\n    const schemaState = {\n      ...schema,\n      properties: props,\n    };\n    const formState = initFormData(schemaState);\n    curLevel.privileges.forEach((li) => {\n      formState[li.key] = {\n        value: li.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    });\n    setSchema(schemaState);\n    setUiSchema(uiState);\n    setFormData(formState);\n  };\n\n  const onSubmit = (evt: FormEvent) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const reqParams: AdminSettingsPrivilegeReq = {\n      level: Number(formData.level.value),\n      custom_privileges: [],\n    };\n\n    if (reqParams.level === ADMIN_PRIVILEGE_CUSTOM_LEVEL) {\n      // construct custom level request data\n      Object.entries(formData).forEach(([key, value]) => {\n        if (key === 'level') {\n          return;\n        }\n        reqParams.custom_privileges?.push({\n          key,\n          value: Number(value.value),\n        });\n      });\n    }\n\n    putPrivilegeSetting(reqParams)\n      .then(() => {\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        if (reqParams.level === ADMIN_PRIVILEGE_CUSTOM_LEVEL) {\n          getPrivilegeSetting().then((resp) => {\n            setPrivilege(resp);\n          });\n        }\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  useEffect(() => {\n    if (!privilege) {\n      return;\n    }\n    setFormConfig({\n      level: {\n        value: privilege.selected_level,\n        isInvalid: false,\n        errorMsg: '',\n      },\n    });\n  }, [privilege]);\n  useEffect(() => {\n    getPrivilegeSetting().then((resp) => {\n      setPrivilege(resp);\n    });\n  }, []);\n  const handleOnChange = (state) => {\n    // if updated values in Custom form\n    if (\n      state.level.value === ADMIN_PRIVILEGE_CUSTOM_LEVEL &&\n      formData?.level?.value === state.level.value\n    ) {\n      setFormData(state);\n    } else {\n      setFormConfig(state);\n    }\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('title')}</h3>\n      <SchemaForm\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        onSubmit={onSubmit}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"names":["Index","t","useTranslation","keyPrefix","Toast","useToast","privilege","setPrivilege","useState","schema","setSchema","title","properties","uiSchema","setUiSchema","level","formData","setFormData","initFormData","setFormConfig","state","selectedLevel","Number","value","levelOptions","options","curLevel","find","li","uiState","props","type","description","enum","map","_","enumNames","level_desc","default","privileges","forEach","key","label","readOnly","ADMIN_PRIVILEGE_CUSTOM_LEVEL","validator","val","isNaN","schemaState","formState","isInvalid","errorMsg","useEffect","selected_level","getPrivilegeSetting","then","resp","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","preventDefault","stopPropagation","reqParams","custom_privileges","Object","entries","_reqParams$custom_pri","push","putPrivilegeSetting","onShow","msg","variant","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange","_formData$level"],"sourceRoot":""}