{"version":3,"file":"static/js/2275.78224680.chunk.js","mappings":"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","sources":["pages/Tags/Info/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { useState, useEffect } from 'react';\nimport { Alert, Row, Col, Button, Card } from 'react-bootstrap';\nimport { useParams, useNavigate, Link, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'classnames';\n\nimport { usePageTags } from '@/hooks';\nimport { Tag, TagSelector, FormatTime, Modal, htmlRender } from '@/components';\nimport {\n  useTagInfo,\n  useQuerySynonymsTags,\n  saveSynonymsTags,\n  deleteTag,\n  editCheck,\n  unDeleteTag,\n} from '@/services';\nimport { pathFactory } from '@/router/pathFactory';\nimport { loggedUserInfoStore, toastStore } from '@/stores';\n\nconst TagIntroduction = () => {\n  const userInfo = loggedUserInfoStore((state) => state.user);\n  const location = useLocation();\n  const isLogged = Boolean(userInfo?.access_token);\n  const [isEdit, setEditState] = useState(false);\n  const { tagName } = useParams();\n  const { data: tagInfo, mutate: refreshTagInfo } = useTagInfo({\n    name: tagName,\n  });\n  const { t } = useTranslation('translation', { keyPrefix: 'tag_info' });\n  const navigate = useNavigate();\n  const { data: synonymsData, mutate } = useQuerySynonymsTags(\n    tagInfo?.tag_id,\n    tagInfo?.status,\n  );\n  let pageTitle = '';\n  if (tagInfo) {\n    pageTitle = `'${tagInfo.display_name}' ${t('tag_wiki', {\n      keyPrefix: 'page_title',\n    })}`;\n  }\n  usePageTags({\n    title: pageTitle,\n  });\n  useEffect(() => {\n    if (location.state?.isReview) {\n      toastStore.getState().show({\n        msg: t('review', { keyPrefix: 'toast' }),\n        variant: 'warning',\n      });\n\n      // remove state isReview\n      const newLocation = { ...location };\n      delete newLocation.state;\n      window.history.replaceState(null, '', newLocation.pathname);\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    const fmt = document.querySelector('.content.fmt') as HTMLElement;\n    if (!fmt) {\n      return;\n    }\n    htmlRender(fmt);\n  }, [tagInfo?.parsed_text]);\n\n  if (!tagInfo) {\n    return null;\n  }\n  if (tagInfo.main_tag_slug_name) {\n    navigate(pathFactory.tagInfo(tagInfo.main_tag_slug_name), {\n      replace: true,\n    });\n    return null;\n  }\n\n  const handleEdit = () => {\n    setEditState(true);\n  };\n\n  const handleSave = () => {\n    saveSynonymsTags({\n      tag_id: tagInfo?.tag_id,\n      synonym_tag_list: synonymsData?.synonyms,\n    }).then(() => {\n      mutate();\n      setEditState(false);\n    });\n  };\n\n  const handleTagsChange = (value) => {\n    mutate(\n      { ...synonymsData, synonyms: [...value] },\n      {\n        revalidate: false,\n      },\n    );\n  };\n\n  const handleEditTag = () => {\n    editCheck(tagInfo?.tag_id).then(() => {\n      navigate(pathFactory.tagEdit(tagInfo?.tag_id));\n    });\n  };\n  const handleDeleteTag = () => {\n    if (synonymsData?.synonyms && synonymsData.synonyms.length > 0) {\n      Modal.confirm({\n        title: t('delete.title'),\n        content: t('delete.tip_with_synonyms'),\n        showConfirm: false,\n        cancelText: t('delete.close'),\n      });\n      return;\n    }\n    if (tagInfo.question_count > 0) {\n      Modal.confirm({\n        title: t('delete.title'),\n        content: t('delete.tip_with_posts'),\n        showConfirm: false,\n        cancelText: t('delete.close'),\n      });\n      return;\n    }\n\n    Modal.confirm({\n      title: t('delete.title'),\n      content: t('delete.tip'),\n      confirmText: t('delete', { keyPrefix: 'btns' }),\n      confirmBtnVariant: 'danger',\n      onConfirm: () => {\n        deleteTag(tagInfo.tag_id).then(() => {\n          navigate('/tags', { replace: true });\n        });\n      },\n    });\n  };\n  const onAction = (params) => {\n    if (params.action === 'edit') {\n      handleEditTag();\n    }\n    if (params.action === 'delete') {\n      handleDeleteTag();\n    }\n    if (params.action === 'undelete') {\n      Modal.confirm({\n        title: t('undelete_title', { keyPrefix: 'delete' }),\n        content: t('undelete_desc', { keyPrefix: 'delete' }),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('undelete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          unDeleteTag(tagInfo.tag_id).then(() => {\n            // undo\n            refreshTagInfo();\n          });\n        },\n      });\n    }\n  };\n\n  return (\n    <Row className=\"pt-4 mb-5\">\n      <Col className=\"page-main flex-auto\">\n        {tagInfo?.status === 'deleted' && (\n          <Alert variant=\"danger\" className=\"mb-4\">\n            {t('post_deleted', { keyPrefix: 'messages' })}\n          </Alert>\n        )}\n        <h3 className=\"mb-3\">\n          <Link\n            to={pathFactory.tagLanding(tagInfo.slug_name)}\n            replace\n            className=\"link-dark\">\n            {tagInfo.display_name}\n          </Link>\n        </h3>\n\n        <div className=\"text-secondary mb-4 small\">\n          <FormatTime preFix={t('created_at')} time={tagInfo.created_at} />\n          <FormatTime\n            preFix={t('edited_at')}\n            className=\"ms-3\"\n            time={tagInfo.updated_at}\n          />\n        </div>\n\n        <div\n          className=\"content text-break fmt\"\n          dangerouslySetInnerHTML={{ __html: tagInfo?.parsed_text }}\n        />\n        <div className=\"mt-4\">\n          {tagInfo?.member_actions.map((action, index) => {\n            return (\n              <Button\n                key={action.name}\n                variant=\"link\"\n                size=\"sm\"\n                className={classNames(\n                  'link-secondary btn-no-border p-0',\n                  index > 0 && 'ms-3',\n                )}\n                onClick={() => onAction(action)}>\n                {action.name}\n              </Button>\n            );\n          })}\n          {isLogged && (\n            <Link\n              to={`/tags/${tagInfo?.tag_id}/timeline`}\n              className={classNames(\n                'link-secondary btn-no-border p-0 small',\n                tagInfo?.member_actions?.length > 0 && 'ms-3',\n              )}>\n              {t('history')}\n            </Link>\n          )}\n        </div>\n      </Col>\n      <Col className=\"page-right-side mt-4 mt-xl-0\">\n        <Card>\n          <Card.Header className=\"d-flex justify-content-between\">\n            <span>{t('synonyms.title')}</span>\n            {isEdit ? (\n              <Button\n                variant=\"link\"\n                className=\"p-0 btn-no-border\"\n                onClick={handleSave}>\n                {t('synonyms.btn_save')}\n              </Button>\n            ) : synonymsData?.member_actions?.find(\n                (v) => v.action === 'edit',\n              ) ? (\n              <Button\n                variant=\"link\"\n                className=\"p-0 btn-no-border\"\n                onClick={handleEdit}>\n                {t('synonyms.btn_edit')}\n              </Button>\n            ) : null}\n          </Card.Header>\n          <Card.Body>\n            {isEdit && (\n              <>\n                <div className=\"mb-3\">\n                  {t('synonyms.text')}{' '}\n                  <Tag\n                    data={{\n                      slug_name: tagName || '',\n                      main_tag_slug_name: '',\n                      display_name:\n                        tagInfo?.display_name || tagInfo?.slug_name || '',\n                      recommend: false,\n                      reserved: false,\n                    }}\n                  />\n                </div>\n                <TagSelector\n                  value={synonymsData?.synonyms}\n                  onChange={handleTagsChange}\n                  hiddenDescription\n                />\n              </>\n            )}\n            {!isEdit &&\n              (synonymsData?.synonyms && synonymsData.synonyms.length > 0 ? (\n                <div className=\"m-n1\">\n                  {synonymsData.synonyms.map((item) => {\n                    return (\n                      <Tag key={item.tag_id} className=\"m-1\" data={item} />\n                    );\n                  })}\n                </div>\n              ) : (\n                <>\n                  <div className=\"text-muted mb-3\">{t('synonyms.empty')}</div>\n                  {synonymsData?.member_actions?.find(\n                    (v) => v.action === 'edit',\n                  ) && (\n                    <Button\n                      variant=\"outline-primary\"\n                      size=\"sm\"\n                      onClick={handleEdit}>\n                      {t('synonyms.btn_add')}\n                    </Button>\n                  )}\n                </>\n              ))}\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default TagIntroduction;\n"],"names":["TagIntroduction","_tagInfo$member_actio","_synonymsData$member_","_synonymsData$member_2","userInfo","loggedUserInfoStore","state","user","location","useLocation","isLogged","Boolean","access_token","isEdit","setEditState","useState","tagName","useParams","data","tagInfo","mutate","refreshTagInfo","useTagInfo","name","t","useTranslation","keyPrefix","navigate","useNavigate","synonymsData","useQuerySynonymsTags","tag_id","status","pageTitle","display_name","usePageTags","title","useEffect","_location$state","isReview","toastStore","getState","show","msg","variant","newLocation","window","history","replaceState","pathname","fmt","document","querySelector","htmlRender","parsed_text","main_tag_slug_name","pathFactory","replace","handleEdit","onAction","params","action","editCheck","then","tagEdit","synonyms","length","Modal","confirm","content","showConfirm","cancelText","question_count","confirmText","confirmBtnVariant","onConfirm","deleteTag","cancelBtnVariant","unDeleteTag","_jsxs","Row","className","children","Col","_jsx","Alert","Link","to","tagLanding","slug_name","FormatTime","preFix","time","created_at","updated_at","dangerouslySetInnerHTML","__html","member_actions","map","index","Button","size","classNames","onClick","Card","Header","handleSave","saveSynonymsTags","synonym_tag_list","find","v","Body","_Fragment","Tag","recommend","reserved","TagSelector","value","onChange","revalidate","hiddenDescription","item"],"sourceRoot":""}