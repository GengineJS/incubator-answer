{"version":3,"file":"static/js/4748.89b097e4.chunk.js","mappings":"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","sources":["pages/Questions/Ask/components/SearchQuestion/index.tsx","pages/Questions/Ask/index.tsx","../node_modules/.pnpm/registry.npmmirror.com+lodash@4.17.21/node_modules/lodash/isEqual.js","webpack://answer-static/./src/pages/Questions/Ask/components/SearchQuestion/index.scss?4a22"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { memo } from 'react';\nimport { Accordion, ListGroup } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Icon } from '@/components';\nimport { pathFactory } from '@/router/pathFactory';\n\nimport './index.scss';\n\nconst SearchQuestion = ({ similarQuestions }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'ask' });\n  // set max similar number\n  if (similarQuestions && similarQuestions.length > 5) {\n    similarQuestions.length = 5;\n  }\n  return (\n    <Accordion defaultActiveKey=\"0\" className=\"search-question-wrap mt-3\">\n      <Accordion.Item eventKey=\"0\" className=\"overflow-hidden\">\n        <Accordion.Button className=\"px-3 py-2 bg-light text-body\">\n          {t('similar_questions')}\n        </Accordion.Button>\n\n        <Accordion.Body className=\"p-0\">\n          <ListGroup variant=\"flush\">\n            {similarQuestions.map((item) => {\n              return (\n                <ListGroup.Item\n                  action\n                  as=\"a\"\n                  className=\"link-dark text-wrap text-break\"\n                  key={item.id}\n                  href={pathFactory.questionLanding(\n                    item.id,\n                    item.url_title,\n                    item.content_type,\n                  )}\n                  target=\"_blank\">\n                  <span\n                    className={`${\n                      item.accepted_answer || item.answer_count > 0\n                        ? 'me-3'\n                        : ''\n                    }`}>\n                    {item.title}\n                    {item.status === 'closed'\n                      ? ` [${t('closed', { keyPrefix: 'question' })}] `\n                      : null}\n                  </span>\n\n                  {item.accepted_answer ? (\n                    <span className=\"small text-success d-inline-block\">\n                      <Icon type=\"bi\" name=\"check-circle-fill\" />\n                      <span className=\"ms-1\">\n                        {t('x_answers', {\n                          keyPrefix: 'question',\n                          count: item.answer_count,\n                        })}\n                      </span>\n                    </span>\n                  ) : (\n                    item.answer_count > 0 && (\n                      <span className=\"small text-secondary d-inline-block\">\n                        <Icon type=\"bi\" name=\"chat-square-text-fill\" />\n                        <span className=\"ms-1\">\n                          {t('x_answers', {\n                            keyPrefix: 'question',\n                            count: item.answer_count,\n                          })}\n                        </span>\n                      </span>\n                    )\n                  )}\n                </ListGroup.Item>\n              );\n            })}\n          </ListGroup>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n\nexport default memo(SearchQuestion);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { useParams, useNavigate, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport debounce from 'lodash/debounce';\n\nimport { usePageTags, usePromptWithUnload } from '@/hooks';\nimport { Editor, EditorRef, TagSelector } from '@/components';\nimport type * as Type from '@/common/interface';\nimport {\n  ContentType,\n  DRAFT_QUESTION_STORAGE_KEY,\n  hasPayType,\n} from '@/common/constants';\nimport {\n  saveQuestion,\n  questionDetail,\n  modifyQuestion,\n  useQueryRevisions,\n  queryQuestionByTitle,\n  getTagsBySlugName,\n  saveQuestionWithAnswer,\n} from '@/services';\nimport {\n  handleFormError,\n  SaveDraft,\n  storageExpires,\n  scrollToElementTop,\n} from '@/utils';\nimport { pathFactory } from '@/router/pathFactory';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport { getUrlQuestionType } from '@/common/functions';\nimport {\n  AskEditTitleTypeQuery,\n  AskIntegralTypeQuery,\n  AskPostContentTypeQuery,\n  AskTitleTypeQuery,\n} from '@/common/i18n';\nimport { loggedUserInfoStore } from '@/stores';\n\nimport SearchQuestion from './components/SearchQuestion';\n\ninterface FormDataItem {\n  title: Type.FormValue<string>;\n  integral: Type.FormValue<number>;\n  tags: Type.FormValue<Type.Tag[]>;\n  content: Type.FormValue<string>;\n  answer_content: Type.FormValue<string>;\n  edit_summary: Type.FormValue<string>;\n}\n\nconst saveDraft = new SaveDraft({ type: 'question' });\n\nconst Ask = () => {\n  const initFormData = {\n    title: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    integral: {\n      value: 0,\n      isInvalid: false,\n      errorMsg: '',\n    },\n    tags: {\n      value: [],\n      isInvalid: false,\n      errorMsg: '',\n    },\n    content: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    answer_content: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    edit_summary: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  };\n  const { t } = useTranslation('translation', { keyPrefix: 'ask' });\n  const [formData, setFormData] = useState<FormDataItem>(initFormData);\n  const [immData, setImmData] = useState<FormDataItem>(initFormData);\n  const [checked, setCheckState] = useState(false);\n  const [blockState, setBlockState] = useState(false);\n  const [focusType, setForceType] = useState('');\n  const [hasDraft, setHasDraft] = useState(false);\n  const resetForm = () => {\n    setFormData(initFormData);\n    setCheckState(false);\n    setForceType('');\n  };\n  const [similarQuestions, setSimilarQuestions] = useState([]);\n\n  const editorRef = useRef<EditorRef>({\n    getHtml: () => '',\n  });\n  const editorRef2 = useRef<EditorRef>({\n    getHtml: () => '',\n  });\n\n  const { qid } = useParams();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const initQueryTags = () => {\n    const queryTags = searchParams.get('tags');\n    if (!queryTags) {\n      return;\n    }\n    getTagsBySlugName(queryTags).then((tags) => {\n      // eslint-disable-next-line\n      handleTagsChange(tags);\n    });\n  };\n\n  const isEdit = qid !== undefined;\n\n  const saveCaptcha = useCaptchaPlugin('question');\n  const editCaptcha = useCaptchaPlugin('edit');\n\n  const removeDraft = () => {\n    saveDraft.save.cancel();\n    saveDraft.remove();\n    setHasDraft(false);\n  };\n\n  useEffect(() => {\n    if (!qid) {\n      initQueryTags();\n      const draft = storageExpires.get(DRAFT_QUESTION_STORAGE_KEY);\n      if (draft) {\n        formData.title.value = draft.title;\n        formData.content.value = draft.content;\n        formData.tags.value = draft.tags;\n        formData.answer_content.value = draft.answer_content;\n        setCheckState(Boolean(draft.answer_content));\n        setHasDraft(true);\n        setFormData({ ...formData });\n      } else {\n        resetForm();\n      }\n    }\n    return () => {\n      resetForm();\n    };\n  }, [qid]);\n\n  useEffect(() => {\n    const { title, tags, content, answer_content } = formData;\n    const { title: editTitle, tags: editTags, content: editContent } = immData;\n\n    // edited\n    if (qid) {\n      if (\n        editTitle.value !== title.value ||\n        editContent.value !== content.value ||\n        !isEqual(\n          editTags.value.map((v) => v.slug_name),\n          tags.value.map((v) => v.slug_name),\n        )\n      ) {\n        setBlockState(true);\n      } else {\n        setBlockState(false);\n      }\n      return;\n    }\n    // write\n    if (\n      title.value ||\n      tags.value.length > 0 ||\n      content.value ||\n      answer_content.value\n    ) {\n      // save draft\n      saveDraft.save({\n        params: {\n          title: title.value,\n          tags: tags.value,\n          content: content.value,\n          answer_content: answer_content.value,\n        },\n        callback: () => setHasDraft(true),\n      });\n      setBlockState(true);\n    } else {\n      removeDraft();\n      setBlockState(false);\n    }\n  }, [formData]);\n\n  usePromptWithUnload({\n    when: blockState,\n  });\n  const contentType = getUrlQuestionType();\n  const { data: revisions = [] } = useQueryRevisions(qid);\n  const { score } = loggedUserInfoStore((state) => state.user);\n  const isPayType = hasPayType();\n  const [currIntegral, setCurrIntegral] = useState(\n    contentType === ContentType.QUESTION || contentType === ContentType.BOUNTY\n      ? score\n      : 1000,\n  );\n  // const [beginIntegral, setBeginIntergral] = useState(0);\n  let contentPlaceHolder = '';\n  if (contentType === ContentType.BOUNTY) {\n    // 项目需求模板\n    contentPlaceHolder = '请详细描述你的项目需求，项目周期及交付方式';\n  }\n  const [acceptedID, setAcceptedID] = useState('');\n  useEffect(() => {\n    if (!isEdit) {\n      return;\n    }\n    questionDetail(qid).then((res) => {\n      setAcceptedID(res.accepted_answer_id);\n      formData.title.value = res.title;\n      formData.content.value = res.content;\n      formData.tags.value = res.tags.map((item) => {\n        return {\n          ...item,\n          parsed_text: '',\n          original_text: '',\n        };\n      });\n      formData.integral.value = res.score;\n      // setBeginIntergral(res.score);\n      if (\n        contentType === ContentType.QUESTION ||\n        contentType === ContentType.BOUNTY\n      ) {\n        setCurrIntegral(currIntegral + res.score);\n      }\n      setImmData({ ...formData });\n      setFormData({ ...formData });\n    });\n  }, [qid]);\n\n  const querySimilarQuestions = useCallback(\n    debounce((title) => {\n      queryQuestionByTitle(title).then((res) => {\n        setSimilarQuestions(res);\n      });\n    }, 400),\n    [],\n  );\n\n  const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      title: { ...formData.title, value: e.currentTarget.value, errorMsg: '' },\n    });\n    if (e.currentTarget.value.length >= 10) {\n      querySimilarQuestions(e.currentTarget.value);\n    }\n    if (e.currentTarget.value.length === 0) {\n      setSimilarQuestions([]);\n    }\n  };\n  const handleIntegralChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const currInput = parseInt(e.currentTarget.value, 10);\n    setFormData({\n      ...formData,\n      integral: {\n        ...formData.integral,\n        value: Math.max(0, Math.min(currInput, currIntegral)),\n        errorMsg: '',\n      },\n    });\n  };\n  const handleContentChange = (value: string) => {\n    setFormData({\n      ...formData,\n      content: { ...formData.content, value, errorMsg: '' },\n    });\n  };\n  const handleTagsChange = (value) =>\n    setFormData({\n      ...formData,\n      tags: { ...formData.tags, value, errorMsg: '' },\n    });\n\n  const handleAnswerChange = (value: string) =>\n    setFormData({\n      ...formData,\n      answer_content: { ...formData.answer_content, value, errorMsg: '' },\n    });\n\n  const handleSummaryChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    setFormData({\n      ...formData,\n      edit_summary: {\n        ...formData.edit_summary,\n        value: evt.currentTarget.value,\n      },\n    });\n\n  const deleteDraft = () => {\n    const res = window.confirm(t('discard_confirm', { keyPrefix: 'draft' }));\n    if (res) {\n      removeDraft();\n      resetForm();\n    }\n  };\n\n  const submitModifyQuestion = (params) => {\n    setBlockState(false);\n    const ep = {\n      ...params,\n      id: qid,\n      edit_summary: formData.edit_summary.value,\n    };\n    const imgCode = editCaptcha?.getCaptcha();\n    if (imgCode?.verify) {\n      ep.captcha_code = imgCode.captcha_code;\n      ep.captcha_id = imgCode.captcha_id;\n    }\n    modifyQuestion(ep)\n      .then(async (res) => {\n        await editCaptcha?.close();\n        navigate(\n          pathFactory.questionLanding(qid, res?.url_title, contentType),\n          {\n            state: { isReview: res?.wait_for_review },\n          },\n        );\n      })\n      .catch((err) => {\n        if (err.isError) {\n          editCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const submitQuestion = async (params) => {\n    setBlockState(false);\n    const imgCode = saveCaptcha?.getCaptcha();\n    if (imgCode?.verify) {\n      params.captcha_code = imgCode.captcha_code;\n      params.captcha_id = imgCode.captcha_id;\n    }\n    let res;\n    if (checked) {\n      res = await saveQuestionWithAnswer({\n        ...params,\n        answer_content: formData.answer_content.value,\n      }).catch((err) => {\n        if (err.isError) {\n          const captchaErr = saveCaptcha?.handleCaptchaError(err.list);\n          if (!(captchaErr && err.list.length === 1)) {\n            const data = handleFormError(err, formData);\n            setFormData({ ...data });\n            const ele = document.getElementById(err.list[0].error_field);\n            scrollToElementTop(ele);\n          }\n        }\n      });\n    } else {\n      res = await saveQuestion(params).catch((err) => {\n        if (err.isError) {\n          const captchaErr = saveCaptcha?.handleCaptchaError(err.list);\n          if (!(captchaErr && err.list.length === 1)) {\n            const data = handleFormError(err, formData);\n            setFormData({ ...data });\n            const ele = document.getElementById(err.list[0].error_field);\n            scrollToElementTop(ele);\n          }\n        }\n      });\n    }\n\n    const id = res?.id || res?.question?.id;\n    if (id) {\n      await saveCaptcha?.close();\n      if (checked) {\n        navigate(\n          pathFactory.questionLanding(\n            id,\n            res?.question?.url_title,\n            contentType,\n          ),\n        );\n      } else {\n        navigate(pathFactory.questionLanding(id, res?.url_title, contentType));\n      }\n    }\n    removeDraft();\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const params: Type.QuestionParams = {\n      title: formData.title.value,\n      content: formData.content.value,\n      tags: formData.tags.value,\n      score: formData.integral.value,\n      content_type: getUrlQuestionType(),\n    };\n\n    if (isEdit) {\n      if (!editCaptcha) {\n        submitModifyQuestion(params);\n        return;\n      }\n      editCaptcha.check(() => submitModifyQuestion(params));\n    } else {\n      if (!saveCaptcha) {\n        submitQuestion(params);\n        return;\n      }\n      saveCaptcha?.check(async () => {\n        submitQuestion(params);\n      });\n    }\n  };\n  const backPage = () => {\n    navigate(-1);\n  };\n\n  const handleSelectedRevision = (e) => {\n    const index = e.target.value;\n    const revision = revisions[index];\n    formData.content.value = revision.content?.content || '';\n    setImmData({ ...formData });\n    setFormData({ ...formData });\n  };\n  const bool = similarQuestions.length > 0 && !isEdit;\n  let pageTitle = t('ask_a_question', { keyPrefix: 'page_title' });\n  if (isEdit) {\n    pageTitle = t('edit_question', { keyPrefix: 'page_title' });\n  }\n  usePageTags({\n    title: pageTitle,\n  });\n  return (\n    <div className=\"pt-4 mb-5\">\n      <h3 className=\"mb-4\">\n        {isEdit\n          ? t(`${AskEditTitleTypeQuery[contentType]}`)\n          : t(`${AskTitleTypeQuery[contentType]}`)}\n      </h3>\n      <Row>\n        <Col className=\"page-main flex-auto\">\n          <Form noValidate onSubmit={handleSubmit}>\n            {isEdit && (\n              <Form.Group controlId=\"revision\" className=\"mb-3\">\n                <Form.Label>{t('form.fields.revision.label')}</Form.Label>\n                <Form.Select onChange={handleSelectedRevision}>\n                  {revisions.map(({ reason, create_at, user_info }, index) => {\n                    const date = dayjs(create_at * 1000)\n                      .tz()\n                      .format(t('long_date_with_time', { keyPrefix: 'dates' }));\n                    return (\n                      <option key={`${create_at}`} value={index}>\n                        {`${date} - ${user_info.display_name} - ${\n                          reason ||\n                          (index === revisions.length - 1\n                            ? t('default_first_reason')\n                            : t('default_reason'))\n                        }`}\n                      </option>\n                    );\n                  })}\n                </Form.Select>\n              </Form.Group>\n            )}\n\n            <Form.Group controlId=\"title\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.title.label')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.title.value}\n                isInvalid={formData.title.isInvalid}\n                onChange={handleTitleChange}\n                placeholder={t(\n                  `form.fields.${AskTitleTypeQuery[contentType]}.placeholder`,\n                )}\n                autoFocus\n                contentEditable\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.title.errorMsg}\n              </Form.Control.Feedback>\n              {bool && <SearchQuestion similarQuestions={similarQuestions} />}\n            </Form.Group>\n\n            <Form.Group controlId=\"content\">\n              <Form.Label>{t('form.fields.body.label')}</Form.Label>\n              <Form.Control\n                defaultValue={formData.content.value}\n                isInvalid={formData.content.isInvalid}\n                hidden\n              />\n              <Editor\n                value={formData.content.value}\n                onChange={handleContentChange}\n                className={classNames(\n                  'form-control p-0',\n                  focusType === 'content' && 'focus',\n                )}\n                onFocus={() => {\n                  setForceType('content');\n                }}\n                onBlur={() => {\n                  setForceType('');\n                }}\n                editorPlaceholder={contentPlaceHolder}\n                ref={editorRef}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.content.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"tags\" className=\"my-3\">\n              <Form.Label>{t('form.fields.tags.label')}</Form.Label>\n              <Form.Control\n                defaultValue={JSON.stringify(formData.tags.value)}\n                isInvalid={formData.tags.isInvalid}\n                hidden\n              />\n              <TagSelector\n                value={formData.tags.value}\n                onChange={handleTagsChange}\n                showRequiredTag\n                maxTagLength={5}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.tags.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"integral\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.integral.label')}</Form.Label>\n              <Form.Control\n                type=\"number\"\n                min={0}\n                max={currIntegral}\n                step={1}\n                value={formData.integral.value}\n                isInvalid={formData.integral.isInvalid}\n                onChange={handleIntegralChange}\n                disabled={!!acceptedID && acceptedID !== '0' && isPayType} //! !(acceptedID && isPayType && beginIntegral)\n              />\n              <Form.Text>\n                {t(`${AskIntegralTypeQuery[contentType]}`)}\n                <a\n                  href=\"https://cloud.assetbun.com/buy?tab=2\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  {`${t(`recharge`)} `}\n                </a>\n                {isPayType ? t(`attention`) : ''}\n              </Form.Text>\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.integral.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            {isEdit && (\n              <Form.Group controlId=\"edit_summary\" className=\"my-3\">\n                <Form.Label>{t('form.fields.edit_summary.label')}</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  defaultValue={formData.edit_summary.value}\n                  isInvalid={formData.edit_summary.isInvalid}\n                  placeholder={t('form.fields.edit_summary.placeholder')}\n                  onChange={handleSummaryChange}\n                  contentEditable\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {formData.edit_summary.errorMsg}\n                </Form.Control.Feedback>\n              </Form.Group>\n            )}\n            {!checked && (\n              <div className=\"mt-3\">\n                <Button type=\"submit\" className=\"me-2\">\n                  {isEdit\n                    ? t('btn_save_edits')\n                    : t(`${AskPostContentTypeQuery[contentType]}`)}\n                </Button>\n                {isEdit && (\n                  <Button variant=\"link\" onClick={backPage}>\n                    {t('cancel', { keyPrefix: 'btns' })}\n                  </Button>\n                )}\n\n                {hasDraft && (\n                  <Button variant=\"link\" onClick={deleteDraft}>\n                    {t('discard_draft', { keyPrefix: 'btns' })}\n                  </Button>\n                )}\n              </div>\n            )}\n            {!isEdit && (\n              <>\n                <Form.Check\n                  className=\"mt-5\"\n                  checked={checked}\n                  type=\"checkbox\"\n                  label={t('answer_question')}\n                  onChange={(e) => setCheckState(e.target.checked)}\n                  id=\"radio-answer\"\n                />\n                {checked && (\n                  <Form.Group controlId=\"answer\" className=\"mt-4\">\n                    <Form.Label>{t('form.fields.answer.label')}</Form.Label>\n                    <Editor\n                      value={formData.answer_content.value}\n                      onChange={handleAnswerChange}\n                      ref={editorRef2}\n                      className={classNames(\n                        'form-control p-0',\n                        focusType === 'answer' && 'focus',\n                      )}\n                      onFocus={() => {\n                        setForceType('answer');\n                      }}\n                      onBlur={() => {\n                        setForceType('');\n                      }}\n                    />\n                    <Form.Control\n                      type=\"text\"\n                      isInvalid={formData.answer_content.isInvalid}\n                      hidden\n                    />\n                    <Form.Control.Feedback type=\"invalid\">\n                      {formData.answer_content.errorMsg}\n                    </Form.Control.Feedback>\n                  </Form.Group>\n                )}\n              </>\n            )}\n            {checked && (\n              <div className=\"mt-3\">\n                <Button type=\"submit\">{t('post_question&answer')}</Button>\n                {hasDraft && (\n                  <Button variant=\"link\" className=\"ms-2\" onClick={deleteDraft}>\n                    {t('discard_draft', { keyPrefix: 'btns' })}\n                  </Button>\n                )}\n              </div>\n            )}\n          </Form>\n        </Col>\n        <Col className=\"page-right-side mt-4 mt-xl-0\">\n          <Card>\n            <Card.Header>\n              {t('title', { keyPrefix: 'how_to_format' })}\n            </Card.Header>\n            <Card.Body\n              className=\"fmt small\"\n              dangerouslySetInnerHTML={{\n                __html: t('desc', { keyPrefix: 'how_to_format' }),\n              }}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Ask;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["SearchQuestion","similarQuestions","t","useTranslation","keyPrefix","length","_jsx","Accordion","defaultActiveKey","className","children","_jsxs","Item","eventKey","Button","Body","ListGroup","variant","map","item","action","as","href","pathFactory","questionLanding","id","url_title","content_type","target","accepted_answer","answer_count","title","status","Icon","type","name","count","memo","saveDraft","SaveDraft","Ask","initFormData","value","isInvalid","errorMsg","integral","tags","content","answer_content","edit_summary","formData","setFormData","useState","immData","setImmData","checked","setCheckState","blockState","setBlockState","focusType","setForceType","hasDraft","setHasDraft","resetForm","setSimilarQuestions","editorRef","useRef","getHtml","editorRef2","qid","useParams","navigate","useNavigate","searchParams","useSearchParams","isEdit","undefined","saveCaptcha","useCaptchaPlugin","editCaptcha","removeDraft","save","cancel","remove","useEffect","initQueryTags","queryTags","get","getTagsBySlugName","then","handleTagsChange","draft","storageExpires","DRAFT_QUESTION_STORAGE_KEY","Boolean","editTitle","editTags","editContent","isEqual","v","slug_name","params","callback","usePromptWithUnload","when","contentType","getUrlQuestionType","data","revisions","useQueryRevisions","score","loggedUserInfoStore","state","user","isPayType","hasPayType","currIntegral","setCurrIntegral","ContentType","QUESTION","BOUNTY","contentPlaceHolder","acceptedID","setAcceptedID","questionDetail","res","accepted_answer_id","parsed_text","original_text","querySimilarQuestions","useCallback","debounce","queryQuestionByTitle","deleteDraft","window","confirm","submitModifyQuestion","ep","imgCode","getCaptcha","verify","captcha_code","captcha_id","modifyQuestion","async","close","isReview","wait_for_review","catch","err","isError","handleCaptchaError","list","handleFormError","ele","document","getElementById","error_field","scrollToElementTop","submitQuestion","_res","_res2","_res2$question","saveQuestionWithAnswer","saveQuestion","question","_res3","_res3$question","_res4","bool","pageTitle","usePageTags","AskEditTitleTypeQuery","AskTitleTypeQuery","Row","Col","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","check","Group","controlId","Label","Select","onChange","e","_revision$content","index","revision","reason","create_at","user_info","date","dayjs","tz","format","display_name","Control","currentTarget","placeholder","autoFocus","contentEditable","Feedback","defaultValue","hidden","Editor","classNames","onFocus","onBlur","editorPlaceholder","ref","JSON","stringify","TagSelector","showRequiredTag","maxTagLength","min","max","step","currInput","parseInt","Math","disabled","Text","AskIntegralTypeQuery","rel","evt","AskPostContentTypeQuery","onClick","backPage","_Fragment","Check","label","Card","Header","dangerouslySetInnerHTML","__html","baseIsEqual","require","module","exports","other"],"sourceRoot":""}