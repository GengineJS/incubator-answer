{"version":3,"file":"static/js/6091.e0afe357.chunk.js","mappings":"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","sources":["pages/Users/Settings/Account/components/ModifyEmail/index.tsx","pages/Users/Settings/Account/components/ModifyPass/index.tsx","pages/Users/Settings/Account/components/MyLogins/index.tsx","pages/Users/Settings/Account/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, FormEvent, useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport type * as Type from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport { getLoggedUserInfo, changeEmail } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.account',\n  });\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState<Type.FormDataType>({\n    e_mail: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n  const [userInfo, setUserInfo] = useState<Type.UserInfoRes>();\n  const toast = useToast();\n  const emailCaptcha = useCaptchaPlugin('edit_userinfo');\n\n  useEffect(() => {\n    getLoggedUserInfo().then((resp) => {\n      setUserInfo(resp);\n    });\n  }, []);\n\n  const handleChange = (params: Type.FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { e_mail, pass } = formData;\n\n    if (!e_mail.value) {\n      bol = false;\n      formData.e_mail = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('new_email.msg'),\n      };\n    }\n\n    if (!pass.value) {\n      bol = false;\n      formData.pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('pass.msg'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n    return bol;\n  };\n\n  const initFormData = () => {\n    setFormData({\n      e_mail: {\n        value: '',\n        isInvalid: false,\n        errorMsg: '',\n      },\n      pass: {\n        value: '',\n        isInvalid: false,\n        errorMsg: '',\n      },\n    });\n  };\n\n  const postEmail = (event?: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const params: any = {\n      e_mail: formData.e_mail.value,\n      pass: formData.pass.value,\n    };\n\n    const imgCode = emailCaptcha?.getCaptcha();\n    if (imgCode?.verify) {\n      params.captcha_code = imgCode.captcha_code;\n      params.captcha_id = imgCode.captcha_id;\n    }\n    changeEmail(params)\n      .then(async () => {\n        await emailCaptcha?.close();\n        setStep(1);\n        toast.onShow({\n          msg: t('change_email_info'),\n          variant: 'warning',\n        });\n        initFormData();\n      })\n      .catch((err) => {\n        if (err.isError) {\n          emailCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n    if (!emailCaptcha) {\n      postEmail();\n      return;\n    }\n    emailCaptcha.check(() => {\n      postEmail();\n    });\n  };\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form>\n          <Form.Group controlId=\"oldEmail\" className=\"mb-3\">\n            <Form.Label>{t('email.label')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              disabled\n              defaultValue={userInfo?.e_mail?.replace(\n                /(.{2})(.+)(@.+)/i,\n                '$1****$3',\n              )}\n            />\n          </Form.Group>\n\n          <Button\n            variant=\"outline-secondary\"\n            onClick={() => {\n              setStep(2);\n            }}>\n            {t('change_email_btn')}\n          </Button>\n        </Form>\n      )}\n      {step === 2 && (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"pass\" className=\"mb-3\">\n            <Form.Label>{t('pass.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"new-password\"\n              required\n              type=\"password\"\n              isInvalid={formData.pass.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  pass: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.pass.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"e_mail\" className=\"mb-3\">\n            <Form.Label>{t('new_email.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"off\"\n              required\n              type=\"email\"\n              placeholder=\"\"\n              value={formData.e_mail.value}\n              isInvalid={formData.e_mail.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  e_mail: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.e_mail.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <div>\n            <Button type=\"submit\" variant=\"primary\" className=\"me-2\">\n              {t('save', { keyPrefix: 'btns' })}\n            </Button>\n\n            <Button variant=\"link\" onClick={() => setStep(1)}>\n              {t('cancel', { keyPrefix: 'btns' })}\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, FormEvent, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport classname from 'classnames';\n\nimport { useToast } from '@/hooks';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport type { FormDataType } from '@/common/interface';\nimport { modifyPassword } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { loggedUserInfoStore } from '@/stores';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.account',\n  });\n  const { user } = loggedUserInfoStore();\n  const [showForm, setFormState] = useState(false);\n  const toast = useToast();\n  const [formData, setFormData] = useState<FormDataType>({\n    old_pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    pass2: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const infoCaptcha = useCaptchaPlugin('edit_userinfo');\n\n  const handleFormState = () => {\n    setFormState((pre) => !pre);\n  };\n\n  const handleChange = (params: FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { old_pass, pass, pass2 } = formData;\n    if (!old_pass.value && user.have_password) {\n      bol = false;\n      formData.old_pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.empty'),\n      };\n    }\n\n    if (!pass.value) {\n      bol = false;\n      formData.pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.empty'),\n      };\n    }\n\n    if (bol && pass.value && pass.value.length < 8) {\n      bol = false;\n      formData.pass = {\n        value: pass.value,\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.length'),\n      };\n    }\n\n    if (!pass2.value) {\n      bol = false;\n      formData.pass2 = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.empty'),\n      };\n    }\n\n    if (bol && pass2.value && pass2.value.length < 8) {\n      bol = false;\n      formData.pass2 = {\n        value: pass2.value,\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.length'),\n      };\n    }\n    if (bol && pass.value && pass2.value && pass.value !== pass2.value) {\n      bol = false;\n      formData.pass2 = {\n        value: pass2.value,\n        isInvalid: true,\n        errorMsg: t('current_pass.msg.different'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n\n  const postModifyPass = (event?: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const params: any = {\n      old_pass: formData.old_pass.value,\n      pass: formData.pass.value,\n    };\n\n    const imgCode = infoCaptcha?.getCaptcha();\n    if (imgCode?.verify) {\n      params.captcha_code = imgCode.captcha_code;\n      params.captcha_id = imgCode.captcha_id;\n    }\n    modifyPassword(params)\n      .then(async () => {\n        await infoCaptcha?.close();\n        toast.onShow({\n          msg: t('update_password', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        handleFormState();\n      })\n      .catch((err) => {\n        if (err.isError) {\n          infoCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n    if (!infoCaptcha) {\n      postModifyPass();\n      return;\n    }\n\n    infoCaptcha.check(() => {\n      postModifyPass();\n    });\n  };\n\n  return (\n    <div className=\"mt-5\">\n      {showForm ? (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group\n            controlId=\"old_pass\"\n            className={classname('mb-3', user.have_password ? '' : 'd-none')}>\n            <Form.Label>{t('current_pass.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"off\"\n              required\n              type=\"password\"\n              placeholder=\"\"\n              isInvalid={formData.old_pass.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  old_pass: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.old_pass.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"new_pass\" className=\"mb-3\">\n            <Form.Label>{t('new_pass.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"off\"\n              required\n              type=\"password\"\n              isInvalid={formData.pass.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  pass: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.pass.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"pass2\" className=\"mb-3\">\n            <Form.Label>{t('pass_confirm.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"off\"\n              required\n              type=\"password\"\n              isInvalid={formData.pass2.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  pass2: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.pass2.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n          <div>\n            <Button type=\"submit\" variant=\"primary\" className=\"me-2\">\n              {t('save', { keyPrefix: 'btns' })}\n            </Button>\n\n            <Button variant=\"link\" onClick={() => handleFormState()}>\n              {t('cancel', { keyPrefix: 'btns' })}\n            </Button>\n          </div>\n        </Form>\n      ) : (\n        <>\n          <Form.Label>{t('password_title')}</Form.Label>\n          <br />\n          <Button\n            variant=\"outline-secondary\"\n            type=\"submit\"\n            onClick={() => {\n              handleFormState();\n            }}>\n            {t('change_pass_btn')}\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { memo } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Modal } from '@/components';\nimport { useOauthConnectorInfoByUser, userOauthUnbind } from '@/services';\nimport { useToast } from '@/hooks';\nimport { base64ToSvg } from '@/utils';\nimport Storage from '@/utils/storage';\nimport { REDIRECT_PATH_STORAGE_KEY } from '@/common/constants';\n\nconst Index = () => {\n  const { data, mutate } = useOauthConnectorInfoByUser();\n  const toast = useToast();\n\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.my_logins',\n  });\n\n  const { t: t2 } = useTranslation('translation', {\n    keyPrefix: 'oauth',\n  });\n\n  const deleteLogins = (e, item) => {\n    if (!item.binding) {\n      Storage.set(REDIRECT_PATH_STORAGE_KEY, window.location.pathname);\n      return;\n    }\n    e.preventDefault();\n    Modal.confirm({\n      title: t('modal_title'),\n      content: t('modal_content'),\n      confirmBtnVariant: 'danger',\n      confirmText: t('modal_confirm_btn'),\n      onConfirm: () => {\n        userOauthUnbind({ external_id: item.external_id }).then(() => {\n          mutate();\n          toast.onShow({\n            msg: t('remove_success'),\n            variant: 'success',\n          });\n        });\n      },\n    });\n  };\n\n  if (!data?.length) return null;\n  return (\n    <div className=\"mt-5\">\n      <div className=\"form-label\">{t('title')}</div>\n      <small className=\"form-text mt-0\">{t('label')}</small>\n\n      <div className=\"d-grid gap-2 mt-3\">\n        {data?.map((item) => {\n          return (\n            <div key={item.name}>\n              <Button\n                variant={item.binding ? 'outline-danger' : 'outline-secondary'}\n                href={item.link}\n                onClick={(e) => deleteLogins(e, item)}>\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: base64ToSvg(item.icon, 'btnSvg me-2'),\n                  }}\n                />\n                <span>\n                  {t2(item.binding ? 'remove' : 'connect', {\n                    auth_name: item.name,\n                  })}\n                </span>\n              </Button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { userCenterStore } from '@/stores';\nimport { getUcSettings, UcSettingAgent } from '@/services';\n\nimport { ModifyEmail, ModifyPassword, MyLogins } from './components';\n\nconst Index = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.account',\n  });\n  const { agent: ucAgent } = userCenterStore();\n  const [accountAgent, setAccountAgent] = useState<UcSettingAgent>();\n\n  const initData = () => {\n    if (ucAgent?.enabled) {\n      getUcSettings().then((resp) => {\n        setAccountAgent(resp.account_setting_agent);\n      });\n    }\n  };\n  useEffect(() => {\n    initData();\n  }, []);\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('heading')}</h3>\n      {accountAgent?.enabled && accountAgent?.redirect_url ? (\n        <a href={accountAgent.redirect_url}>\n          {t('goto_modify', { keyPrefix: 'settings' })}\n        </a>\n      ) : null}\n      {!ucAgent?.enabled || accountAgent?.enabled === false ? (\n        <>\n          <ModifyEmail />\n          <ModifyPassword />\n          <MyLogins />\n        </>\n      ) : null}\n    </>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","_userInfo$e_mail","t","useTranslation","keyPrefix","step","setStep","useState","formData","setFormData","e_mail","value","isInvalid","errorMsg","pass","userInfo","setUserInfo","toast","useToast","emailCaptcha","useCaptchaPlugin","useEffect","getLoggedUserInfo","then","resp","handleChange","params","postEmail","event","preventDefault","imgCode","getCaptcha","verify","captcha_code","captcha_id","changeEmail","async","close","onShow","msg","variant","catch","err","isError","handleCaptchaError","list","data","handleFormError","ele","document","getElementById","error_field","scrollToElementTop","_jsxs","children","Form","Group","controlId","className","_jsx","Label","Control","type","disabled","defaultValue","replace","Button","onClick","noValidate","onSubmit","stopPropagation","checkValidated","bol","errObj","Object","keys","filter","key","check","autoComplete","required","onChange","e","target","Feedback","placeholder","React","user","loggedUserInfoStore","showForm","setFormState","old_pass","pass2","infoCaptcha","handleFormState","pre","postModifyPass","modifyPassword","have_password","length","classname","_Fragment","mutate","useOauthConnectorInfoByUser","t2","map","item","binding","href","link","deleteLogins","Modal","confirm","title","content","confirmBtnVariant","confirmText","onConfirm","userOauthUnbind","external_id","Storage","set","REDIRECT_PATH_STORAGE_KEY","window","location","pathname","dangerouslySetInnerHTML","__html","base64ToSvg","icon","auth_name","name","memo","agent","ucAgent","userCenterStore","accountAgent","setAccountAgent","enabled","getUcSettings","account_setting_agent","redirect_url","ModifyEmail","ModifyPassword","MyLogins"],"sourceRoot":""}