{"version":3,"file":"static/js/2860.60d6b996.chunk.js","mappings":"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","sources":["pages/Admin/Answers/components/Action/index.tsx","pages/Admin/Answers/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dropdown } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport { Icon, Modal } from '@/components';\nimport { changeAnswerStatus } from '@/services';\n\nconst AnswerActions = ({ itemData, curFilter, refreshList }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'delete' });\n\n  const handleAction = (type) => {\n    if (type === 'delete') {\n      Modal.confirm({\n        title: t('title'),\n        content: itemData.accepted === 2 ? t('answer_accepted') : t('other'),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('delete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeAnswerStatus(itemData.id, 'deleted').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n\n    if (type === 'undelete') {\n      Modal.confirm({\n        title: t('undelete_title'),\n        content: t('undelete_desc'),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        confirmText: t('undelete', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          changeAnswerStatus(itemData.id, 'available').then(() => {\n            refreshList();\n          });\n        },\n      });\n    }\n  };\n\n  if (curFilter === 'pending') {\n    return (\n      <Link\n        to={`/review?type=queued_post&objectId=${itemData.id}`}\n        className=\"btn btn-link p-0\"\n        title={t('review', { keyPrefix: 'header.nav' })}>\n        <Icon name=\"three-dots-vertical\" />\n      </Link>\n    );\n  }\n\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"link\" className=\"no-toggle p-0\">\n        <Icon\n          name=\"three-dots-vertical\"\n          title={t('action', { keyPrefix: 'admin.answers' })}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        {curFilter === 'deleted' ? (\n          <Dropdown.Item onClick={() => handleAction('undelete')}>\n            {t('undelete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        ) : (\n          <Dropdown.Item onClick={() => handleAction('delete')}>\n            {t('delete', { keyPrefix: 'btns' })}\n          </Dropdown.Item>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default AnswerActions;\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC } from 'react';\nimport { Form, Table, Stack } from 'react-bootstrap';\nimport { useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'classnames';\n\nimport {\n  FormatTime,\n  Icon,\n  Pagination,\n  BaseUserCard,\n  Empty,\n  QueryGroup,\n} from '@/components';\nimport { ADMIN_LIST_STATUS } from '@/common/constants';\nimport * as Type from '@/common/interface';\nimport { useAnswerSearch } from '@/services';\nimport { escapeRemove } from '@/utils';\nimport { pathFactory } from '@/router/pathFactory';\n\nimport AnswerAction from './components/Action';\n\nconst answerFilterItems: Type.AdminContentsFilterBy[] = [\n  'normal',\n  'pending',\n  'deleted',\n];\n\nconst Answers: FC = () => {\n  const [urlSearchParams, setUrlSearchParams] = useSearchParams();\n  const curFilter = urlSearchParams.get('status') || answerFilterItems[0];\n  const PAGE_SIZE = 20;\n  const curPage = Number(urlSearchParams.get('page')) || 1;\n  const curQuery = urlSearchParams.get('query') || '';\n  const questionId = urlSearchParams.get('questionId') || '';\n  const { t } = useTranslation('translation', { keyPrefix: 'admin.answers' });\n\n  const {\n    data: listData,\n    isLoading,\n    mutate: refreshList,\n  } = useAnswerSearch({\n    page_size: PAGE_SIZE,\n    page: curPage,\n    status: curFilter as Type.AdminContentsFilterBy,\n    query: curQuery,\n    question_id: questionId,\n  });\n  const count = listData?.count || 0;\n\n  const handleFilter = (e) => {\n    urlSearchParams.set('query', e.target.value);\n    urlSearchParams.delete('page');\n    setUrlSearchParams(urlSearchParams);\n  };\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <div className=\"d-flex flex-wrap justify-content-between align-items-center mb-3\">\n        <QueryGroup\n          data={answerFilterItems}\n          currentSort={curFilter}\n          sortKey=\"status\"\n          i18nKeyPrefix=\"btns\"\n        />\n\n        <Form.Control\n          value={curQuery}\n          onChange={handleFilter}\n          size=\"sm\"\n          type=\"search\"\n          placeholder={t('filter.placeholder')}\n          style={{ width: '12.25rem' }}\n          className=\"mt-3 mt-sm-0\"\n        />\n      </div>\n      <Table responsive>\n        <thead>\n          <tr>\n            <th className=\"min-w-15\">{t('post')}</th>\n            <th style={{ width: '11%' }}>{t('votes')}</th>\n            <th style={{ width: '14%' }}>{t('created')}</th>\n            <th style={{ width: '11%' }}>{t('status')}</th>\n            <th style={{ width: '11%' }} className=\"text-end\">\n              {t('action')}\n            </th>\n          </tr>\n        </thead>\n        <tbody className=\"align-middle\">\n          {listData?.list?.map((li) => {\n            return (\n              <tr key={li.id}>\n                <td>\n                  <a\n                    href={pathFactory.answerLanding({\n                      questionId: li.question_id,\n                      slugTitle: li.question_info.url_title,\n                      answerId: li.id,\n                    })}\n                    target=\"_blank\"\n                    className=\"text-break text-wrap\"\n                    rel=\"noreferrer\">\n                    {li.question_info.title}\n                  </a>\n                  {li.accepted === 2 && (\n                    <Icon\n                      name=\"check-circle-fill\"\n                      className=\"ms-2 text-success\"\n                    />\n                  )}\n                  <div className=\"text-truncate-2 small max-w-30\">\n                    {escapeRemove(li.description)}\n                  </div>\n                </td>\n                <td>{li.vote_count}</td>\n                <td>\n                  <Stack>\n                    <BaseUserCard data={li.user_info} nameMaxWidth=\"200px\" />\n\n                    <FormatTime\n                      className=\"small text-secondary\"\n                      time={li.create_time}\n                    />\n                  </Stack>\n                </td>\n                <td>\n                  <span\n                    className={classNames(\n                      'badge',\n                      ADMIN_LIST_STATUS[curFilter]?.variant,\n                    )}>\n                    {t(ADMIN_LIST_STATUS[curFilter]?.name, {\n                      keyPrefix: 'btns',\n                    })}\n                  </span>\n                </td>\n                <td className=\"text-end\">\n                  <AnswerAction\n                    itemData={{ id: li.id, accepted: li.accepted }}\n                    curFilter={curFilter}\n                    refreshList={refreshList}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {Number(count) <= 0 && !isLoading && <Empty />}\n      <div className=\"mt-4 mb-2 d-flex justify-content-center\">\n        <Pagination\n          currentPage={curPage}\n          totalSize={count}\n          pageSize={PAGE_SIZE}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Answers;\n"],"names":["AnswerActions","itemData","curFilter","refreshList","t","useTranslation","keyPrefix","handleAction","type","Modal","confirm","title","content","accepted","cancelBtnVariant","confirmBtnVariant","confirmText","onConfirm","changeAnswerStatus","id","then","_jsx","Link","to","className","children","Icon","name","_jsxs","Dropdown","Toggle","variant","Menu","Item","onClick","answerFilterItems","Answers","_listData$list","urlSearchParams","setUrlSearchParams","useSearchParams","get","curPage","Number","curQuery","questionId","data","listData","isLoading","mutate","useAnswerSearch","page_size","page","status","query","question_id","count","_Fragment","QueryGroup","currentSort","sortKey","i18nKeyPrefix","Form","Control","value","onChange","e","set","target","delete","size","placeholder","style","width","Table","responsive","list","map","li","_ADMIN_LIST_STATUS$cu","_ADMIN_LIST_STATUS$cu2","href","pathFactory","answerLanding","slugTitle","question_info","url_title","answerId","rel","escapeRemove","description","vote_count","Stack","BaseUserCard","user_info","nameMaxWidth","FormatTime","time","create_time","classNames","ADMIN_LIST_STATUS","AnswerAction","Empty","Pagination","currentPage","totalSize","pageSize"],"sourceRoot":""}