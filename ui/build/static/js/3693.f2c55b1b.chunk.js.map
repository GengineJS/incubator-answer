{"version":3,"file":"static/js/3693.f2c55b1b.chunk.js","mappings":"2SAqCA,MAAMA,EAAmBA,EAAGC,UAASC,UAASC,WAC5C,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAAEC,UAAW,cACjDF,EAAGG,IAAOF,EAAAA,EAAAA,GAAe,cAAe,CAAEC,UAAW,aACvDE,GAAWC,EAAAA,EAAAA,KAAqBC,GAAUA,EAAMC,OAChDC,GAAWC,EAAAA,EAAAA,MACjB,OAAKZ,GAKHa,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,YAAWC,SAC7Bd,EAAKe,KAAKC,IAAU,IAADC,EAClB,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAa,CACZN,UAAU,uDAAsDC,SAAA,EAShEH,EAAAA,EAAAA,KAAA,MAAIE,UAAU,OAAMC,UAClBI,EAAAA,EAAAA,MAACE,EAAAA,GAAI,CACHP,UAAU,aACVQ,GAAG,IACHC,QAAUC,IACRA,EAAMC,kBACNC,EAAAA,EAAAA,GACErB,EACAK,EACAJ,EACAW,EACAU,EAAAA,EAAYC,gBACE,cAAZ5B,GACc,aAAZA,GACY,cAAZA,GACY,aAAZA,EACEiB,EAAKY,YACLZ,EAAKa,GACTb,EAAKc,UACLC,EAAAA,GAAwBhC,IAE3B,EACDe,SAAA,CACDE,EAAKgB,OACNrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CACXC,MAAOlB,EAAKkB,MACZjC,EAAGA,EACHkC,YAAanB,EAAKoB,aAClBC,OACEC,EAAAA,EAAAA,IAAYtB,EAAMX,KAC4B,IAA9CW,EAAKuB,eAAeC,QAAQnC,EAASwB,MAG3B,cAAZ9B,GACY,aAAZA,GACY,cAAZA,GACY,aAAZA,GACc,WAAhBiB,EAAKyB,OAED,KADA,KAAKxC,EAAE,SAAU,CAAEE,UAAW,sBAItCe,EAAAA,EAAAA,MAAA,OAAKL,UAAU,gEAA+DC,SAAA,CAC/D,cAAZf,IACCmB,EAAAA,EAAAA,MAAAwB,EAAAA,SAAA,CAAA5B,SAAA,EACEH,EAAAA,EAAAA,KAACgC,EAAAA,GAAY,CAAC3C,KAAMgB,EAAK4B,UAAWC,YAAY,KAChDlC,EAAAA,EAAAA,KAAA,QAAME,UAAU,kBAIpBF,EAAAA,EAAAA,KAACmC,EAAAA,GAAU,CACTC,KACc,cAAZhD,EAA0BiB,EAAKgC,YAAchC,EAAKiC,WAEpDpC,UAAU,OACVqC,OAAQjD,EAAE,YAGZU,EAAAA,EAAAA,KAACwC,EAAAA,GAAM,CACLC,WAAYC,OAAOrC,EAAKsC,oBAAsB,EAC9CtD,KAAM,CACJuD,MAAOvC,EAAKwC,WACZC,QAASzC,EAAK0C,aACdC,MAAO3C,EAAK4C,WACZ1B,MAAOlB,EAAKkB,aAIlBvB,EAAAA,EAAAA,KAAA,OAAAG,SACY,QADZG,EACGD,EAAK6C,YAAI,IAAA5C,OAAA,EAATA,EAAWF,KAAK+C,IACRnD,EAAAA,EAAAA,KAACoD,EAAAA,GAAG,CAAClD,UAAU,OAA2Bb,KAAM8D,GAArBA,EAAIE,iBA7E5B,cAAZjE,GACY,aAAZA,GACY,cAAZA,GACY,aAAZA,EACIiB,EAAKY,YACLZ,EAAKa,GA2EG,MA1Ff,IA6FK,EAIhB,GAAeoC,EAAAA,EAAAA,MAAKpE,E","sources":["pages/Users/Personal/components/DefaultList/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { FormatTime, Tag, BaseUserCard, Counts } from '@/components';\nimport { pathFactory } from '@/router/pathFactory';\nimport { isModerator, QueryContentTypeFromStr } from '@/common/constants';\nimport IntegralLink from '@/components/IntegralLink';\nimport { loggedUserInfoStore } from '@/stores';\nimport handleOpenPayScore from '@/components/Pay';\n\ninterface Props {\n  visible: boolean;\n  tabName: string;\n  data: any[];\n}\n\nconst Index: FC<Props> = ({ visible, tabName, data }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'personal' });\n  const { t: qt } = useTranslation('translation', { keyPrefix: 'question' });\n  const userInfo = loggedUserInfoStore((state) => state.user);\n  const navigate = useNavigate();\n  if (!visible) {\n    return null;\n  }\n\n  return (\n    <ListGroup className=\"rounded-0\">\n      {data.map((item) => {\n        return (\n          <ListGroupItem\n            className=\"py-3 px-0 bg-transparent border-start-0 border-end-0\"\n            key={\n              tabName === 'questions' ||\n              tabName === 'articles' ||\n              tabName === 'assetbuns' ||\n              tabName === 'bounties'\n                ? item.question_id\n                : item.id\n            }>\n            <h6 className=\"mb-2\">\n              <Link\n                className=\"text-break\"\n                to=\".\"\n                onClick={(event) => {\n                  event.preventDefault();\n                  handleOpenPayScore(\n                    qt,\n                    navigate,\n                    userInfo,\n                    item,\n                    pathFactory.questionLanding(\n                      tabName === 'questions' ||\n                        tabName === 'articles' ||\n                        tabName === 'assetbuns' ||\n                        tabName === 'bounties'\n                        ? item.question_id\n                        : item.id,\n                      item.url_title,\n                      QueryContentTypeFromStr[tabName],\n                    ),\n                  );\n                }}>\n                {item.title}\n                <IntegralLink\n                  score={item.score}\n                  t={t}\n                  contentType={item.content_type}\n                  isPay={\n                    isModerator(item, userInfo) ||\n                    item.buyer_user_ids.indexOf(userInfo.id) !== -1\n                  }\n                />\n                {(tabName === 'questions' ||\n                  tabName === 'articles' ||\n                  tabName === 'assetbuns' ||\n                  tabName === 'bounties') &&\n                item.status === 'closed'\n                  ? ` [${t('closed', { keyPrefix: 'question' })}]`\n                  : null}\n              </Link>\n            </h6>\n            <div className=\"d-flex flex-wrap align-items-center small text-secondary mb-2\">\n              {tabName === 'bookmarks' && (\n                <>\n                  <BaseUserCard data={item.user_info} showAvatar={false} />\n                  <span className=\"split-dot\" />\n                </>\n              )}\n\n              <FormatTime\n                time={\n                  tabName === 'bookmarks' ? item.create_time : item.created_at\n                }\n                className=\"me-3\"\n                preFix={t('asked')}\n              />\n\n              <Counts\n                isAccepted={Number(item.accepted_answer_id) > 0}\n                data={{\n                  votes: item.vote_count,\n                  answers: item.answer_count,\n                  views: item.view_count,\n                  score: item.score,\n                }}\n              />\n            </div>\n            <div>\n              {item.tags?.map((tag) => {\n                return <Tag className=\"me-1\" key={tag.slug_name} data={tag} />;\n              })}\n            </div>\n          </ListGroupItem>\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nexport default memo(Index);\n"],"names":["Index","visible","tabName","data","t","useTranslation","keyPrefix","qt","userInfo","loggedUserInfoStore","state","user","navigate","useNavigate","_jsx","ListGroup","className","children","map","item","_item$tags","_jsxs","ListGroupItem","Link","to","onClick","event","preventDefault","handleOpenPayScore","pathFactory","questionLanding","question_id","id","url_title","QueryContentTypeFromStr","title","IntegralLink","score","contentType","content_type","isPay","isModerator","buyer_user_ids","indexOf","status","_Fragment","BaseUserCard","user_info","showAvatar","FormatTime","time","create_time","created_at","preFix","Counts","isAccepted","Number","accepted_answer_id","votes","vote_count","answers","answer_count","views","view_count","tags","tag","Tag","slug_name","memo"],"sourceRoot":""}