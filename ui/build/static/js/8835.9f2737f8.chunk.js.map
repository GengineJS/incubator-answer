{"version":3,"file":"static/js/8835.9f2737f8.chunk.js","mappings":"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","sources":["pages/Users/Personal/components/Overview/index.tsx","pages/Users/Personal/components/TopList/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport TopList from '../TopList';\n\ninterface Props {\n  visible: boolean;\n  introduction: string;\n  data;\n}\nconst Index: FC<Props> = ({ visible, introduction, data }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'personal' });\n  if (!visible) {\n    return null;\n  }\n  return (\n    <div>\n      <h5 className=\"mb-3\">{t('about_me')}</h5>\n      {introduction ? (\n        <div\n          className=\"mb-4 text-break fmt\"\n          dangerouslySetInnerHTML={{ __html: introduction }}\n        />\n      ) : (\n        <div className=\"text-center py-5 mb-4\">{t('about_me_empty')}</div>\n      )}\n\n      {data?.answer?.length > 0 && (\n        <>\n          <h5 className=\"mb-3\">{t('top_answers')}</h5>\n          <TopList data={data?.answer} type=\"answer\" />\n        </>\n      )}\n\n      {data?.question?.length > 0 && (\n        <>\n          <h5 className=\"mb-3\">{t('top_questions')}</h5>\n          <TopList data={data?.question} type=\"question\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(Index);\n","/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport { pathFactory } from '@/router/pathFactory';\nimport { Icon } from '@/components';\n\ninterface Props {\n  data: any[];\n  type: 'answer' | 'question';\n}\nconst Index: FC<Props> = ({ data, type }) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'personal' });\n  return (\n    <ol className=\"mb-4 list-unstyled\">\n      {data?.map((item) => {\n        return (\n          <li\n            className=\"mb-2\"\n            key={type === 'answer' ? item.answer_id : item.question_id}>\n            <Link\n              className=\"me-3\"\n              to={\n                type === 'answer'\n                  ? pathFactory.answerLanding({\n                      questionId: item.question_id,\n                      slugTitle: item.question_info?.url_title,\n                      answerId: item.answer_id,\n                    })\n                  : pathFactory.questionLanding(\n                      item.question_id,\n                      item.url_title,\n                    )\n              }>\n              {type === 'answer' ? item.question_info.title : item.title}\n            </Link>\n\n            <div className=\"d-inline-block text-secondary me-3 small\">\n              <Icon name=\"hand-thumbs-up-fill me-1\" />\n              <span>\n                {item.vote_count} {t('votes', { keyPrefix: 'counts' })}\n              </span>\n            </div>\n            {type === 'question' && (\n              <div\n                className={`d-inline-block text-secondary me-3 small ${\n                  Number(item.accepted_answer_id) > 0 ? 'text-success' : ''\n                }`}>\n                {Number(item.accepted_answer_id) > 0 ? (\n                  <Icon name=\"check-circle-fill\" />\n                ) : (\n                  <Icon name=\"chat-square-text-fill\" />\n                )}\n\n                <span>\n                  {' '}\n                  {item.answer_count} {t('answers', { keyPrefix: 'counts' })}\n                </span>\n              </div>\n            )}\n\n            {type === 'answer' && item.accepted === 2 && (\n              <div className=\"d-inline-block text-success me-3 small\">\n                <Icon name=\"check-circle-fill\" />\n                <span> {t('accepted')}</span>\n              </div>\n            )}\n          </li>\n        );\n      })}\n    </ol>\n  );\n};\n\nexport default memo(Index);\n"],"names":["Index","visible","introduction","data","_data$answer","_data$question","t","useTranslation","keyPrefix","_jsxs","children","_jsx","className","dangerouslySetInnerHTML","__html","answer","length","_Fragment","TopList","type","question","memo","map","item","_item$question_info","Link","to","pathFactory","answerLanding","questionId","question_id","slugTitle","question_info","url_title","answerId","answer_id","questionLanding","title","Icon","name","vote_count","Number","accepted_answer_id","answer_count","accepted"],"sourceRoot":""}