{"version":3,"file":"static/js/324.ca86a707.chunk.js","mappings":"6RA8BA,MAAMA,EAAkBA,KACtB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAAEC,UAAW,oBAClDC,IAAgBC,EAAAA,EAAAA,OAChBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,GAC3BC,GAAYC,EAAAA,EAAAA,KAAqBC,GAAUA,EAAMC,SAChDC,EAAUC,IAAeN,EAAAA,EAAAA,UAAuB,CACrDO,KAAM,CACJC,MAAO,GACPC,WAAW,EACXC,SAAU,IAEZC,WAAY,CACVH,MAAO,GACPC,WAAW,EACXC,SAAU,MAIRE,EAAgBC,IACpBP,EAAY,IAAKD,KAAaQ,GAAS,EAgGzC,OAHAC,EAAAA,EAAAA,IAAY,CACVC,MAAOtB,EAAE,mBAAoB,CAAEE,UAAW,kBAG1CqB,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,MAAO,CAAEC,WAAY,OAAQC,cAAe,QAASC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBF,SAAE5B,EAAE,gBAC1B,IAATK,IACCwB,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACD,UAAU,UAAUE,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEN,UAC3CL,EAAAA,EAAAA,MAACY,EAAAA,EAAI,CAACC,YAAU,EAACC,SArCHC,IAGpB,GAFAA,EAAMC,iBACND,EAAME,mBACmB,IAhEJC,MACrB,IAAIC,GAAM,EACV,MAAM,KAAE5B,EAAI,WAAEI,GAAeN,EAiD7B,GA/CKE,EAAKC,QACR2B,GAAM,EACN9B,EAASE,KAAO,CACdC,MAAO,GACPC,WAAW,EACXC,SAAUjB,EAAE,wBAIZ0C,GAAO5B,EAAKC,OAASD,EAAKC,MAAM4B,OAAS,IAC3CD,GAAM,EACN9B,EAASE,KAAO,CACdC,MAAOD,EAAKC,MACZC,WAAW,EACXC,SAAUjB,EAAE,yBAIZ0C,IAAQxB,EAAWH,QACrB2B,GAAM,EACN9B,EAASM,WAAa,CACpBH,MAAO,GACPC,WAAW,EACXC,SAAUjB,EAAE,wBAIZ0C,GAAOxB,EAAWH,OAASG,EAAWH,MAAM4B,OAAS,IACvDD,GAAM,EACN9B,EAASM,WAAa,CACpBH,MAAOG,EAAWH,MAClBC,WAAW,EACXC,SAAUjB,EAAE,yBAIZ0C,GAAO5B,EAAKC,QAAUG,EAAWH,QACnC2B,GAAM,EACN9B,EAASM,WAAa,CACpBH,MAAOG,EAAWH,MAClBC,WAAW,EACXC,SAAUjB,EAAE,4BAGhBa,EAAY,IACPD,KAEA8B,EAAK,CACR,MAAME,EAASC,OAAOC,KAAKlC,GAAUmC,QAClCC,GAAQpC,EAASoC,GAAKhC,YAEnBiC,EAAMC,SAASC,eAAeP,EAAO,KAC3CQ,EAAAA,EAAAA,IAAmBH,EACrB,CACA,OAAOP,CAAG,EAMND,GACF,OAEF,MAAMY,EAAOlD,EAAamD,IAAI,QACzBD,GAILE,EAAAA,EAAAA,IAAoB,CAClBF,KAAMG,mBAAmBH,GACzBvC,KAAMF,EAASE,KAAKC,QAEnB0C,MAAK,KAEJjD,IACAF,EAAQ,EAAE,IAEXoD,OAAOC,IACN,GAAIA,EAAIC,QAAS,CACf,MAAMC,GAAOC,EAAAA,EAAAA,IAAgBH,EAAK/C,GAClCC,EAAY,IAAKgD,IACjB,MAAMZ,EAAMC,SAASC,eAAeQ,EAAII,KAAK,GAAGC,cAChDZ,EAAAA,EAAAA,IAAmBH,EACrB,KAlBFgB,QAAQC,MAAM,mBAmBZ,EAU2CC,aAAa,MAAKvC,SAAA,EACzDL,EAAAA,EAAAA,MAACY,EAAAA,EAAKiC,MAAK,CAACC,UAAU,OAAOvC,UAAU,OAAMF,SAAA,EAC3CC,EAAAA,EAAAA,KAACM,EAAAA,EAAKmC,MAAK,CAAA1C,SAAE5B,EAAE,qBACf6B,EAAAA,EAAAA,KAACM,EAAAA,EAAKoC,QAAO,CACXJ,aAAa,MACbK,UAAQ,EACRC,KAAK,WACLzD,UAAWJ,EAASE,KAAKE,UACzB0D,SAAWC,IACTxD,EAAa,CACXL,KAAM,CACJC,MAAO4D,EAAEC,OAAO7D,MAChBC,WAAW,EACXC,SAAU,KAEZ,KAGNY,EAAAA,EAAAA,KAACM,EAAAA,EAAKoC,QAAQM,SAAQ,CAACJ,KAAK,UAAS7C,SAClChB,EAASE,KAAKG,eAInBM,EAAAA,EAAAA,MAACY,EAAAA,EAAKiC,MAAK,CAACC,UAAU,aAAavC,UAAU,OAAMF,SAAA,EACjDC,EAAAA,EAAAA,KAACM,EAAAA,EAAKmC,MAAK,CAAA1C,SAAE5B,EAAE,6BACf6B,EAAAA,EAAAA,KAACM,EAAAA,EAAKoC,QAAO,CACXJ,aAAa,MACbK,UAAQ,EACRC,KAAK,WACLzD,UAAWJ,EAASM,WAAWF,UAC/B0D,SAAWC,IACTxD,EAAa,CACXD,WAAY,CACVH,MAAO4D,EAAEC,OAAO7D,MAChBC,WAAW,EACXC,SAAU,KAEZ,KAGNY,EAAAA,EAAAA,KAACM,EAAAA,EAAKoC,QAAQM,SAAQ,CAACJ,KAAK,UAAS7C,SAClChB,EAASM,WAAWD,eAIzBY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaF,UAC1BC,EAAAA,EAAAA,KAACiD,EAAAA,EAAM,CAACC,QAAQ,UAAUN,KAAK,SAAQ7C,SACpC5B,EAAE,qBAOH,IAATK,IACCwB,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACD,UAAU,eAAeE,GAAI,EAAEJ,UAClCL,EAAAA,EAAAA,MAAA,OAAKO,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAI5B,EAAE,oBACN6B,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACC,GAAG,eAAcrD,SAAE5B,EAAE,mBAKvB,IAATK,IACCwB,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAACD,UAAU,eAAeE,GAAI,EAAEJ,UAClCL,EAAAA,EAAAA,MAAA,OAAKO,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAI5B,EAAE,mBACN6B,EAAAA,EAAAA,KAACmD,EAAAA,GAAI,CAACC,GAAG,eAAcrD,SAAE5B,EAAE,qBAIvB,EAIhB,EAAekF,EAAAA,KAAWnF,E","sources":["pages/Users/PasswordReset/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FormEvent, useState } from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { usePageTags } from '@/hooks';\nimport { loggedUserInfoStore } from '@/stores';\nimport type { FormDataType } from '@/common/interface';\nimport { replacementPassword } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst Index: React.FC = () => {\n  const { t } = useTranslation('translation', { keyPrefix: 'password_reset' });\n  const [searchParams] = useSearchParams();\n  const [step, setStep] = useState(1);\n  const clearUser = loggedUserInfoStore((state) => state.clear);\n  const [formData, setFormData] = useState<FormDataType>({\n    pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    passSecond: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const handleChange = (params: FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { pass, passSecond } = formData;\n\n    if (!pass.value) {\n      bol = false;\n      formData.pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('password.msg.empty'),\n      };\n    }\n\n    if (bol && pass.value && pass.value.length < 8) {\n      bol = false;\n      formData.pass = {\n        value: pass.value,\n        isInvalid: true,\n        errorMsg: t('password.msg.length'),\n      };\n    }\n\n    if (bol && !passSecond.value) {\n      bol = false;\n      formData.passSecond = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('password.msg.empty'),\n      };\n    }\n\n    if (bol && passSecond.value && passSecond.value.length < 8) {\n      bol = false;\n      formData.passSecond = {\n        value: passSecond.value,\n        isInvalid: true,\n        errorMsg: t('password.msg.length'),\n      };\n    }\n\n    if (bol && pass.value !== passSecond.value) {\n      bol = false;\n      formData.passSecond = {\n        value: passSecond.value,\n        isInvalid: true,\n        errorMsg: t('password.msg.different'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n    return bol;\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (checkValidated() === false) {\n      return;\n    }\n    const code = searchParams.get('code');\n    if (!code) {\n      console.error('code is required');\n      return;\n    }\n    replacementPassword({\n      code: encodeURIComponent(code),\n      pass: formData.pass.value,\n    })\n      .then(() => {\n        // clear login information then to login page\n        clearUser();\n        setStep(2);\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n  usePageTags({\n    title: t('account_recovery', { keyPrefix: 'page_title' }),\n  });\n  return (\n    <Container style={{ paddingTop: '4rem', paddingBottom: '6rem' }}>\n      <h3 className=\"text-center mb-5\">{t('page_title')}</h3>\n      {step === 1 && (\n        <Col className=\"mx-auto\" md={6} lg={4} xl={3}>\n          <Form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n            <Form.Group controlId=\"pass\" className=\"mb-3\">\n              <Form.Label>{t('password.label')}</Form.Label>\n              <Form.Control\n                autoComplete=\"off\"\n                required\n                type=\"password\"\n                isInvalid={formData.pass.isInvalid}\n                onChange={(e) => {\n                  handleChange({\n                    pass: {\n                      value: e.target.value,\n                      isInvalid: false,\n                      errorMsg: '',\n                    },\n                  });\n                }}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.pass.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"passSecond\" className=\"mb-3\">\n              <Form.Label>{t('password_confirm.label')}</Form.Label>\n              <Form.Control\n                autoComplete=\"off\"\n                required\n                type=\"password\"\n                isInvalid={formData.passSecond.isInvalid}\n                onChange={(e) => {\n                  handleChange({\n                    passSecond: {\n                      value: e.target.value,\n                      isInvalid: false,\n                      errorMsg: '',\n                    },\n                  });\n                }}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.passSecond.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <div className=\"d-grid mb-3\">\n              <Button variant=\"primary\" type=\"submit\">\n                {t('btn_name')}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      )}\n\n      {step === 2 && (\n        <Col className=\"mx-auto px-4\" md={6}>\n          <div className=\"text-center\">\n            <p>{t('reset_success')}</p>\n            <Link to=\"/users/login\">{t('to_login')}</Link>\n          </div>\n        </Col>\n      )}\n\n      {step === 3 && (\n        <Col className=\"mx-auto px-4\" md={6}>\n          <div className=\"text-center\">\n            <p>{t('link_invalid')}</p>\n            <Link to=\"/users/login\">{t('to_login')}</Link>\n          </div>\n        </Col>\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","t","useTranslation","keyPrefix","searchParams","useSearchParams","step","setStep","useState","clearUser","loggedUserInfoStore","state","clear","formData","setFormData","pass","value","isInvalid","errorMsg","passSecond","handleChange","params","usePageTags","title","_jsxs","Container","style","paddingTop","paddingBottom","children","_jsx","className","Col","md","lg","xl","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","length","errObj","Object","keys","filter","key","ele","document","getElementById","scrollToElementTop","code","get","replacementPassword","encodeURIComponent","then","catch","err","isError","data","handleFormError","list","error_field","console","error","autoComplete","Group","controlId","Label","Control","required","type","onChange","e","target","Feedback","Button","variant","Link","to","React"],"sourceRoot":""}