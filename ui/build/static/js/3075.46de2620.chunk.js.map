{"version":3,"file":"static/js/3075.46de2620.chunk.js","mappings":"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","sources":["pages/Questions/EditAnswer/index.tsx","webpack://answer-static/./src/pages/Questions/EditAnswer/index.scss?d12f"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useRef, useEffect, useLayoutEffect } from 'react';\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport dayjs from 'dayjs';\nimport classNames from 'classnames';\n\nimport { handleFormError, scrollToDocTop } from '@/utils';\nimport { usePageTags, usePromptWithUnload } from '@/hooks';\nimport { useCaptchaPlugin, useRenderHtmlPlugin } from '@/utils/pluginKit';\nimport { pathFactory } from '@/router/pathFactory';\nimport { Editor, EditorRef, Icon, htmlRender } from '@/components';\nimport type * as Type from '@/common/interface';\nimport {\n  useQueryAnswerInfo,\n  modifyAnswer,\n  useQueryRevisions,\n} from '@/services';\n\nimport './index.scss';\n\ninterface FormDataItem {\n  content: Type.FormValue<string>;\n  description: Type.FormValue<string>;\n}\n\nconst Index = () => {\n  const { aid = '', qid = '' } = useParams();\n  const [focusType, setForceType] = useState('');\n  useLayoutEffect(() => {\n    scrollToDocTop();\n  }, []);\n\n  const { t } = useTranslation('translation', { keyPrefix: 'edit_answer' });\n  const navigate = useNavigate();\n\n  const initFormData = {\n    content: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    description: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  };\n\n  const { data } = useQueryAnswerInfo(aid);\n  const [formData, setFormData] = useState<FormDataItem>(initFormData);\n  const [immData, setImmData] = useState(initFormData);\n  const [contentChanged, setContentChanged] = useState(false);\n  const editCaptcha = useCaptchaPlugin('edit');\n\n  useEffect(() => {\n    if (data?.info?.content) {\n      setFormData({\n        ...formData,\n        content: {\n          value: data.info.content,\n          isInvalid: false,\n          errorMsg: '',\n        },\n      });\n    }\n  }, [data?.info?.content]);\n\n  const { data: revisions = [] } = useQueryRevisions(aid);\n\n  const editorRef = useRef<EditorRef>({\n    getHtml: () => '',\n  });\n\n  const questionContentRef = useRef<HTMLDivElement>(null);\n  useRenderHtmlPlugin(questionContentRef.current);\n\n  useEffect(() => {\n    if (!questionContentRef?.current) {\n      return;\n    }\n    htmlRender(questionContentRef.current);\n  }, [questionContentRef]);\n\n  usePromptWithUnload({\n    when: contentChanged,\n  });\n\n  useEffect(() => {\n    const { content, description } = formData;\n    if (immData.content.value !== content.value || description.value) {\n      setContentChanged(true);\n    } else {\n      setContentChanged(false);\n    }\n  }, [formData.content.value, formData.description.value]);\n\n  const handleAnswerChange = (value: string) =>\n    setFormData({\n      ...formData,\n      content: { ...formData.content, value },\n    });\n  const handleSummaryChange = (evt) => {\n    const v = evt.currentTarget.value;\n    setFormData({\n      ...formData,\n      description: { ...formData.description, value: v },\n    });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { content } = formData;\n\n    if (!content.value || Array.from(content.value.trim()).length < 6) {\n      bol = false;\n      formData.content = {\n        value: content.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.answer.feedback.characters'),\n      };\n    } else {\n      formData.content = {\n        value: content.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    setFormData({\n      ...formData,\n    });\n    return bol;\n  };\n\n  const submitEditAnswer = () => {\n    const params: Type.AnswerParams = {\n      content: formData.content.value,\n      html: editorRef.current.getHtml(),\n      question_id: qid,\n      id: aid,\n      edit_summary: formData.description.value,\n    };\n    editCaptcha?.resolveCaptchaReq(params);\n\n    modifyAnswer(params)\n      .then(async (res) => {\n        await editCaptcha?.close();\n        navigate(\n          pathFactory.answerLanding({\n            questionId: qid,\n            slugTitle: data?.question?.url_title,\n            answerId: aid,\n          }),\n          {\n            state: { isReview: res?.wait_for_review },\n          },\n        );\n      })\n      .catch((ex) => {\n        if (ex.isError) {\n          editCaptcha?.handleCaptchaError(ex.list);\n          const stateData = handleFormError(ex, formData);\n          setFormData({ ...stateData });\n        }\n      });\n  };\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    setContentChanged(false);\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!checkValidated()) {\n      return;\n    }\n\n    if (!editCaptcha) {\n      submitEditAnswer();\n      return;\n    }\n    editCaptcha.check(() => submitEditAnswer());\n  };\n  const handleSelectedRevision = (e) => {\n    const index = e.target.value;\n    const revision = revisions[index];\n    if (revision?.content) {\n      formData.content.value = revision.content.content;\n      setImmData({ ...formData });\n      setFormData({ ...formData });\n    }\n  };\n\n  const backPage = () => {\n    navigate(-1);\n  };\n  usePageTags({\n    title: t('edit_answer', { keyPrefix: 'page_title' }),\n  });\n  return (\n    <div className=\"pt-4 mb-5 edit-answer-wrap\">\n      <h3 className=\"mb-4\">{t('title')}</h3>\n      <Row>\n        <Col className=\"page-main flex-auto\">\n          <a\n            href={pathFactory.questionLanding(\n              qid,\n              data?.question.url_title,\n              data?.question.content_type,\n            )}\n            target=\"_blank\"\n            rel=\"noreferrer\">\n            <h5 className=\"mb-3\">{data?.question.title}</h5>\n          </a>\n\n          <div className=\"question-content-wrap\">\n            <div\n              ref={questionContentRef}\n              className=\"content position-absolute top-0 w-100\"\n              dangerouslySetInnerHTML={{ __html: data?.question.html }}\n            />\n            <div\n              className=\"resize-bottom\"\n              style={{ maxHeight: questionContentRef?.current?.scrollHeight }}\n            />\n            <div className=\"line bg-light  d-flex justify-content-center align-items-center\">\n              <Icon type=\"bi\" name=\"grip-horizontal\" className=\"mt-1\" />\n            </div>\n          </div>\n\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group controlId=\"revision\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.revision.label')}</Form.Label>\n              <Form.Select onChange={handleSelectedRevision} defaultValue={0}>\n                {revisions.map(({ create_at, reason, user_info }, index) => {\n                  const date = dayjs(create_at * 1000)\n                    .tz()\n                    .format(t('long_date_with_time', { keyPrefix: 'dates' }));\n                  return (\n                    <option key={`${create_at}`} value={index}>\n                      {`${date} - ${user_info.display_name} - ${\n                        reason ||\n                        (index === revisions.length - 1\n                          ? t('default_first_reason')\n                          : t('default_reason'))\n                      }`}\n                    </option>\n                  );\n                })}\n              </Form.Select>\n            </Form.Group>\n\n            <Form.Group controlId=\"answer\" className=\"mt-3\">\n              <Form.Label>{t('form.fields.answer.label')}</Form.Label>\n              <Editor\n                value={formData.content.value}\n                onChange={handleAnswerChange}\n                className={classNames(\n                  'form-control p-0',\n                  focusType === 'answer' && 'focus',\n                )}\n                onFocus={() => {\n                  setForceType('answer');\n                }}\n                onBlur={() => {\n                  setForceType('');\n                }}\n                ref={editorRef}\n              />\n              <Form.Control\n                value={formData.content.value}\n                type=\"text\"\n                isInvalid={formData.content.isInvalid}\n                readOnly\n                hidden\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.content.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"edit_summary\" className=\"my-3\">\n              <Form.Label>{t('form.fields.edit_summary.label')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                onChange={handleSummaryChange}\n                defaultValue={formData.description.value}\n                isInvalid={formData.description.isInvalid}\n                placeholder={t('form.fields.edit_summary.placeholder')}\n                contentEditable\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.description.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <div className=\"mt-3\">\n              <Button type=\"submit\" className=\"me-2\">\n                {t('btn_save_edits')}\n              </Button>\n              <Button variant=\"link\" onClick={backPage}>\n                {t('btn_cancel')}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n        <Col className=\"page-right-side mt-4 mt-xl-0\">\n          <Card>\n            <Card.Header>\n              {t('title', { keyPrefix: 'how_to_format' })}\n            </Card.Header>\n            <Card.Body\n              className=\"fmt small\"\n              dangerouslySetInnerHTML={{\n                __html: t('desc', { keyPrefix: 'how_to_format' }),\n              }}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Index;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Index","_data$info2","_questionContentRef$c","aid","qid","useParams","focusType","setForceType","useState","useLayoutEffect","scrollToDocTop","t","useTranslation","keyPrefix","navigate","useNavigate","initFormData","content","value","isInvalid","errorMsg","description","data","useQueryAnswerInfo","formData","setFormData","immData","setImmData","contentChanged","setContentChanged","editCaptcha","useCaptchaPlugin","useEffect","_data$info","info","revisions","useQueryRevisions","editorRef","useRef","getHtml","questionContentRef","useRenderHtmlPlugin","current","htmlRender","usePromptWithUnload","when","submitEditAnswer","params","html","question_id","id","edit_summary","resolveCaptchaReq","modifyAnswer","then","async","_data$question","close","pathFactory","answerLanding","questionId","slugTitle","question","url_title","answerId","state","isReview","res","wait_for_review","catch","ex","isError","handleCaptchaError","list","stateData","handleFormError","usePageTags","title","_jsxs","className","children","_jsx","Row","Col","href","questionLanding","content_type","target","rel","ref","dangerouslySetInnerHTML","__html","style","maxHeight","scrollHeight","Icon","type","name","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","Array","from","trim","length","check","Group","controlId","Label","Select","onChange","e","index","revision","defaultValue","map","create_at","reason","user_info","date","dayjs","tz","format","display_name","Editor","classNames","onFocus","onBlur","Control","readOnly","hidden","Feedback","evt","v","currentTarget","placeholder","contentEditable","Button","variant","onClick","backPage","Card","Header","Body"],"sourceRoot":""}