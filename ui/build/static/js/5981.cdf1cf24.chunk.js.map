{"version":3,"file":"static/js/5981.cdf1cf24.chunk.js","mappings":"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","sources":["pages/Admin/Users/components/Action/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { Dropdown } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport { Modal, Icon } from '@/components';\nimport {\n  useChangeUserRoleModal,\n  useChangePasswordModal,\n  useActivationEmailModal,\n  useToast,\n} from '@/hooks';\nimport { updateUserPassword, changeUserStatus } from '@/services';\n\ninterface Props {\n  showActionPassword?: boolean;\n  showActionStatus?: boolean;\n  showActionRole?: boolean;\n  currentUser;\n  refreshUsers: () => void;\n  showDeleteModal: (val) => void;\n  userData;\n}\n\nconst UserOperation = ({\n  showActionPassword,\n  showActionStatus,\n  showActionRole,\n  currentUser,\n  refreshUsers,\n  showDeleteModal,\n  userData,\n}: Props) => {\n  const { t } = useTranslation('translation', { keyPrefix: 'admin.users' });\n  const Toast = useToast();\n\n  const changeUserRoleModal = useChangeUserRoleModal({\n    callback: refreshUsers,\n  });\n  const changePasswordModal = useChangePasswordModal({\n    onConfirm: (rd) => {\n      return new Promise((resolve, reject) => {\n        updateUserPassword(rd)\n          .then(() => {\n            Toast.onShow({\n              msg: t('update_password', { keyPrefix: 'toast' }),\n              variant: 'success',\n            });\n            resolve(true);\n          })\n          .catch((e) => {\n            reject(e);\n          });\n      });\n    },\n  });\n\n  const activationEmailModal = useActivationEmailModal();\n\n  const postUserStatus = (statusType) => {\n    changeUserStatus({\n      user_id: userData.user_id,\n      status: statusType,\n    }).then(() => {\n      refreshUsers?.();\n      // onClose();\n    });\n  };\n\n  const handleAction = (type) => {\n    const { user_id, role_id, username } = userData;\n    if (username === currentUser.username) {\n      Toast.onShow({\n        msg: t('forbidden_operate_self', { keyPrefix: 'toast' }),\n        variant: 'warning',\n      });\n      return;\n    }\n\n    if (type === 'role') {\n      changeUserRoleModal.onShow({\n        id: user_id,\n        role_id,\n      });\n    }\n\n    if (type === 'password') {\n      changePasswordModal.onShow(user_id);\n    }\n\n    if (type === 'activation') {\n      activationEmailModal.onShow(user_id);\n    }\n\n    if (type === 'deactivate') {\n      // cons\n      Modal.confirm({\n        title: t('deactivate_user.title'),\n        content: t('deactivate_user.content'),\n        cancelBtnVariant: 'link',\n        confirmBtnVariant: 'danger',\n        cancelText: t('cancel', { keyPrefix: 'btns' }),\n        confirmText: t('deactivate', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          // active -> inactive\n          postUserStatus('inactive');\n        },\n      });\n    }\n\n    if (type === 'suspend') {\n      // cons\n      Modal.confirm({\n        title: t('suspend_user.title'),\n        content: t('suspend_user.content'),\n        cancelBtnVariant: 'link',\n        cancelText: t('cancel', { keyPrefix: 'btns' }),\n        confirmBtnVariant: 'danger',\n        confirmText: t('suspend', { keyPrefix: 'btns' }),\n        onConfirm: () => {\n          // active -> suspended\n          postUserStatus('suspended');\n        },\n      });\n    }\n\n    if (type === 'active' || type === 'unsuspend') {\n      // to normal\n      postUserStatus('normal');\n    }\n\n    if (type === 'delete') {\n      showDeleteModal({\n        show: true,\n        userId: userData.user_id,\n      });\n    }\n  };\n\n  return (\n    <td className=\"text-end\">\n      <Dropdown>\n        <Dropdown.Toggle variant=\"link\" className=\"no-toggle p-0\">\n          <Icon name=\"three-dots-vertical\" title={t('action')} />\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          {showActionPassword ? (\n            <Dropdown.Item onClick={() => handleAction('password')}>\n              {t('set_new_password')}\n            </Dropdown.Item>\n          ) : null}\n          {showActionRole ? (\n            <Dropdown.Item onClick={() => handleAction('role')}>\n              {t('change_role')}\n            </Dropdown.Item>\n          ) : null}\n          {userData.status === 'inactive' ? (\n            <Dropdown.Item onClick={() => handleAction('activation')}>\n              {t('btn_name', { keyPrefix: 'inactive' })}\n            </Dropdown.Item>\n          ) : null}\n          {showActionStatus && userData.status !== 'deleted' ? (\n            <>\n              <Dropdown.Divider />\n              {userData.status === 'inactive' && (\n                <Dropdown.Item onClick={() => handleAction('active')}>\n                  {t('active', { keyPrefix: 'btns' })}\n                </Dropdown.Item>\n              )}\n              {userData.status === 'normal' && (\n                <Dropdown.Item onClick={() => handleAction('deactivate')}>\n                  {t('deactivate', { keyPrefix: 'btns' })}\n                </Dropdown.Item>\n              )}\n              {userData.status === 'normal' && (\n                <Dropdown.Item onClick={() => handleAction('suspend')}>\n                  {t('suspend', { keyPrefix: 'btns' })}\n                </Dropdown.Item>\n              )}\n              {userData.status === 'suspended' && (\n                <Dropdown.Item onClick={() => handleAction('unsuspend')}>\n                  {t('unsuspend', { keyPrefix: 'btns' })}\n                </Dropdown.Item>\n              )}\n              <Dropdown.Item onClick={() => handleAction('delete')}>\n                {t('delete', { keyPrefix: 'btns' })}\n              </Dropdown.Item>\n            </>\n          ) : null}\n        </Dropdown.Menu>\n      </Dropdown>\n    </td>\n  );\n};\n\nexport default UserOperation;\n"],"names":["UserOperation","showActionPassword","showActionStatus","showActionRole","currentUser","refreshUsers","showDeleteModal","userData","t","useTranslation","keyPrefix","Toast","useToast","changeUserRoleModal","useChangeUserRoleModal","callback","changePasswordModal","useChangePasswordModal","onConfirm","rd","Promise","resolve","reject","updateUserPassword","then","onShow","msg","variant","catch","e","activationEmailModal","useActivationEmailModal","postUserStatus","statusType","changeUserStatus","user_id","status","handleAction","type","role_id","username","id","Modal","confirm","title","content","cancelBtnVariant","confirmBtnVariant","cancelText","confirmText","show","userId","_jsx","className","children","_jsxs","Dropdown","Toggle","Icon","name","Menu","Item","onClick","_Fragment","Divider"],"sourceRoot":""}