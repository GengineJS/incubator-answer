{"version":3,"file":"static/js/8164.10565926.chunk.js","mappings":"oPA6BA,MAuIA,EAvIkBA,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAC1CC,UAAW,uBAEPC,GAAQC,EAAAA,EAAAA,MACRC,EAAqB,CACzBC,MAAON,EAAE,cACTO,WAAY,CACVC,WAAY,CACVC,KAAM,SACNH,MAAON,EAAE,oBACTU,YAAaV,EAAE,oBAEjBW,YAAa,CACXF,KAAM,SACNH,MAAON,EAAE,cACTU,YAAaV,EAAE,cAEjBY,cAAe,CACbH,KAAM,SACNH,MAAON,EAAE,gBACTU,YAAaV,EAAE,gBAEjBa,eAAgB,CACdJ,KAAM,SACNH,MAAON,EAAE,iBACTU,YAAaV,EAAE,iBAEjBc,cAAe,CACbL,KAAM,SACNH,MAAON,EAAE,gBACTU,YAAaV,EAAE,mBAyCde,EAAUC,IAAeC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAab,KA+BtDc,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MAAgBC,MAAMC,IACpB,GAAIA,EAAS,CACX,MAAMC,EAAW,IAAKR,GACtBQ,EAASf,WAAWgB,MAAQF,EAAQd,WACpCe,EAASZ,YAAYa,MAAQF,EAAQX,YACrCY,EAASX,cAAcY,MAAQF,EAAQV,cACvCW,EAASV,eAAeW,MAAQF,EAAQT,eACxCU,EAAST,cAAcU,MAAQF,EAAQR,cACvCE,EAAYO,EACd,IACA,GACD,IAMH,OACEE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAE3B,EAAE,iBACxB4B,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACTzB,OAAQA,EACRU,SAAUA,EACVgB,SAtDYC,IAChBA,EAAIC,iBACJD,EAAIE,kBAEJ,MAAMC,EAAsC,CAC1C3B,WAAYO,EAASP,WAAWgB,MAChCb,YAAaI,EAASJ,YAAYa,MAClCZ,cAAeG,EAASH,cAAcY,MACtCX,eAAgBE,EAASF,eAAeW,MACxCV,cAAeC,EAASD,cAAcU,QAGxCY,EAAAA,EAAAA,IAAcD,GACXd,MAAK,KACJlB,EAAMkC,OAAO,CACXC,IAAKtC,EAAE,SAAU,CAAEE,UAAW,UAC9BqC,QAAS,YAEXC,EAAAA,GAAeC,WAAWC,OAAOP,EAAU,IAE5CQ,OAAOC,IACN,GAAIA,EAAIC,QAAS,CACf,MAAMC,GAAOC,EAAAA,EAAAA,IAAgBH,EAAK7B,GAClCC,EAAY,IAAK8B,IACjB,MAAME,EAAMC,SAASC,eAAeN,EAAIO,KAAK,GAAGC,cAChDC,EAAAA,EAAAA,IAAmBL,EACrB,IACA,EA4BAM,SA7FqB,CACzB9C,WAAY,CACV,YAAa,WACb,aAAc,CACZ+C,KAAM,GACN1B,UAAW,CAAC,QAAS,oBAGzBlB,YAAa,CACX,YAAa,WACb,aAAc,CACZ4C,KAAM,GACN1B,UAAW,CAAC,QAAS,oBAGzBjB,cAAe,CACb,YAAa,WACb,aAAc,CACZ2C,KAAM,GACN1B,UAAW,CAAC,QAAS,oBAGzBhB,eAAgB,CACd,YAAa,WACb,aAAc,CACZ0C,KAAM,GACN1B,UAAW,CAAC,QAAS,oBAGzBf,cAAe,CACb,YAAa,WACb,aAAc,CACZyC,KAAM,GACN1B,UAAW,CAAC,QAAS,qBA6DrB2B,SAZkBV,IACtB9B,EAAY8B,EAAK,MAad,C","sources":["pages/Admin/CssAndHtml/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type * as Type from '@/common/interface';\nimport { getPageCustom, putPageCustom } from '@/services';\nimport { SchemaForm, JSONSchema, initFormData, UISchema } from '@/components';\nimport { useToast } from '@/hooks';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { customizeStore } from '@/stores';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.css_and_html',\n  });\n  const Toast = useToast();\n  const schema: JSONSchema = {\n    title: t('page_title'),\n    properties: {\n      custom_css: {\n        type: 'string',\n        title: t('custom_css.label'),\n        description: t('custom_css.text'),\n      },\n      custom_head: {\n        type: 'string',\n        title: t('head.label'),\n        description: t('head.text'),\n      },\n      custom_header: {\n        type: 'string',\n        title: t('header.label'),\n        description: t('header.text'),\n      },\n      custom_sidebar: {\n        type: 'string',\n        title: t('sidebar.label'),\n        description: t('sidebar.text'),\n      },\n      custom_footer: {\n        type: 'string',\n        title: t('footer.label'),\n        description: t('footer.text'),\n      },\n    },\n  };\n  const uiSchema: UISchema = {\n    custom_css: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n        className: ['small', 'font-monospace'],\n      },\n    },\n    custom_head: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n        className: ['small', 'font-monospace'],\n      },\n    },\n    custom_header: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n        className: ['small', 'font-monospace'],\n      },\n    },\n    custom_sidebar: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n        className: ['small', 'font-monospace'],\n      },\n    },\n    custom_footer: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n        className: ['small', 'font-monospace'],\n      },\n    },\n  };\n  const [formData, setFormData] = useState(initFormData(schema));\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const reqParams: Type.AdminSettingsCustom = {\n      custom_css: formData.custom_css.value,\n      custom_head: formData.custom_head.value,\n      custom_header: formData.custom_header.value,\n      custom_sidebar: formData.custom_sidebar.value,\n      custom_footer: formData.custom_footer.value,\n    };\n\n    putPageCustom(reqParams)\n      .then(() => {\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        customizeStore.getState().update(reqParams);\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getPageCustom().then((setting) => {\n      if (setting) {\n        const formMeta = { ...formData };\n        formMeta.custom_css.value = setting.custom_css;\n        formMeta.custom_head.value = setting.custom_head;\n        formMeta.custom_header.value = setting.custom_header;\n        formMeta.custom_sidebar.value = setting.custom_sidebar;\n        formMeta.custom_footer.value = setting.custom_footer;\n        setFormData(formMeta);\n      }\n    });\n  }, []);\n\n  const handleOnChange = (data) => {\n    setFormData(data);\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <SchemaForm\n        schema={schema}\n        formData={formData}\n        onSubmit={onSubmit}\n        uiSchema={uiSchema}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"names":["Index","t","useTranslation","keyPrefix","Toast","useToast","schema","title","properties","custom_css","type","description","custom_head","custom_header","custom_sidebar","custom_footer","formData","setFormData","useState","initFormData","useEffect","getPageCustom","then","setting","formMeta","value","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","preventDefault","stopPropagation","reqParams","putPageCustom","onShow","msg","variant","customizeStore","getState","update","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","uiSchema","rows","onChange"],"sourceRoot":""}