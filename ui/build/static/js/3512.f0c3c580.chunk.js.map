{"version":3,"file":"static/js/3512.f0c3c580.chunk.js","mappings":"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","sources":["pages/Admin/SettingsUsers/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, FormEvent, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { useToast } from '@/hooks';\nimport { FormDataType } from '@/common/interface';\nimport { JSONSchema, SchemaForm, UISchema, initFormData } from '@/components';\nimport { SYSTEM_AVATAR_OPTIONS } from '@/common/constants';\nimport {\n  getUsersSetting,\n  putUsersSetting,\n  AdminSettingsUsers,\n} from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport * as Type from '@/common/interface';\nimport { siteInfoStore } from '@/stores';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.settings_users',\n  });\n  const Toast = useToast();\n  const { updateUsers: updateUsersStore } = siteInfoStore();\n  const schema: JSONSchema = {\n    title: t('title'),\n    properties: {\n      default_avatar: {\n        type: 'string',\n        title: t('avatar.label'),\n        description: t('avatar.text'),\n        enum: SYSTEM_AVATAR_OPTIONS?.map((v) => v.value),\n        enumNames: SYSTEM_AVATAR_OPTIONS?.map((v) => v.label),\n        default: 'system',\n      },\n      gravatar_base_url: {\n        type: 'string',\n        title: t('gravatar_base_url.label'),\n        description: t('gravatar_base_url.text'),\n      },\n      profile_editable: {\n        type: 'string',\n        title: t('profile_editable.title'),\n      },\n      allow_update_display_name: {\n        type: 'boolean',\n        title: 'allow_update_display_name',\n      },\n      allow_update_username: {\n        type: 'boolean',\n        title: 'allow_update_username',\n      },\n      allow_update_avatar: {\n        type: 'boolean',\n        title: 'allow_update_avatar',\n      },\n      allow_update_bio: {\n        type: 'boolean',\n        title: 'allow_update_bio',\n      },\n      allow_update_website: {\n        type: 'boolean',\n        title: 'allow_update_website',\n      },\n      allow_update_location: {\n        type: 'boolean',\n        title: 'allow_update_location',\n      },\n    },\n  };\n\n  const [formData, setFormData] = useState<FormDataType>(initFormData(schema));\n\n  const uiSchema: UISchema = {\n    default_avatar: {\n      'ui:widget': 'select',\n    },\n    gravatar_base_url: {\n      'ui:widget': 'input',\n    },\n    profile_editable: {\n      'ui:widget': 'legend',\n    },\n    allow_update_display_name: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_display_name.label'),\n        simplify: true,\n      },\n    },\n    allow_update_username: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_username.label'),\n        simplify: true,\n      },\n    },\n    allow_update_avatar: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_avatar.label'),\n        simplify: true,\n      },\n    },\n    allow_update_bio: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_bio.label'),\n        simplify: true,\n      },\n    },\n    allow_update_website: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_website.label'),\n        simplify: true,\n      },\n    },\n    allow_update_location: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('allow_update_location.label'),\n        field_class_name: 'mb-3',\n        simplify: true,\n      },\n    },\n  };\n\n  const onSubmit = (evt: FormEvent) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const reqParams: AdminSettingsUsers = {\n      allow_update_avatar: formData.allow_update_avatar.value,\n      allow_update_bio: formData.allow_update_bio.value,\n      allow_update_display_name: formData.allow_update_display_name.value,\n      allow_update_location: formData.allow_update_location.value,\n      allow_update_username: formData.allow_update_username.value,\n      allow_update_website: formData.allow_update_website.value,\n      default_avatar: formData.default_avatar.value,\n      gravatar_base_url: formData.gravatar_base_url.value,\n    };\n    putUsersSetting(reqParams)\n      .then(() => {\n        updateUsersStore(reqParams);\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getUsersSetting().then((resp) => {\n      if (!resp) {\n        return;\n      }\n      const formMeta: Type.FormDataType = {};\n      Object.keys(formData).forEach((k) => {\n        let v = resp[k];\n        if (k === 'default_avatar' && !v) {\n          v = 'system';\n        }\n        if (k === 'gravatar_base_url' && !v) {\n          v = 'https://cravatar.cn/avatar/';\n        }\n        formMeta[k] = { ...formData[k], value: v };\n      });\n      setFormData({ ...formData, ...formMeta });\n    });\n  }, []);\n\n  const handleOnChange = (data) => {\n    setFormData(data);\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('title')}</h3>\n      <SchemaForm\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        onSubmit={onSubmit}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"names":["Index","t","useTranslation","keyPrefix","Toast","useToast","updateUsers","updateUsersStore","siteInfoStore","schema","title","properties","default_avatar","type","description","enum","SYSTEM_AVATAR_OPTIONS","map","v","value","enumNames","label","default","gravatar_base_url","profile_editable","allow_update_display_name","allow_update_username","allow_update_avatar","allow_update_bio","allow_update_website","allow_update_location","formData","setFormData","useState","initFormData","uiSchema","simplify","field_class_name","useEffect","getUsersSetting","then","resp","formMeta","Object","keys","forEach","k","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","preventDefault","stopPropagation","reqParams","putUsersSetting","onShow","msg","variant","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange"],"sourceRoot":""}