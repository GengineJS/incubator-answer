{"version":3,"file":"static/js/5976.a49a5089.chunk.js","mappings":"oPAgCA,MAqIA,EArIkBA,KAChB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAC1CC,UAAW,gBAEPC,GAAQC,EAAAA,EAAAA,MAERC,EAAqB,CACzBC,MAAON,EAAE,cACTO,WAAY,CACVC,gBAAiB,CACfC,KAAM,UACNH,MAAON,EAAE,yBACTU,YAAaV,EAAE,wBACfW,SAAS,GAEXC,eAAgB,CACdH,KAAM,SACNH,MAAON,EAAE,wBACTU,YAAaV,EAAE,wBAEjBa,aAAc,CACZJ,KAAM,UACNH,MAAON,EAAE,sBACTU,YAAaV,EAAE,sBAEjBc,cAAe,CACbL,KAAM,SACNH,MAAON,EAAE,uBACTU,YAAaV,EAAE,yBAIfe,EAAqB,CACzBP,gBAAiB,CACf,YAAa,SACb,aAAc,CACZQ,MAAOhB,EAAE,2BAGbY,eAAgB,CACd,YAAa,WACb,aAAc,CACZK,KAAM,KAGVJ,aAAc,CACZ,YAAa,SACb,aAAc,CACZG,MAAOhB,EAAE,wBAGbc,cAAe,CACb,YAAa,WACb,aAAc,CACZG,KAAM,OAILC,EAAUC,IAAeC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAahB,KAqDtDiB,EAAAA,EAAAA,YAAU,MAbRC,EAAAA,EAAAA,MAA2BC,MAAMC,IAC3BC,MAAMC,QAAQF,EAAIb,kBACpBM,EAASN,eAAegB,MAAQH,EAAIb,eAAeiB,KAAK,OAE1DX,EAASL,aAAae,MAAQH,EAAIZ,aAClCK,EAASV,gBAAgBoB,MAAQH,EAAIjB,gBACjCkB,MAAMC,QAAQF,EAAIX,iBACpBI,EAASJ,cAAcc,MAAQH,EAAIX,cAAce,KAAK,OAExDV,EAAY,IAAKD,GAAW,GAKpB,GACT,IAMH,OACEY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAEhC,EAAE,iBACxBiC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACT9B,OAAQA,EACRa,SAAUA,EACVkB,SAjEYC,IAAS,IAADC,EAAAC,EACxBF,EAAIG,iBACJH,EAAII,kBACJ,IAAI7B,EAAiB,GACY,QAAjC0B,EAAIpB,EAASN,eAAegB,aAAK,IAAAU,GAA7BA,EAA+BI,SACjC9B,EAAiBM,EAASN,eAAegB,MAAMc,OAAOC,MAAM,OAE9D,IAAI7B,EAAgB,GACY,QAAhCyB,EAAIrB,EAASJ,cAAcc,aAAK,IAAAW,GAA5BA,EAA8BG,SAChC5B,EAAgBI,EAASJ,cAAcc,MAAMc,OAAOC,MAAM,OAE5D,MAAMC,EAAqC,CACzChC,iBACAE,gBACAD,aAAcK,EAASL,aAAae,MACpCpB,gBAAiBU,EAASV,gBAAgBoB,QAE5CiB,EAAAA,EAAAA,IAA0BD,GACvBpB,MAAK,KACJrB,EAAM2C,OAAO,CACXC,IAAK/C,EAAE,SAAU,CAAEE,UAAW,UAC9B8C,QAAS,YAEXC,EAAAA,GACGC,WACAC,OAAO,CAAE3C,gBAAiBoC,EAAUpC,iBAAkB,IAE1D4C,OAAOC,IACN,GAAIA,EAAIC,QAAS,CACf,MAAMC,GAAOC,EAAAA,EAAAA,IAAgBH,EAAKnC,GAClCC,EAAY,IAAKoC,IACjB,MAAME,EAAMC,SAASC,eAAeN,EAAIO,KAAK,GAAGC,cAChDC,EAAAA,EAAAA,IAAmBL,EACrB,IACA,EAgCA1C,SAAUA,EACVgD,SAZkBR,IACtBpC,EAAYoC,EAAK,MAad,C","sources":["pages/Admin/Write/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SchemaForm, JSONSchema, initFormData, UISchema } from '@/components';\nimport type * as Type from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport {\n  getRequireAndReservedTag,\n  postRequireAndReservedTag,\n} from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { writeSettingStore } from '@/stores';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.write',\n  });\n  const Toast = useToast();\n\n  const schema: JSONSchema = {\n    title: t('page_title'),\n    properties: {\n      restrict_answer: {\n        type: 'boolean',\n        title: t('restrict_answer.title'),\n        description: t('restrict_answer.text'),\n        default: true,\n      },\n      recommend_tags: {\n        type: 'string',\n        title: t('recommend_tags.label'),\n        description: t('recommend_tags.text'),\n      },\n      required_tag: {\n        type: 'boolean',\n        title: t('required_tag.title'),\n        description: t('required_tag.text'),\n      },\n      reserved_tags: {\n        type: 'string',\n        title: t('reserved_tags.label'),\n        description: t('reserved_tags.text'),\n      },\n    },\n  };\n  const uiSchema: UISchema = {\n    restrict_answer: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('restrict_answer.label'),\n      },\n    },\n    recommend_tags: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n      },\n    },\n    required_tag: {\n      'ui:widget': 'switch',\n      'ui:options': {\n        label: t('required_tag.label'),\n      },\n    },\n    reserved_tags: {\n      'ui:widget': 'textarea',\n      'ui:options': {\n        rows: 10,\n      },\n    },\n  };\n  const [formData, setFormData] = useState(initFormData(schema));\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    let recommend_tags = [];\n    if (formData.recommend_tags.value?.trim()) {\n      recommend_tags = formData.recommend_tags.value.trim().split('\\n');\n    }\n    let reserved_tags = [];\n    if (formData.reserved_tags.value?.trim()) {\n      reserved_tags = formData.reserved_tags.value.trim().split('\\n');\n    }\n    const reqParams: Type.AdminSettingsWrite = {\n      recommend_tags,\n      reserved_tags,\n      required_tag: formData.required_tag.value,\n      restrict_answer: formData.restrict_answer.value,\n    };\n    postRequireAndReservedTag(reqParams)\n      .then(() => {\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        writeSettingStore\n          .getState()\n          .update({ restrict_answer: reqParams.restrict_answer });\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const initData = () => {\n    getRequireAndReservedTag().then((res) => {\n      if (Array.isArray(res.recommend_tags)) {\n        formData.recommend_tags.value = res.recommend_tags.join('\\n');\n      }\n      formData.required_tag.value = res.required_tag;\n      formData.restrict_answer.value = res.restrict_answer;\n      if (Array.isArray(res.reserved_tags)) {\n        formData.reserved_tags.value = res.reserved_tags.join('\\n');\n      }\n      setFormData({ ...formData });\n    });\n  };\n\n  useEffect(() => {\n    initData();\n  }, []);\n\n  const handleOnChange = (data) => {\n    setFormData(data);\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <SchemaForm\n        schema={schema}\n        formData={formData}\n        onSubmit={onSubmit}\n        uiSchema={uiSchema}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"names":["Index","t","useTranslation","keyPrefix","Toast","useToast","schema","title","properties","restrict_answer","type","description","default","recommend_tags","required_tag","reserved_tags","uiSchema","label","rows","formData","setFormData","useState","initFormData","useEffect","getRequireAndReservedTag","then","res","Array","isArray","value","join","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","_formData$recommend_t","_formData$reserved_ta","preventDefault","stopPropagation","trim","split","reqParams","postRequireAndReservedTag","onShow","msg","variant","writeSettingStore","getState","update","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange"],"sourceRoot":""}