{"version":3,"file":"static/js/7093.f9950867.chunk.js","mappings":"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","sources":["pages/Users/Settings/Account/components/ModifyEmail/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { FC, FormEvent, useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useTranslation } from 'react-i18next';\n\nimport type * as Type from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport { useCaptchaPlugin } from '@/utils/pluginKit';\nimport { getLoggedUserInfo, changeEmail } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.account',\n  });\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState<Type.FormDataType>({\n    e_mail: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    pass: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n  const [userInfo, setUserInfo] = useState<Type.UserInfoRes>();\n  const toast = useToast();\n  const emailCaptcha = useCaptchaPlugin('edit_userinfo');\n\n  useEffect(() => {\n    getLoggedUserInfo().then((resp) => {\n      setUserInfo(resp);\n    });\n  }, []);\n\n  const handleChange = (params: Type.FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    const { e_mail, pass } = formData;\n\n    if (!e_mail.value) {\n      bol = false;\n      formData.e_mail = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('new_email.msg'),\n      };\n    }\n\n    if (!pass.value) {\n      bol = false;\n      formData.pass = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('pass.msg'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const errObj = Object.keys(formData).filter(\n        (key) => formData[key].isInvalid,\n      );\n      const ele = document.getElementById(errObj[0]);\n      scrollToElementTop(ele);\n    }\n    return bol;\n  };\n\n  const initFormData = () => {\n    setFormData({\n      e_mail: {\n        value: '',\n        isInvalid: false,\n        errorMsg: '',\n      },\n      pass: {\n        value: '',\n        isInvalid: false,\n        errorMsg: '',\n      },\n    });\n  };\n\n  const postEmail = (event?: any) => {\n    if (event) {\n      event.preventDefault();\n    }\n    const params: any = {\n      e_mail: formData.e_mail.value,\n      pass: formData.pass.value,\n    };\n\n    const imgCode = emailCaptcha?.getCaptcha();\n    if (imgCode?.verify) {\n      params.captcha_code = imgCode.captcha_code;\n      params.captcha_id = imgCode.captcha_id;\n    }\n    changeEmail(params)\n      .then(async () => {\n        await emailCaptcha?.close();\n        setStep(1);\n        toast.onShow({\n          msg: t('change_email_info'),\n          variant: 'warning',\n        });\n        initFormData();\n      })\n      .catch((err) => {\n        if (err.isError) {\n          emailCaptcha?.handleCaptchaError(err.list);\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n    if (!emailCaptcha) {\n      postEmail();\n      return;\n    }\n    emailCaptcha.check(() => {\n      postEmail();\n    });\n  };\n\n  return (\n    <div>\n      {step === 1 && (\n        <Form>\n          <Form.Group controlId=\"oldEmail\" className=\"mb-3\">\n            <Form.Label>{t('email.label')}</Form.Label>\n            <Form.Control\n              type=\"text\"\n              disabled\n              defaultValue={userInfo?.e_mail?.replace(\n                /(.{2})(.+)(@.+)/i,\n                '$1****$3',\n              )}\n            />\n          </Form.Group>\n\n          <Button\n            variant=\"outline-secondary\"\n            onClick={() => {\n              setStep(2);\n            }}>\n            {t('change_email_btn')}\n          </Button>\n        </Form>\n      )}\n      {step === 2 && (\n        <Form noValidate onSubmit={handleSubmit}>\n          <Form.Group controlId=\"pass\" className=\"mb-3\">\n            <Form.Label>{t('pass.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"new-password\"\n              required\n              type=\"password\"\n              isInvalid={formData.pass.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  pass: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.pass.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group controlId=\"e_mail\" className=\"mb-3\">\n            <Form.Label>{t('new_email.label')}</Form.Label>\n            <Form.Control\n              autoComplete=\"off\"\n              required\n              type=\"email\"\n              placeholder=\"\"\n              value={formData.e_mail.value}\n              isInvalid={formData.e_mail.isInvalid}\n              onChange={(e) =>\n                handleChange({\n                  e_mail: {\n                    value: e.target.value,\n                    isInvalid: false,\n                    errorMsg: '',\n                  },\n                })\n              }\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {formData.e_mail.errorMsg}\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <div>\n            <Button type=\"submit\" variant=\"primary\" className=\"me-2\">\n              {t('save', { keyPrefix: 'btns' })}\n            </Button>\n\n            <Button variant=\"link\" onClick={() => setStep(1)}>\n              {t('cancel', { keyPrefix: 'btns' })}\n            </Button>\n          </div>\n        </Form>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","_userInfo$e_mail","t","useTranslation","keyPrefix","step","setStep","useState","formData","setFormData","e_mail","value","isInvalid","errorMsg","pass","userInfo","setUserInfo","toast","useToast","emailCaptcha","useCaptchaPlugin","useEffect","getLoggedUserInfo","then","resp","handleChange","params","postEmail","event","preventDefault","imgCode","getCaptcha","verify","captcha_code","captcha_id","changeEmail","async","close","onShow","msg","variant","catch","err","isError","handleCaptchaError","list","data","handleFormError","ele","document","getElementById","error_field","scrollToElementTop","_jsxs","children","Form","Group","controlId","className","_jsx","Label","Control","type","disabled","defaultValue","replace","Button","onClick","noValidate","onSubmit","stopPropagation","checkValidated","bol","errObj","Object","keys","filter","key","check","autoComplete","required","onChange","e","target","Feedback","placeholder","React"],"sourceRoot":""}