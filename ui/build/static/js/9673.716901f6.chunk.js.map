{"version":3,"file":"static/js/9673.716901f6.chunk.js","mappings":"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","sources":["pages/Admin/Themes/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type * as Type from '@/common/interface';\nimport { getThemeSetting, putThemeSetting } from '@/services';\nimport { SchemaForm, JSONSchema, initFormData, UISchema } from '@/components';\nimport { useToast } from '@/hooks';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { themeSettingStore } from '@/stores';\nimport { setupAppTheme } from '@/utils/localize';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'admin.themes',\n  });\n  const Toast = useToast();\n  const [themeSetting, setThemeSetting] = useState<Type.AdminSettingsTheme>();\n  const schema: JSONSchema = {\n    title: t('page_title'),\n    properties: {\n      themes: {\n        type: 'string',\n        title: t('themes.label'),\n        description: t('themes.text'),\n        enum: themeSetting?.theme_options?.map((_) => _.value),\n        enumNames: themeSetting?.theme_options?.map((_) => _.label),\n        default: themeSetting?.theme_options?.[0]?.value,\n      },\n      color_scheme: {\n        type: 'string',\n        title: t('color_scheme.label'),\n        enum: ['system', 'light', 'dark'],\n        enumNames: [\n          t('system_setting', { keyPrefix: 'btns' }),\n          t('light', { keyPrefix: 'btns' }),\n          t('dark', { keyPrefix: 'btns' }),\n        ],\n        default: themeSetting?.color_scheme,\n      },\n      navbar_style: {\n        type: 'string',\n        title: t('navbar_style.label'),\n        enum: ['colored', 'light'],\n        enumNames: ['Colored', 'Light'],\n        default: 'colored',\n      },\n      primary_color: {\n        type: 'string',\n        title: t('primary_color.label'),\n        description: t('primary_color.text'),\n        default: '#0033FF',\n      },\n    },\n  };\n  const uiSchema: UISchema = {\n    themes: {\n      'ui:widget': 'select',\n    },\n    color_scheme: {\n      'ui:widget': 'select',\n    },\n    navbar_style: {\n      'ui:widget': 'select',\n    },\n    primary_color: {\n      'ui:widget': 'input_group',\n      'ui:options': {\n        inputType: 'color',\n        suffixBtnOptions: {\n          text: '',\n          variant: 'outline-secondary',\n          iconName: 'arrow-counterclockwise',\n          actionType: 'click',\n          title: t('reset', { keyPrefix: 'btns' }),\n          // eslint-disable-next-line @typescript-eslint/no-use-before-define\n          clickCallback: () => resetPrimaryScheme(),\n        },\n      },\n    },\n  };\n\n  const [formData, setFormData] = useState(initFormData(schema));\n  const { update: updateThemeSetting } = themeSettingStore((_) => _);\n\n  const resetPrimaryScheme = () => {\n    const formMeta = { ...formData };\n    formMeta.primary_color.value = '#0033FF';\n    setFormData({ ...formMeta });\n  };\n\n  const onSubmit = (evt) => {\n    evt.preventDefault();\n    evt.stopPropagation();\n    const themeName = formData.themes.value;\n    const reqParams: Type.AdminSettingsTheme = {\n      theme: themeName,\n      color_scheme: formData.color_scheme.value,\n      theme_config: {\n        [themeName]: {\n          navbar_style: formData.navbar_style.value,\n          primary_color: formData.primary_color.value,\n        },\n      },\n    };\n\n    putThemeSetting(reqParams)\n      .then(() => {\n        Toast.onShow({\n          msg: t('update', { keyPrefix: 'toast' }),\n          variant: 'success',\n        });\n        updateThemeSetting(reqParams);\n        setupAppTheme();\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  useEffect(() => {\n    getThemeSetting().then((setting) => {\n      if (setting) {\n        setThemeSetting(setting);\n        const themeName = setting.theme;\n        const themeConfig = setting.theme_config[themeName];\n        const formMeta = { ...formData };\n        formMeta.themes.value = themeName;\n        formMeta.navbar_style.value = themeConfig?.navbar_style;\n        formMeta.primary_color.value = themeConfig?.primary_color;\n        formData.color_scheme.value = setting?.color_scheme || 'system';\n        setFormData({ ...formMeta });\n      }\n    });\n  }, []);\n\n  const handleOnChange = (cd) => {\n    setFormData(cd);\n    const themeConfig = themeSetting?.theme_config[cd.themes.value];\n    if (themeConfig) {\n      themeConfig.navbar_style = cd.navbar_style.value;\n      themeConfig.primary_color = cd.primary_color.value;\n      setThemeSetting({\n        ...themeSetting,\n        theme: themeSetting?.theme,\n        theme_config: themeSetting?.theme_config,\n      });\n    }\n  };\n\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('page_title')}</h3>\n      <SchemaForm\n        schema={schema}\n        formData={formData}\n        onSubmit={onSubmit}\n        uiSchema={uiSchema}\n        onChange={handleOnChange}\n      />\n    </>\n  );\n};\n\nexport default Index;\n"],"names":["Index","_themeSetting$theme_o","_themeSetting$theme_o2","_themeSetting$theme_o3","_themeSetting$theme_o4","t","useTranslation","keyPrefix","Toast","useToast","themeSetting","setThemeSetting","useState","schema","title","properties","themes","type","description","enum","theme_options","map","_","value","enumNames","label","default","color_scheme","navbar_style","primary_color","uiSchema","inputType","suffixBtnOptions","text","variant","iconName","actionType","clickCallback","resetPrimaryScheme","formData","setFormData","initFormData","update","updateThemeSetting","themeSettingStore","formMeta","useEffect","getThemeSetting","then","setting","themeName","theme","themeConfig","theme_config","_jsxs","_Fragment","children","_jsx","className","SchemaForm","onSubmit","evt","preventDefault","stopPropagation","reqParams","putThemeSetting","onShow","msg","setupAppTheme","catch","err","isError","data","handleFormError","ele","document","getElementById","list","error_field","scrollToElementTop","onChange","cd"],"sourceRoot":""}