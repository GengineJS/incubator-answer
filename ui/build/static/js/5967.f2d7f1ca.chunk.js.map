{"version":3,"file":"static/js/5967.f2d7f1ca.chunk.js","mappings":"mPA6BA,MAAMA,EAAQA,KACZ,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,GAAe,cAAe,CAC1CC,UAAW,uBAEPC,EAAiBC,EAAAA,GAAoBC,WAAWC,KAChDC,GAAQC,EAAAA,EAAAA,OACPC,EAAOC,IAAYC,EAAAA,EAAAA,aACnBC,EAAUC,IAAeF,EAAAA,EAAAA,UAAuB,CACrDG,SAAU,CACRC,MAAOZ,EAAeW,SACtBE,WAAW,EACXC,SAAU,IAEZC,aAAc,CACZH,MAAOZ,EAAee,cAAgB,UACtCF,WAAW,EACXC,SAAU,MAGRE,EAAqB,CACzBC,MAAOpB,EAAE,WACTqB,WAAY,CACVP,SAAU,CACRQ,KAAM,SACNF,MAAOpB,EAAE,cACTuB,YAAavB,EAAE,aACfwB,KAAW,OAALf,QAAK,IAALA,OAAK,EAALA,EAAOgB,KAAKC,GAAMA,EAAEX,QAC1BY,UAAgB,OAALlB,QAAK,IAALA,OAAK,EAALA,EAAOgB,KAAKC,GAAMA,EAAEE,QAC/BC,QAAS1B,EAAeW,UAE1BI,aAAc,CACZI,KAAM,SACNF,MAAOpB,EAAE,qBAAsB,CAAEE,UAAW,iBAC5CsB,KAAM,CAAC,UAAW,SAAU,QAAS,QACrCG,UAAW,CACT3B,EAAE,UAAW,CAAEE,UAAW,SAC1BF,EAAE,iBAAkB,CAAEE,UAAW,SACjCF,EAAE,QAAS,CAAEE,UAAW,SACxBF,EAAE,OAAQ,CAAEE,UAAW,UAEzB2B,QAAS1B,EAAee,gBAoD9B,OAHAY,EAAAA,EAAAA,YAAU,KAnCOC,WACf,MAAMC,QAAyBC,EAAAA,GAAAA,sBAC/BpB,EAAY,IACPD,EACHE,SAAU,IACLF,EAASE,SACZC,MAAOZ,EAAeW,UAAYkB,EAAI,GAAGjB,SAG7CL,EAASsB,EAAI,EA2BbE,EAAU,GACT,KAEDC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SAAErC,EAAE,cACxBsC,EAAAA,EAAAA,KAACE,EAAAA,EAAU,CACTrB,OAAQA,EACRsB,SApDqB,CACzB3B,SAAU,CACR,YAAa,UAEfI,aAAc,CACZ,YAAa,WAgDXN,SAAUA,EACV8B,SAjCkBC,IACtB9B,EAAY8B,EAAE,EAiCVC,SA/BgBC,IACpBA,EAAMC,iBACN,MAAMC,EAAS,CACbjC,SAAUF,EAASE,SAASC,MAC5BG,aAAcN,EAASM,aAAaH,QAEtCiC,EAAAA,EAAAA,IAAoBD,GAAQE,MAAK,KAC/B7C,EAAAA,GAAoBC,WAAW6C,OAAO,IACjC/C,KACA4C,IAELd,EAAAA,GAAAA,mBACAA,EAAAA,GAAAA,gBACA1B,EAAM4C,OAAO,CACXC,IAAKpD,EAAE,SAAU,CAAEE,UAAW,UAC9BmD,QAAS,WACT,GACF,MAgBC,EAIP,EAAeC,EAAAA,KAAWvD,E","sources":["pages/Users/Settings/Interface/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, FormEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport type { LangsType, FormDataType } from '@/common/interface';\nimport { useToast } from '@/hooks';\nimport { updateUserInterface } from '@/services';\nimport { localize } from '@/utils';\nimport { loggedUserInfoStore } from '@/stores';\nimport { SchemaForm, JSONSchema, UISchema } from '@/components';\n\nconst Index = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'settings.interface',\n  });\n  const loggedUserInfo = loggedUserInfoStore.getState().user;\n  const toast = useToast();\n  const [langs, setLangs] = useState<LangsType[]>();\n  const [formData, setFormData] = useState<FormDataType>({\n    language: {\n      value: loggedUserInfo.language,\n      isInvalid: false,\n      errorMsg: '',\n    },\n    color_scheme: {\n      value: loggedUserInfo.color_scheme || 'default',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n  const schema: JSONSchema = {\n    title: t('heading'),\n    properties: {\n      language: {\n        type: 'string',\n        title: t('lang.label'),\n        description: t('lang.text'),\n        enum: langs?.map((_) => _.value),\n        enumNames: langs?.map((_) => _.label),\n        default: loggedUserInfo.language,\n      },\n      color_scheme: {\n        type: 'string',\n        title: t('color_scheme.label', { keyPrefix: 'admin.themes' }),\n        enum: ['default', 'system', 'light', 'dark'],\n        enumNames: [\n          t('default', { keyPrefix: 'btns' }),\n          t('system_setting', { keyPrefix: 'btns' }),\n          t('light', { keyPrefix: 'btns' }),\n          t('dark', { keyPrefix: 'btns' }),\n        ],\n        default: loggedUserInfo.color_scheme,\n      },\n    },\n  };\n\n  const uiSchema: UISchema = {\n    language: {\n      'ui:widget': 'select',\n    },\n    color_scheme: {\n      'ui:widget': 'select',\n    },\n  };\n\n  const getLangs = async () => {\n    const res: LangsType[] = await localize.loadLanguageOptions();\n    setFormData({\n      ...formData,\n      language: {\n        ...formData.language,\n        value: loggedUserInfo.language || res[0].value,\n      },\n    });\n    setLangs(res);\n  };\n\n  const handleOnChange = (d) => {\n    setFormData(d);\n  };\n  const handleSubmit = (event: FormEvent) => {\n    event.preventDefault();\n    const params = {\n      language: formData.language.value,\n      color_scheme: formData.color_scheme.value,\n    };\n    updateUserInterface(params).then(() => {\n      loggedUserInfoStore.getState().update({\n        ...loggedUserInfo,\n        ...params,\n      });\n      localize.setupAppLanguage();\n      localize.setupAppTheme();\n      toast.onShow({\n        msg: t('update', { keyPrefix: 'toast' }),\n        variant: 'success',\n      });\n    });\n  };\n\n  useEffect(() => {\n    getLangs();\n  }, []);\n  return (\n    <>\n      <h3 className=\"mb-4\">{t('heading')}</h3>\n      <SchemaForm\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={formData}\n        onChange={handleOnChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default React.memo(Index);\n"],"names":["Index","t","useTranslation","keyPrefix","loggedUserInfo","loggedUserInfoStore","getState","user","toast","useToast","langs","setLangs","useState","formData","setFormData","language","value","isInvalid","errorMsg","color_scheme","schema","title","properties","type","description","enum","map","_","enumNames","label","default","useEffect","async","res","localize","getLangs","_jsxs","_Fragment","children","_jsx","className","SchemaForm","uiSchema","onChange","d","onSubmit","event","preventDefault","params","updateUserInterface","then","update","onShow","msg","variant","React"],"sourceRoot":""}