{"version":3,"file":"static/js/7431.9919eee5.chunk.js","mappings":"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","sources":["pages/Tags/Create/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport classNames from 'classnames';\n\nimport { usePageTags, usePromptWithUnload } from '@/hooks';\nimport { Editor, EditorRef } from '@/components';\nimport { loggedUserInfoStore } from '@/stores';\nimport type * as Type from '@/common/interface';\nimport { createTag } from '@/services';\nimport { handleFormError, scrollToElementTop } from '@/utils';\nimport { TAG_SLUG_NAME_MAX_LENGTH } from '@/common/constants';\n\ninterface FormDataItem {\n  displayName: Type.FormValue<string>;\n  slugName: Type.FormValue<string>;\n  description: Type.FormValue<string>;\n}\n\nconst Index = () => {\n  const initFormData = {\n    displayName: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    slugName: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n    description: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  };\n  const { role_id = 1 } = loggedUserInfoStore((state) => state.user);\n  const navigate = useNavigate();\n  const { t } = useTranslation('translation', { keyPrefix: 'tag_modal' });\n  const [focusType, setForceType] = useState('');\n\n  const [formData, setFormData] = useState<FormDataItem>(initFormData);\n  const [immData] = useState(initFormData);\n  const [contentChanged, setContentChanged] = useState(false);\n\n  const editorRef = useRef<EditorRef>({\n    getHtml: () => '',\n  });\n\n  usePromptWithUnload({\n    when: contentChanged,\n  });\n\n  useEffect(() => {\n    const { displayName, slugName, description } = formData;\n    const {\n      displayName: display_name,\n      slugName: slug_name,\n      description: original_text,\n    } = immData;\n    if (!display_name || !slug_name || !original_text) {\n      return;\n    }\n\n    if (\n      display_name.value !== displayName.value ||\n      slug_name.value !== slugName.value ||\n      original_text.value !== description.value\n    ) {\n      setContentChanged(true);\n    } else {\n      setContentChanged(false);\n    }\n  }, [\n    formData.displayName.value,\n    formData.slugName.value,\n    formData.description.value,\n  ]);\n\n  const handleDescriptionChange = (value: string) =>\n    setFormData({\n      ...formData,\n      description: { ...formData.description, value, isInvalid: false },\n    });\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n    let errObjKey = '';\n    const { displayName, slugName } = formData;\n\n    if (!displayName.value) {\n      bol = false;\n      errObjKey = 'display_name';\n      formData.displayName = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('form.fields.display_name.msg.empty'),\n      };\n    } else if (displayName.value.length > TAG_SLUG_NAME_MAX_LENGTH) {\n      bol = false;\n      errObjKey = 'display_name';\n      formData.displayName = {\n        value: displayName.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.display_name.msg.range'),\n      };\n    } else {\n      formData.displayName = {\n        value: displayName.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    if (!slugName.value) {\n      bol = false;\n      errObjKey = 'slug_name';\n      formData.slugName = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('form.fields.slug_name.msg.empty'),\n      };\n    } else if (slugName.value.length > TAG_SLUG_NAME_MAX_LENGTH) {\n      bol = false;\n      errObjKey = 'slug_name';\n      formData.slugName = {\n        value: slugName.value,\n        isInvalid: true,\n        errorMsg: t('form.fields.slug_name.msg.range'),\n      };\n    } else {\n      formData.slugName = {\n        value: slugName.value,\n        isInvalid: false,\n        errorMsg: '',\n      };\n    }\n\n    setFormData({\n      ...formData,\n    });\n\n    if (!bol) {\n      const ele = document.getElementById(errObjKey);\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setContentChanged(false);\n\n    if (!checkValidated()) {\n      return;\n    }\n\n    const params = {\n      display_name: formData.displayName.value,\n      slug_name: formData.slugName.value,\n      original_text: formData.description.value,\n    };\n    createTag(params)\n      .then((res) => {\n        navigate(`/tags/${encodeURIComponent(res.slug_name)}/info`, {\n          replace: true,\n        });\n      })\n      .catch((err) => {\n        if (err.isError) {\n          const data = handleFormError(err, formData, [\n            { from: 'display_name', to: 'displayName' },\n            { from: 'slug_name', to: 'slugName' },\n            { from: 'original_text', to: 'description' },\n          ]);\n          setFormData({ ...data });\n          const ele = document.getElementById(err.list[0].error_field);\n          scrollToElementTop(ele);\n        }\n      });\n  };\n\n  const handleDisplayNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      displayName: {\n        ...formData.displayName,\n        value: e.currentTarget.value,\n        isInvalid: false,\n      },\n    });\n  };\n\n  const handleSlugNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      slugName: {\n        ...formData.slugName,\n        value: e.currentTarget.value,\n        isInvalid: false,\n      },\n    });\n  };\n\n  usePageTags({\n    title: t('create_tag', { keyPrefix: 'page_title' }),\n  });\n\n  return (\n    <div className=\"pt-4 mb-5\">\n      <h3 className=\"mb-4\">{t('title')}</h3>\n      <Row>\n        <Col className=\"page-main flex-auto\">\n          <Form noValidate onSubmit={handleSubmit}>\n            <Form.Group controlId=\"display_name\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.display_name.label')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.displayName.value}\n                isInvalid={formData.displayName.isInvalid}\n                disabled={role_id !== 2 && role_id !== 3}\n                onChange={handleDisplayNameChange}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.displayName.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group controlId=\"slug_name\" className=\"mb-3\">\n              <Form.Label>{t('form.fields.slug_name.label')}</Form.Label>\n              <Form.Control\n                type=\"text\"\n                value={formData.slugName.value}\n                isInvalid={formData.slugName.isInvalid}\n                disabled={role_id !== 2 && role_id !== 3}\n                onChange={handleSlugNameChange}\n              />\n              <Form.Text as=\"div\">{t('form.fields.slug_name.desc')}</Form.Text>\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.slugName.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group controlId=\"description\" className=\"mt-4\">\n              <Form.Label>{t('form.fields.desc.label')}</Form.Label>\n              <Editor\n                value={formData.description.value}\n                onChange={handleDescriptionChange}\n                className={classNames(\n                  'form-control p-0',\n                  focusType === 'description' && 'focus',\n                )}\n                onFocus={() => {\n                  setForceType('description');\n                }}\n                onBlur={() => {\n                  setForceType('');\n                }}\n                ref={editorRef}\n              />\n              <Form.Control\n                value={formData.description.value}\n                type=\"text\"\n                isInvalid={formData.description.isInvalid}\n                readOnly\n                hidden\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.description.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <div className=\"mt-3\">\n              <Button type=\"submit\">{t('btn_post')}</Button>\n            </div>\n          </Form>\n        </Col>\n        <Col className=\"page-right-side mt-4 mt-xl-0\">\n          <Card>\n            <Card.Header>\n              {t('title', { keyPrefix: 'how_to_format' })}\n            </Card.Header>\n            <Card.Body\n              className=\"fmt small\"\n              dangerouslySetInnerHTML={{\n                __html: t('desc', { keyPrefix: 'how_to_format' }),\n              }}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Index;\n"],"names":["Index","initFormData","displayName","value","isInvalid","errorMsg","slugName","description","role_id","loggedUserInfoStore","state","user","navigate","useNavigate","t","useTranslation","keyPrefix","focusType","setForceType","useState","formData","setFormData","immData","contentChanged","setContentChanged","editorRef","useRef","getHtml","usePromptWithUnload","when","useEffect","display_name","slug_name","original_text","usePageTags","title","_jsxs","className","children","_jsx","Row","Col","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","errObjKey","length","TAG_SLUG_NAME_MAX_LENGTH","ele","document","getElementById","scrollToElementTop","params","createTag","then","res","encodeURIComponent","replace","catch","err","isError","data","handleFormError","from","to","list","error_field","Group","controlId","Label","Control","type","disabled","onChange","e","currentTarget","Feedback","Text","as","Editor","classNames","onFocus","onBlur","ref","readOnly","hidden","Button","Card","Header","Body","dangerouslySetInnerHTML","__html"],"sourceRoot":""}