{"version":3,"file":"static/js/7044.44f584fc.chunk.js","mappings":"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","sources":["pages/Users/OauthBindEmail/index.tsx"],"sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { FC, memo, useState, useEffect } from 'react';\nimport { Container, Col, Form, Button } from 'react-bootstrap';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\n\nimport { Modal, WelcomeTitle } from '@/components';\nimport type { FormDataType } from '@/common/interface';\nimport { usePageTags } from '@/hooks';\nimport { loggedUserInfoStore } from '@/stores';\nimport { oAuthBindEmail, getLoggedUserInfo } from '@/services';\nimport Storage from '@/utils/storage';\nimport { LOGGED_TOKEN_STORAGE_KEY } from '@/common/constants';\nimport { handleFormError, scrollToElementTop } from '@/utils';\n\nconst Index: FC = () => {\n  const { t } = useTranslation('translation', {\n    keyPrefix: 'oauth_bind_email',\n  });\n  const navigate = useNavigate();\n  const [searchParams, setUrlSearchParams] = useSearchParams();\n  const updateUser = loggedUserInfoStore((state) => state.update);\n  const binding_key = searchParams.get('binding_key') || '';\n  const [showResult, setShowResult] = useState(false);\n\n  usePageTags({\n    title: t('confirm_email', { keyPrefix: 'page_title' }),\n  });\n  const [formData, setFormData] = useState<FormDataType>({\n    email: {\n      value: '',\n      isInvalid: false,\n      errorMsg: '',\n    },\n  });\n\n  const handleChange = (params: FormDataType) => {\n    setFormData({ ...formData, ...params });\n  };\n\n  const checkValidated = (): boolean => {\n    let bol = true;\n\n    if (!formData.email.value) {\n      bol = false;\n      formData.email = {\n        value: '',\n        isInvalid: true,\n        errorMsg: t('email.msg.empty'),\n      };\n    }\n    setFormData({\n      ...formData,\n    });\n    if (!bol) {\n      const ele = document.getElementById('email');\n      scrollToElementTop(ele);\n    }\n\n    return bol;\n  };\n\n  const getUserInfo = (token) => {\n    Storage.set(LOGGED_TOKEN_STORAGE_KEY, token);\n    getLoggedUserInfo().then((user) => {\n      updateUser(user);\n      setTimeout(() => {\n        navigate('/users/login?status=inactive', { replace: true });\n      }, 0);\n    });\n  };\n\n  const connectConfirm = () => {\n    Modal.confirm({\n      title: t('modal_title'),\n      content: t('modal_content'),\n      cancelText: t('modal_cancel'),\n      confirmText: t('modal_confirm'),\n      onConfirm: () => {\n        // send activation email\n        oAuthBindEmail({\n          binding_key,\n          email: formData.email.value,\n          must: true,\n        }).then((result) => {\n          if (result.access_token) {\n            getUserInfo(result.access_token);\n          } else {\n            searchParams.delete('binding_key');\n            setUrlSearchParams('');\n            setShowResult(true);\n          }\n        });\n      },\n      onCancel: () => {\n        setFormData({\n          email: {\n            value: '',\n            isInvalid: false,\n            errorMsg: '',\n          },\n        });\n      },\n    });\n  };\n\n  const handleSubmit = (event: any) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!checkValidated()) {\n      return;\n    }\n\n    if (binding_key) {\n      oAuthBindEmail({\n        binding_key,\n        email: formData.email.value,\n        must: false,\n      })\n        .then((res) => {\n          if (res.email_exist_and_must_be_confirmed) {\n            connectConfirm();\n          }\n          if (res.access_token) {\n            getUserInfo(res.access_token);\n          }\n        })\n        .catch((err) => {\n          if (err.isError) {\n            const data = handleFormError(err, formData);\n            setFormData({ ...data });\n            const ele = document.getElementById(err.list[0].error_field);\n            scrollToElementTop(ele);\n          }\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (!binding_key) {\n      navigate('/', { replace: true });\n    }\n  }, []);\n  return (\n    <Container style={{ paddingTop: '4rem', paddingBottom: '6rem' }}>\n      <WelcomeTitle />\n      {showResult ? (\n        <Col md={6} className=\"mx-auto text-center\">\n          <p>\n            <Trans\n              i18nKey=\"inactive.first\"\n              values={{ mail: formData.email.value }}\n              components={{ bold: <strong /> }}\n            />\n          </p>\n          <p>{t('info', { keyPrefix: 'inactive' })}</p>\n        </Col>\n      ) : (\n        <Col className=\"mx-auto\" md={6} lg={4} xl={3}>\n          <div className=\"text-center mb-5\">{t('subtitle')}</div>\n          <Form noValidate onSubmit={handleSubmit} autoComplete=\"off\">\n            <Form.Group controlId=\"email\" className=\"mb-3\">\n              <Form.Label>{t('email.label')}</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                value={formData.email.value}\n                isInvalid={formData.email.isInvalid}\n                onChange={(e) => {\n                  handleChange({\n                    email: {\n                      value: e.target.value,\n                      isInvalid: false,\n                      errorMsg: '',\n                    },\n                  });\n                }}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {formData.email.errorMsg}\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <div className=\"d-grid mb-3\">\n              <Button variant=\"primary\" type=\"submit\">\n                {t('btn_update')}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      )}\n    </Container>\n  );\n};\n\nexport default memo(Index);\n"],"names":["Index","t","useTranslation","keyPrefix","navigate","useNavigate","searchParams","setUrlSearchParams","useSearchParams","updateUser","loggedUserInfoStore","state","update","binding_key","get","showResult","setShowResult","useState","usePageTags","title","formData","setFormData","email","value","isInvalid","errorMsg","getUserInfo","token","Storage","set","LOGGED_TOKEN_STORAGE_KEY","getLoggedUserInfo","then","user","setTimeout","replace","useEffect","_jsxs","Container","style","paddingTop","paddingBottom","children","_jsx","WelcomeTitle","Col","md","className","Trans","i18nKey","values","mail","components","bold","lg","xl","Form","noValidate","onSubmit","event","preventDefault","stopPropagation","checkValidated","bol","ele","document","getElementById","scrollToElementTop","oAuthBindEmail","must","res","email_exist_and_must_be_confirmed","Modal","confirm","content","cancelText","confirmText","onConfirm","result","access_token","delete","onCancel","catch","err","isError","data","handleFormError","list","error_field","autoComplete","Group","controlId","Label","Control","required","type","onChange","e","params","target","Feedback","Button","variant","memo"],"sourceRoot":""}